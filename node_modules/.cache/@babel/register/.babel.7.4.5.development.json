{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\login-test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login-test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login-test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login-test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
        "sourceFileName": "login-test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireWildcard(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n(0, _chai.use)(_chaiHttp[\"default\"]); //const API_PREFIX = '/api/v1';\n\ndescribe('user can login', function (done) {\n  it('should get username and password then return successful', function (done) {\n    loggedInUser.request(_app[\"default\"]).post('app/v1/auth/login').set({\n      'Content-Type': 'application/json'\n    }).send({\n      username: 'martini',\n      password: 'xxxfff546tg'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body.status).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n\n      _chai.assert.strictEqual(res.body, 200, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.statusCode, 200, 'should return 200 status code');\n\n      _chai.assert.isString(res.body.data.username, 'username should be a string');\n\n      _chai.assert.isNotNull(res.body.data, 'password should not be null');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('should return error message if username and password is incorrect', function (done) {\n    loggedInUser.request(_app[\"default\"]).post('app/v1/auth/login').set({\n      'Content-Type': 'application/json'\n    }).send({\n      username: 'martini',\n      password: 'xxxfff546tg'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.equal('username or password is incorrect');\n\n      _chai.assert.strictEqual(res.body, 400, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.body.error, incorrect, 'unexpected error', 'should return error');\n\n      _chai.assert.isNotObject(res.body.data, 'expected an object');\n\n      _chai.assert.isNull(res.body.data, 'username or password should not be null');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLXRlc3QuanMiXSwibmFtZXMiOlsiY2hhaUhUVFAiLCJkZXNjcmliZSIsImRvbmUiLCJpdCIsImxvZ2dlZEluVXNlciIsInJlcXVlc3QiLCJhcHAiLCJwb3N0Iiwic2V0Iiwic2VuZCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJlbmQiLCJlcnIiLCJyZXMiLCJzdGF0dXNDb2RlIiwidG8iLCJlcXVhbCIsImJvZHkiLCJzdGF0dXMiLCJiZSIsImFuIiwiYXNzZXJ0Iiwic3RyaWN0RXF1YWwiLCJpc1N0cmluZyIsImRhdGEiLCJpc05vdE51bGwiLCJlcnJvciIsImluY29ycmVjdCIsImlzTm90T2JqZWN0IiwiaXNOdWxsIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUdBOztBQUNBOzs7Ozs7QUFHQSxlQUFJQSxvQkFBSixFLENBRUE7O0FBRUFDLFFBQVEsQ0FBQyxnQkFBRCxFQUFtQixVQUFDQyxJQUFELEVBQVU7QUFDbkNDLEVBQUFBLEVBQUUsQ0FBQyx5REFBRCxFQUE0RCxVQUFDRCxJQUFELEVBQVU7QUFDdEVFLElBQUFBLFlBQVksQ0FBQ0MsT0FBYixDQUFxQkMsZUFBckIsRUFDR0MsSUFESCxDQUNRLG1CQURSLEVBRUdDLEdBRkgsQ0FFTztBQUNILHNCQUFnQjtBQURiLEtBRlAsRUFLR0MsSUFMSCxDQUtRO0FBQ0pDLE1BQUFBLFFBQVEsRUFBRSxTQUROO0FBRUpDLE1BQUFBLFFBQVEsRUFBRTtBQUZOLEtBTFIsRUFTR0MsR0FUSCxDQVNPLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pCLHdCQUFPQSxHQUFHLENBQUNDLFVBQVgsRUFBdUJDLEVBQXZCLENBQTBCQyxLQUExQixDQUFnQyxHQUFoQztBQUNBLHdCQUFPSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsTUFBaEIsRUFBd0JILEVBQXhCLENBQTJCQyxLQUEzQixDQUFpQyxHQUFqQztBQUNBLHdCQUFPSCxHQUFHLENBQUNJLElBQVgsRUFBaUJGLEVBQWpCLENBQW9CSSxFQUFwQixDQUF1QkMsRUFBdkIsQ0FBMEIsUUFBMUI7O0FBQ0FDLG1CQUFPQyxXQUFQLENBQW1CVCxHQUFHLENBQUNJLElBQXZCLEVBQTZCLEdBQTdCLEVBQWtDLCtCQUFsQzs7QUFDQUksbUJBQU9DLFdBQVAsQ0FBbUJULEdBQUcsQ0FBQ0MsVUFBdkIsRUFBbUMsR0FBbkMsRUFBd0MsK0JBQXhDOztBQUNBTyxtQkFBT0UsUUFBUCxDQUFnQlYsR0FBRyxDQUFDSSxJQUFKLENBQVNPLElBQVQsQ0FBY2YsUUFBOUIsRUFBd0MsNkJBQXhDOztBQUNBWSxtQkFBT0ksU0FBUCxDQUFpQlosR0FBRyxDQUFDSSxJQUFKLENBQVNPLElBQTFCLEVBQWdDLDZCQUFoQzs7QUFDQUgsbUJBQU9JLFNBQVAsQ0FBaUJiLEdBQWpCLEVBQXNCLGtCQUF0Qjs7QUFDQVgsTUFBQUEsSUFBSTtBQUNMLEtBbkJIO0FBb0JELEdBckJDLENBQUY7QUF1QkFDLEVBQUFBLEVBQUUsQ0FBQyxtRUFBRCxFQUFzRSxVQUFDRCxJQUFELEVBQVU7QUFDaEZFLElBQUFBLFlBQVksQ0FBQ0MsT0FBYixDQUFxQkMsZUFBckIsRUFDR0MsSUFESCxDQUNRLG1CQURSLEVBRUdDLEdBRkgsQ0FFTztBQUNILHNCQUFnQjtBQURiLEtBRlAsRUFLR0MsSUFMSCxDQUtRO0FBQ0pDLE1BQUFBLFFBQVEsRUFBRSxTQUROO0FBRUpDLE1BQUFBLFFBQVEsRUFBRTtBQUZOLEtBTFIsRUFTR0MsR0FUSCxDQVNPLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pCLHdCQUFPQSxHQUFHLENBQUNDLFVBQVgsRUFBdUJDLEVBQXZCLENBQTBCQyxLQUExQixDQUFnQyxHQUFoQztBQUNBLHdCQUFPSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsTUFBaEIsRUFBd0JILEVBQXhCLENBQTJCQyxLQUEzQixDQUFpQyxHQUFqQztBQUNBLHdCQUFPSCxHQUFHLENBQUNJLElBQVgsRUFBaUJGLEVBQWpCLENBQW9CSSxFQUFwQixDQUF1QkMsRUFBdkIsQ0FBMEIsUUFBMUI7QUFDQSx3QkFBT1AsR0FBRyxDQUFDSSxJQUFKLENBQVNTLEtBQWhCLEVBQXVCWCxFQUF2QixDQUEwQkMsS0FBMUIsQ0FBZ0MsbUNBQWhDOztBQUNBSyxtQkFBT0MsV0FBUCxDQUFtQlQsR0FBRyxDQUFDSSxJQUF2QixFQUE2QixHQUE3QixFQUFrQywrQkFBbEM7O0FBQ0FJLG1CQUFPQyxXQUFQLENBQW1CVCxHQUFHLENBQUNDLFVBQXZCLEVBQW1DLEdBQW5DLEVBQXdDLCtCQUF4Qzs7QUFDQU8sbUJBQU9DLFdBQVAsQ0FBbUJULEdBQUcsQ0FBQ0ksSUFBSixDQUFTUyxLQUE1QixFQUFtQ0MsU0FBbkMsRUFBOEMsa0JBQTlDLEVBQWtFLHFCQUFsRTs7QUFDQU4sbUJBQU9PLFdBQVAsQ0FBbUJmLEdBQUcsQ0FBQ0ksSUFBSixDQUFTTyxJQUE1QixFQUFrQyxvQkFBbEM7O0FBQ0FILG1CQUFPUSxNQUFQLENBQWNoQixHQUFHLENBQUNJLElBQUosQ0FBU08sSUFBdkIsRUFBNkIseUNBQTdCOztBQUNBSCxtQkFBT0ksU0FBUCxDQUFpQmIsR0FBakIsRUFBc0Isa0JBQXRCOztBQUNBWCxNQUFBQSxJQUFJO0FBQ0wsS0FyQkg7QUFzQkQsR0F2QkMsQ0FBRjtBQXdCRCxDQWhETyxDQUFSIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0LmdpdGh1Yi5pby1naC1wYWdlc1xcYXBpXFxzZXJ2ZXJcXHRlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSwge1xyXG4gIHVzZSwgZXhwZWN0LCBhc3NlcnQsXHJcbn0gZnJvbSAnY2hhaSc7XHJcbmltcG9ydCBjaGFpSFRUUCBmcm9tICdjaGFpLWh0dHAnO1xyXG5pbXBvcnQgYXBwIGZyb20gJy4uL2FwcCc7XHJcblxyXG5cclxudXNlKGNoYWlIVFRQKTtcclxuXHJcbi8vY29uc3QgQVBJX1BSRUZJWCA9ICcvYXBpL3YxJztcclxuXHJcbmRlc2NyaWJlKCd1c2VyIGNhbiBsb2dpbicsIChkb25lKSA9PiB7XHJcbiAgaXQoJ3Nob3VsZCBnZXQgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIHRoZW4gcmV0dXJuIHN1Y2Nlc3NmdWwnLCAoZG9uZSkgPT4ge1xyXG4gICAgbG9nZ2VkSW5Vc2VyLnJlcXVlc3QoYXBwKVxyXG4gICAgICAucG9zdCgnYXBwL3YxL2F1dGgvbG9naW4nKVxyXG4gICAgICAuc2V0KHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICBcdH0pXHJcbiAgICAgIC5zZW5kKHtcclxuICAgICAgICB1c2VybmFtZTogJ21hcnRpbmknLFxyXG4gICAgICAgIHBhc3N3b3JkOiAneHh4ZmZmNTQ2dGcnLFxyXG4gICAgICB9KVxyXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xyXG4gICAgICAgIGV4cGVjdChyZXMuc3RhdHVzQ29kZSkudG8uZXF1YWwoMjAwKTtcclxuICAgICAgICBleHBlY3QocmVzLmJvZHkuc3RhdHVzKS50by5lcXVhbCgyMDApO1xyXG4gICAgICAgIGV4cGVjdChyZXMuYm9keSkudG8uYmUuYW4oJ29iamVjdCcpO1xyXG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXMuYm9keSwgMjAwLCAnc2hvdWxkIHJldHVybiAyMDAgc3RhdHVzIGNvZGUnKTtcclxuICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocmVzLnN0YXR1c0NvZGUsIDIwMCwgJ3Nob3VsZCByZXR1cm4gMjAwIHN0YXR1cyBjb2RlJyk7XHJcbiAgICAgICAgYXNzZXJ0LmlzU3RyaW5nKHJlcy5ib2R5LmRhdGEudXNlcm5hbWUsICd1c2VybmFtZSBzaG91bGQgYmUgYSBzdHJpbmcnKTtcclxuICAgICAgICBhc3NlcnQuaXNOb3ROdWxsKHJlcy5ib2R5LmRhdGEsICdwYXNzd29yZCBzaG91bGQgbm90IGJlIG51bGwnKTtcclxuICAgICAgICBhc3NlcnQuaXNOb3ROdWxsKGVyciwgJ3VuZXhwZWN0ZWQgZXJyb3InKTtcclxuICAgICAgICBkb25lKCk7XHJcbiAgICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIHJldHVybiBlcnJvciBtZXNzYWdlIGlmIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBpcyBpbmNvcnJlY3QnLCAoZG9uZSkgPT4ge1xyXG4gICAgbG9nZ2VkSW5Vc2VyLnJlcXVlc3QoYXBwKVxyXG4gICAgICAucG9zdCgnYXBwL3YxL2F1dGgvbG9naW4nKVxyXG4gICAgICAuc2V0KHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9KVxyXG4gICAgICAuc2VuZCh7XHJcbiAgICAgICAgdXNlcm5hbWU6ICdtYXJ0aW5pJyxcclxuICAgICAgICBwYXNzd29yZDogJ3h4eGZmZjU0NnRnJyxcclxuICAgICAgfSlcclxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcclxuICAgICAgICBleHBlY3QocmVzLnN0YXR1c0NvZGUpLnRvLmVxdWFsKDQwMCk7XHJcbiAgICAgICAgZXhwZWN0KHJlcy5ib2R5LnN0YXR1cykudG8uZXF1YWwoNDAwKTtcclxuICAgICAgICBleHBlY3QocmVzLmJvZHkpLnRvLmJlLmFuKCdvYmplY3QnKTtcclxuICAgICAgICBleHBlY3QocmVzLmJvZHkuZXJyb3IpLnRvLmVxdWFsKCd1c2VybmFtZSBvciBwYXNzd29yZCBpcyBpbmNvcnJlY3QnKTtcclxuICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocmVzLmJvZHksIDQwMCwgJ3Nob3VsZCByZXR1cm4gMjAwIHN0YXR1cyBjb2RlJyk7XHJcbiAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJlcy5zdGF0dXNDb2RlLCA0MDAsICdzaG91bGQgcmV0dXJuIDIwMCBzdGF0dXMgY29kZScpO1xyXG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXMuYm9keS5lcnJvciwgaW5jb3JyZWN0LCAndW5leHBlY3RlZCBlcnJvcicsICdzaG91bGQgcmV0dXJuIGVycm9yJyk7XHJcbiAgICAgICAgYXNzZXJ0LmlzTm90T2JqZWN0KHJlcy5ib2R5LmRhdGEsICdleHBlY3RlZCBhbiBvYmplY3QnKTtcclxuICAgICAgICBhc3NlcnQuaXNOdWxsKHJlcy5ib2R5LmRhdGEsICd1c2VybmFtZSBvciBwYXNzd29yZCBzaG91bGQgbm90IGJlIG51bGwnKTtcclxuICAgICAgICBhc3NlcnQuaXNOb3ROdWxsKGVyciwgJ3VuZXhwZWN0ZWQgZXJyb3InKTtcclxuICAgICAgICBkb25lKCk7XHJcbiAgICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "login-test.js"
      ],
      "names": [
        "chaiHTTP",
        "describe",
        "done",
        "it",
        "loggedInUser",
        "request",
        "app",
        "post",
        "set",
        "send",
        "username",
        "password",
        "end",
        "err",
        "res",
        "statusCode",
        "to",
        "equal",
        "body",
        "status",
        "be",
        "an",
        "assert",
        "strictEqual",
        "isString",
        "data",
        "isNotNull",
        "error",
        "incorrect",
        "isNotObject",
        "isNull"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
      "sourcesContent": [
        "import chai, {\r\n  use, expect, assert,\r\n} from 'chai';\r\nimport chaiHTTP from 'chai-http';\r\nimport app from '../app';\r\n\r\n\r\nuse(chaiHTTP);\r\n\r\n//const API_PREFIX = '/api/v1';\r\n\r\ndescribe('user can login', (done) => {\r\n  it('should get username and password then return successful', (done) => {\r\n    loggedInUser.request(app)\r\n      .post('app/v1/auth/login')\r\n      .set({\r\n        'Content-Type': 'application/json',\r\n      \t})\r\n      .send({\r\n        username: 'martini',\r\n        password: 'xxxfff546tg',\r\n      })\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body.status).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        assert.strictEqual(res.body, 200, 'should return 200 status code');\r\n        assert.strictEqual(res.statusCode, 200, 'should return 200 status code');\r\n        assert.isString(res.body.data.username, 'username should be a string');\r\n        assert.isNotNull(res.body.data, 'password should not be null');\r\n        assert.isNotNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('should return error message if username and password is incorrect', (done) => {\r\n    loggedInUser.request(app)\r\n      .post('app/v1/auth/login')\r\n      .set({\r\n        'Content-Type': 'application/json',\r\n      })\r\n      .send({\r\n        username: 'martini',\r\n        password: 'xxxfff546tg',\r\n      })\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(400);\r\n        expect(res.body.status).to.equal(400);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.error).to.equal('username or password is incorrect');\r\n        assert.strictEqual(res.body, 400, 'should return 200 status code');\r\n        assert.strictEqual(res.statusCode, 400, 'should return 200 status code');\r\n        assert.strictEqual(res.body.error, incorrect, 'unexpected error', 'should return error');\r\n        assert.isNotObject(res.body.data, 'expected an object');\r\n        assert.isNull(res.body.data, 'username or password should not be null');\r\n        assert.isNotNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560104741688
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = app;\nexports[\"default\"] = _default;\n\nvar logger = require('morgan');\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser'); // import config from 'config';\n\n\nvar app = express();\nvar port = parseInt(process.env.PORT, 10) || 5000;\napp.use(logger('dev'));\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\napp.get('/api/v1', function (req, res) {\n  console.log(res.status(200).send({\n    Success: 'connected successfully',\n    Message: 'welcome to Automart app.'\n  }));\n});\napp.listen(port, function () {\n  return console.log(\"Automart server is running on port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJsb2dnZXIiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJwb3J0IiwicGFyc2VJbnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwic2VuZCIsIlN1Y2Nlc3MiLCJNZXNzYWdlIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQzs7Ozs7O2VBRWNBLEc7OztBQUVmLElBQU1DLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTFCLEMsQ0FDQTs7O0FBRUEsSUFBTUYsR0FBRyxHQUFHRyxPQUFPLEVBQW5CO0FBRUEsSUFBTUUsSUFBSSxHQUFHQyxRQUFRLENBQUNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFiLEVBQW1CLEVBQW5CLENBQVIsSUFBa0MsSUFBL0M7QUFDQVQsR0FBRyxDQUFDVSxHQUFKLENBQVFULE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFFQUQsR0FBRyxDQUFDVSxHQUFKLENBQVFOLFVBQVUsQ0FBQ08sVUFBWCxDQUFzQjtBQUM1QkMsRUFBQUEsUUFBUSxFQUFFO0FBRGtCLENBQXRCLENBQVI7QUFJQVosR0FBRyxDQUFDVSxHQUFKLENBQVFOLFVBQVUsQ0FBQ1MsSUFBWCxFQUFSO0FBRUFiLEdBQUcsQ0FBQ2MsR0FBSixDQUFRLFNBQVIsRUFBbUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDL0JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMvQkMsSUFBQUEsT0FBTyxFQUFFLHdCQURzQjtBQUUvQkMsSUFBQUEsT0FBTyxFQUFFO0FBRnNCLEdBQXJCLENBQVo7QUFLRCxDQU5EO0FBUUF0QixHQUFHLENBQUN1QixNQUFKLENBQVdsQixJQUFYLEVBQWlCO0FBQUEsU0FBTVksT0FBTyxDQUFDQyxHQUFSLDhDQUFrRGIsSUFBbEQsRUFBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0LmdpdGh1Yi5pby1naC1wYWdlc1xcYXBpXFxzZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyIgJ3VzZSBzdHJpY3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBwO1xyXG5cclxuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnbW9yZ2FuJyk7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG4vLyBpbXBvcnQgY29uZmlnIGZyb20gJ2NvbmZpZyc7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5jb25zdCBwb3J0ID0gcGFyc2VJbnQocHJvY2Vzcy5lbnYuUE9SVCwgMTApIHx8IDUwMDA7XHJcbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7XHJcbiAgZXh0ZW5kZWQ6IGZhbHNlLFxyXG59KSk7XHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbmFwcC5nZXQoJy9hcGkvdjEnLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zb2xlLmxvZyhyZXMuc3RhdHVzKDIwMCkuc2VuZCh7XHJcbiAgICBTdWNjZXNzOiAnY29ubmVjdGVkIHN1Y2Nlc3NmdWxseScsXHJcbiAgICBNZXNzYWdlOiAnd2VsY29tZSB0byBBdXRvbWFydCBhcHAuJyxcclxuXHJcbiAgfSkpO1xyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYEF1dG9tYXJ0IHNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApKTtcclxuXHJcbiBcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "logger",
        "require",
        "express",
        "bodyParser",
        "port",
        "parseInt",
        "process",
        "env",
        "PORT",
        "use",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "console",
        "log",
        "status",
        "send",
        "Success",
        "Message",
        "listen"
      ],
      "mappings": "AAAC;;;;;;eAEcA,G;;;AAEf,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B,C,CACA;;;AAEA,IAAMF,GAAG,GAAGG,OAAO,EAAnB;AAEA,IAAME,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAb,EAAmB,EAAnB,CAAR,IAAkC,IAA/C;AACAT,GAAG,CAACU,GAAJ,CAAQT,MAAM,CAAC,KAAD,CAAd;AAEAD,GAAG,CAACU,GAAJ,CAAQN,UAAU,CAACO,UAAX,CAAsB;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAtB,CAAR;AAIAZ,GAAG,CAACU,GAAJ,CAAQN,UAAU,CAACS,IAAX,EAAR;AAEAb,GAAG,CAACc,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC/BC,IAAAA,OAAO,EAAE,wBADsB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAArB,CAAZ;AAKD,CAND;AAQAtB,GAAG,CAACuB,MAAJ,CAAWlB,IAAX,EAAiB;AAAA,SAAMY,OAAO,CAACC,GAAR,8CAAkDb,IAAlD,EAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourcesContent": [
        " 'use strict';\r\n\r\nexport default app;\r\n\r\nconst logger = require('morgan');\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\n// import config from 'config';\r\n\r\nconst app = express();\r\n\r\nconst port = parseInt(process.env.PORT, 10) || 5000;\r\napp.use(logger('dev'));\r\n\r\napp.use(bodyParser.urlencoded({\r\n  extended: false,\r\n}));\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.get('/api/v1', (req, res) => {\r\n  console.log(res.status(200).send({\r\n    Success: 'connected successfully',\r\n    Message: 'welcome to Automart app.',\r\n\r\n  }));\r\n});\r\n\r\napp.listen(port, () => console.log(`Automart server is running on port ${port}`));\r\n\r\n \r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560104740739
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = app;\nexports[\"default\"] = _default;\n\nvar logger = require('morgan');\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser'); // import config from 'config';\n\n\nvar app = express();\nvar port = parseInt(process.env.PORT, 10) || 5000;\napp.use(logger('dev'));\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\napp.get('/api/v1', function (req, res) {\n  console.log(res.status(200).send({\n    Success: 'connected successfully',\n    Message: 'welcome to Automart app.'\n  }));\n});\napp.listen(port, function () {\n  return console.log(\"Automart server is running on port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJsb2dnZXIiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJwb3J0IiwicGFyc2VJbnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwic2VuZCIsIlN1Y2Nlc3MiLCJNZXNzYWdlIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQzs7Ozs7O2VBRWNBLEc7OztBQUVmLElBQU1DLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTFCLEMsQ0FDQTs7O0FBRUEsSUFBTUYsR0FBRyxHQUFHRyxPQUFPLEVBQW5CO0FBRUEsSUFBTUUsSUFBSSxHQUFHQyxRQUFRLENBQUNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFiLEVBQW1CLEVBQW5CLENBQVIsSUFBa0MsSUFBL0M7QUFDQVQsR0FBRyxDQUFDVSxHQUFKLENBQVFULE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFFQUQsR0FBRyxDQUFDVSxHQUFKLENBQVFOLFVBQVUsQ0FBQ08sVUFBWCxDQUFzQjtBQUM1QkMsRUFBQUEsUUFBUSxFQUFFO0FBRGtCLENBQXRCLENBQVI7QUFJQVosR0FBRyxDQUFDVSxHQUFKLENBQVFOLFVBQVUsQ0FBQ1MsSUFBWCxFQUFSO0FBRUFiLEdBQUcsQ0FBQ2MsR0FBSixDQUFRLFNBQVIsRUFBbUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDL0JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMvQkMsSUFBQUEsT0FBTyxFQUFFLHdCQURzQjtBQUUvQkMsSUFBQUEsT0FBTyxFQUFFO0FBRnNCLEdBQXJCLENBQVo7QUFLRCxDQU5EO0FBUUF0QixHQUFHLENBQUN1QixNQUFKLENBQVdsQixJQUFYLEVBQWlCO0FBQUEsU0FBTVksT0FBTyxDQUFDQyxHQUFSLDhDQUFrRGIsSUFBbEQsRUFBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0LmdpdGh1Yi5pby1naC1wYWdlc1xcYXBpXFxzZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyIgJ3VzZSBzdHJpY3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBwO1xyXG5cclxuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnbW9yZ2FuJyk7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG4vLyBpbXBvcnQgY29uZmlnIGZyb20gJ2NvbmZpZyc7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5jb25zdCBwb3J0ID0gcGFyc2VJbnQocHJvY2Vzcy5lbnYuUE9SVCwgMTApIHx8IDUwMDA7XHJcbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7XHJcbiAgZXh0ZW5kZWQ6IGZhbHNlLFxyXG59KSk7XHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbmFwcC5nZXQoJy9hcGkvdjEnLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zb2xlLmxvZyhyZXMuc3RhdHVzKDIwMCkuc2VuZCh7XHJcbiAgICBTdWNjZXNzOiAnY29ubmVjdGVkIHN1Y2Nlc3NmdWxseScsXHJcbiAgICBNZXNzYWdlOiAnd2VsY29tZSB0byBBdXRvbWFydCBhcHAuJyxcclxuXHJcbiAgfSkpO1xyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYEF1dG9tYXJ0IHNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApKTtcclxuXHJcbiBcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "logger",
        "require",
        "express",
        "bodyParser",
        "port",
        "parseInt",
        "process",
        "env",
        "PORT",
        "use",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "console",
        "log",
        "status",
        "send",
        "Success",
        "Message",
        "listen"
      ],
      "mappings": "AAAC;;;;;;eAEcA,G;;;AAEf,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B,C,CACA;;;AAEA,IAAMF,GAAG,GAAGG,OAAO,EAAnB;AAEA,IAAME,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAb,EAAmB,EAAnB,CAAR,IAAkC,IAA/C;AACAT,GAAG,CAACU,GAAJ,CAAQT,MAAM,CAAC,KAAD,CAAd;AAEAD,GAAG,CAACU,GAAJ,CAAQN,UAAU,CAACO,UAAX,CAAsB;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAtB,CAAR;AAIAZ,GAAG,CAACU,GAAJ,CAAQN,UAAU,CAACS,IAAX,EAAR;AAEAb,GAAG,CAACc,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC/BC,IAAAA,OAAO,EAAE,wBADsB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAArB,CAAZ;AAKD,CAND;AAQAtB,GAAG,CAACuB,MAAJ,CAAWlB,IAAX,EAAiB;AAAA,SAAMY,OAAO,CAACC,GAAR,8CAAkDb,IAAlD,EAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourcesContent": [
        " 'use strict';\r\n\r\nexport default app;\r\n\r\nconst logger = require('morgan');\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\n// import config from 'config';\r\n\r\nconst app = express();\r\n\r\nconst port = parseInt(process.env.PORT, 10) || 5000;\r\napp.use(logger('dev'));\r\n\r\napp.use(bodyParser.urlencoded({\r\n  extended: false,\r\n}));\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.get('/api/v1', (req, res) => {\r\n  console.log(res.status(200).send({\r\n    Success: 'connected successfully',\r\n    Message: 'welcome to Automart app.',\r\n\r\n  }));\r\n});\r\n\r\napp.listen(port, () => console.log(`Automart server is running on port ${port}`));\r\n\r\n \r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560104740739
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\login.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
        "sourceFileName": "login.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireWildcard(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n(0, _chai.use)(_chaiHttp[\"default\"]);\nvar API_PREFIX = '/api/v1';\ndescribe('user can login', function (done) {\n  it('should get username and password then return successful', function (done) {\n    loggedInUser.request(_app[\"default\"]).post('app/v1/auth/login').set({\n      'Content-Type': 'application/json'\n    }).send({\n      username: 'martini',\n      password: 'xxxfff546tg'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body.status).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n\n      _chai.assert.strictEqual(res.body, 200, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.statusCode, 200, 'should return 200 status code');\n\n      _chai.assert.isString(res.body.data.username, 'username should be a string');\n\n      _chai.assert.isNotNull(res.body.data, 'password should not be null');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('should return error message if username and password is incorrect', function (done) {\n    loggedInUser.request(_app[\"default\"]).post('app/v1/auth/login').set({\n      'Content-Type': 'application/json'\n    }).send({\n      username: 'martini',\n      password: 'xxxfff546tg'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.equal('username or password is incorrect');\n\n      _chai.assert.strictEqual(res.body, 400, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.body.error, incorrect, 'unexpected error', 'should return error');\n\n      _chai.assert.isNotObject(res.body.data, 'expected an object');\n\n      _chai.assert.isNull(res.body.data, 'username or password should not be null');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLnRlc3QuanMiXSwibmFtZXMiOlsiY2hhaUhUVFAiLCJBUElfUFJFRklYIiwiZGVzY3JpYmUiLCJkb25lIiwiaXQiLCJsb2dnZWRJblVzZXIiLCJyZXF1ZXN0IiwiYXBwIiwicG9zdCIsInNldCIsInNlbmQiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiZW5kIiwiZXJyIiwicmVzIiwic3RhdHVzQ29kZSIsInRvIiwiZXF1YWwiLCJib2R5Iiwic3RhdHVzIiwiYmUiLCJhbiIsImFzc2VydCIsInN0cmljdEVxdWFsIiwiaXNTdHJpbmciLCJkYXRhIiwiaXNOb3ROdWxsIiwiZXJyb3IiLCJpbmNvcnJlY3QiLCJpc05vdE9iamVjdCIsImlzTnVsbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFHQTs7QUFDQTs7Ozs7O0FBR0EsZUFBSUEsb0JBQUo7QUFFQSxJQUFNQyxVQUFVLEdBQUcsU0FBbkI7QUFFQUMsUUFBUSxDQUFDLGdCQUFELEVBQW1CLFVBQUNDLElBQUQsRUFBVTtBQUNuQ0MsRUFBQUEsRUFBRSxDQUFDLHlEQUFELEVBQTRELFVBQUNELElBQUQsRUFBVTtBQUN0RUUsSUFBQUEsWUFBWSxDQUFDQyxPQUFiLENBQXFCQyxlQUFyQixFQUNHQyxJQURILENBQ1EsbUJBRFIsRUFFR0MsR0FGSCxDQUVPO0FBQ0gsc0JBQWdCO0FBRGIsS0FGUCxFQUtHQyxJQUxILENBS1E7QUFDSkMsTUFBQUEsUUFBUSxFQUFFLFNBRE47QUFFSkMsTUFBQUEsUUFBUSxFQUFFO0FBRk4sS0FMUixFQVNHQyxHQVRILENBU08sVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakIsd0JBQU9BLEdBQUcsQ0FBQ0MsVUFBWCxFQUF1QkMsRUFBdkIsQ0FBMEJDLEtBQTFCLENBQWdDLEdBQWhDO0FBQ0Esd0JBQU9ILEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxNQUFoQixFQUF3QkgsRUFBeEIsQ0FBMkJDLEtBQTNCLENBQWlDLEdBQWpDO0FBQ0Esd0JBQU9ILEdBQUcsQ0FBQ0ksSUFBWCxFQUFpQkYsRUFBakIsQ0FBb0JJLEVBQXBCLENBQXVCQyxFQUF2QixDQUEwQixRQUExQjs7QUFDQUMsbUJBQU9DLFdBQVAsQ0FBbUJULEdBQUcsQ0FBQ0ksSUFBdkIsRUFBNkIsR0FBN0IsRUFBa0MsK0JBQWxDOztBQUNBSSxtQkFBT0MsV0FBUCxDQUFtQlQsR0FBRyxDQUFDQyxVQUF2QixFQUFtQyxHQUFuQyxFQUF3QywrQkFBeEM7O0FBQ0FPLG1CQUFPRSxRQUFQLENBQWdCVixHQUFHLENBQUNJLElBQUosQ0FBU08sSUFBVCxDQUFjZixRQUE5QixFQUF3Qyw2QkFBeEM7O0FBQ0FZLG1CQUFPSSxTQUFQLENBQWlCWixHQUFHLENBQUNJLElBQUosQ0FBU08sSUFBMUIsRUFBZ0MsNkJBQWhDOztBQUNBSCxtQkFBT0ksU0FBUCxDQUFpQmIsR0FBakIsRUFBc0Isa0JBQXRCOztBQUNBWCxNQUFBQSxJQUFJO0FBQ0wsS0FuQkg7QUFvQkQsR0FyQkMsQ0FBRjtBQXVCQUMsRUFBQUEsRUFBRSxDQUFDLG1FQUFELEVBQXNFLFVBQUNELElBQUQsRUFBVTtBQUNoRkUsSUFBQUEsWUFBWSxDQUFDQyxPQUFiLENBQXFCQyxlQUFyQixFQUNHQyxJQURILENBQ1EsbUJBRFIsRUFFR0MsR0FGSCxDQUVPO0FBQ0gsc0JBQWdCO0FBRGIsS0FGUCxFQUtHQyxJQUxILENBS1E7QUFDSkMsTUFBQUEsUUFBUSxFQUFFLFNBRE47QUFFSkMsTUFBQUEsUUFBUSxFQUFFO0FBRk4sS0FMUixFQVNHQyxHQVRILENBU08sVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakIsd0JBQU9BLEdBQUcsQ0FBQ0MsVUFBWCxFQUF1QkMsRUFBdkIsQ0FBMEJDLEtBQTFCLENBQWdDLEdBQWhDO0FBQ0Esd0JBQU9ILEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxNQUFoQixFQUF3QkgsRUFBeEIsQ0FBMkJDLEtBQTNCLENBQWlDLEdBQWpDO0FBQ0Esd0JBQU9ILEdBQUcsQ0FBQ0ksSUFBWCxFQUFpQkYsRUFBakIsQ0FBb0JJLEVBQXBCLENBQXVCQyxFQUF2QixDQUEwQixRQUExQjtBQUNBLHdCQUFPUCxHQUFHLENBQUNJLElBQUosQ0FBU1MsS0FBaEIsRUFBdUJYLEVBQXZCLENBQTBCQyxLQUExQixDQUFnQyxtQ0FBaEM7O0FBQ0FLLG1CQUFPQyxXQUFQLENBQW1CVCxHQUFHLENBQUNJLElBQXZCLEVBQTZCLEdBQTdCLEVBQWtDLCtCQUFsQzs7QUFDQUksbUJBQU9DLFdBQVAsQ0FBbUJULEdBQUcsQ0FBQ0MsVUFBdkIsRUFBbUMsR0FBbkMsRUFBd0MsK0JBQXhDOztBQUNBTyxtQkFBT0MsV0FBUCxDQUFtQlQsR0FBRyxDQUFDSSxJQUFKLENBQVNTLEtBQTVCLEVBQW1DQyxTQUFuQyxFQUE4QyxrQkFBOUMsRUFBa0UscUJBQWxFOztBQUNBTixtQkFBT08sV0FBUCxDQUFtQmYsR0FBRyxDQUFDSSxJQUFKLENBQVNPLElBQTVCLEVBQWtDLG9CQUFsQzs7QUFDQUgsbUJBQU9RLE1BQVAsQ0FBY2hCLEdBQUcsQ0FBQ0ksSUFBSixDQUFTTyxJQUF2QixFQUE2Qix5Q0FBN0I7O0FBQ0FILG1CQUFPSSxTQUFQLENBQWlCYixHQUFqQixFQUFzQixrQkFBdEI7O0FBQ0FYLE1BQUFBLElBQUk7QUFDTCxLQXJCSDtBQXNCRCxHQXZCQyxDQUFGO0FBd0JELENBaERPLENBQVIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxFcmljIElidVxcZGVza3RvcFxcYXV0b21hcnQuZ2l0aHViLmlvLWdoLXBhZ2VzXFxhcGlcXHNlcnZlclxcdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpLCB7XHJcbiAgdXNlLCBleHBlY3QsIHJlcXVpcmUsIGFzc2VydCxcclxufSBmcm9tICdjaGFpJztcclxuaW1wb3J0IGNoYWlIVFRQIGZyb20gJ2NoYWktaHR0cCc7XHJcbmltcG9ydCBhcHAgZnJvbSAnLi4vYXBwJztcclxuXHJcblxyXG51c2UoY2hhaUhUVFApO1xyXG5cclxuY29uc3QgQVBJX1BSRUZJWCA9ICcvYXBpL3YxJztcclxuXHJcbmRlc2NyaWJlKCd1c2VyIGNhbiBsb2dpbicsIChkb25lKSA9PiB7XHJcbiAgaXQoJ3Nob3VsZCBnZXQgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIHRoZW4gcmV0dXJuIHN1Y2Nlc3NmdWwnLCAoZG9uZSkgPT4ge1xyXG4gICAgbG9nZ2VkSW5Vc2VyLnJlcXVlc3QoYXBwKVxyXG4gICAgICAucG9zdCgnYXBwL3YxL2F1dGgvbG9naW4nKVxyXG4gICAgICAuc2V0KHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICBcdH0pXHJcbiAgICAgIC5zZW5kKHtcclxuICAgICAgICB1c2VybmFtZTogJ21hcnRpbmknLFxyXG4gICAgICAgIHBhc3N3b3JkOiAneHh4ZmZmNTQ2dGcnLFxyXG4gICAgICB9KVxyXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xyXG4gICAgICAgIGV4cGVjdChyZXMuc3RhdHVzQ29kZSkudG8uZXF1YWwoMjAwKTtcclxuICAgICAgICBleHBlY3QocmVzLmJvZHkuc3RhdHVzKS50by5lcXVhbCgyMDApO1xyXG4gICAgICAgIGV4cGVjdChyZXMuYm9keSkudG8uYmUuYW4oJ29iamVjdCcpO1xyXG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXMuYm9keSwgMjAwLCAnc2hvdWxkIHJldHVybiAyMDAgc3RhdHVzIGNvZGUnKTtcclxuICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocmVzLnN0YXR1c0NvZGUsIDIwMCwgJ3Nob3VsZCByZXR1cm4gMjAwIHN0YXR1cyBjb2RlJyk7XHJcbiAgICAgICAgYXNzZXJ0LmlzU3RyaW5nKHJlcy5ib2R5LmRhdGEudXNlcm5hbWUsICd1c2VybmFtZSBzaG91bGQgYmUgYSBzdHJpbmcnKTtcclxuICAgICAgICBhc3NlcnQuaXNOb3ROdWxsKHJlcy5ib2R5LmRhdGEsICdwYXNzd29yZCBzaG91bGQgbm90IGJlIG51bGwnKTtcclxuICAgICAgICBhc3NlcnQuaXNOb3ROdWxsKGVyciwgJ3VuZXhwZWN0ZWQgZXJyb3InKTtcclxuICAgICAgICBkb25lKCk7XHJcbiAgICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIHJldHVybiBlcnJvciBtZXNzYWdlIGlmIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBpcyBpbmNvcnJlY3QnLCAoZG9uZSkgPT4ge1xyXG4gICAgbG9nZ2VkSW5Vc2VyLnJlcXVlc3QoYXBwKVxyXG4gICAgICAucG9zdCgnYXBwL3YxL2F1dGgvbG9naW4nKVxyXG4gICAgICAuc2V0KHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICBcdH0pXHJcbiAgICAgIC5zZW5kKHtcclxuICAgICAgICB1c2VybmFtZTogJ21hcnRpbmknLFxyXG4gICAgICAgIHBhc3N3b3JkOiAneHh4ZmZmNTQ2dGcnLFxyXG4gICAgICB9KVxyXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xyXG4gICAgICAgIGV4cGVjdChyZXMuc3RhdHVzQ29kZSkudG8uZXF1YWwoNDAwKTtcclxuICAgICAgICBleHBlY3QocmVzLmJvZHkuc3RhdHVzKS50by5lcXVhbCg0MDApO1xyXG4gICAgICAgIGV4cGVjdChyZXMuYm9keSkudG8uYmUuYW4oJ29iamVjdCcpO1xyXG4gICAgICAgIGV4cGVjdChyZXMuYm9keS5lcnJvcikudG8uZXF1YWwoJ3VzZXJuYW1lIG9yIHBhc3N3b3JkIGlzIGluY29ycmVjdCcpO1xyXG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXMuYm9keSwgNDAwLCAnc2hvdWxkIHJldHVybiAyMDAgc3RhdHVzIGNvZGUnKTtcclxuICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocmVzLnN0YXR1c0NvZGUsIDQwMCwgJ3Nob3VsZCByZXR1cm4gMjAwIHN0YXR1cyBjb2RlJyk7XHJcbiAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJlcy5ib2R5LmVycm9yLCBpbmNvcnJlY3QsICd1bmV4cGVjdGVkIGVycm9yJywgJ3Nob3VsZCByZXR1cm4gZXJyb3InKTtcclxuICAgICAgICBhc3NlcnQuaXNOb3RPYmplY3QocmVzLmJvZHkuZGF0YSwgJ2V4cGVjdGVkIGFuIG9iamVjdCcpO1xyXG4gICAgICAgIGFzc2VydC5pc051bGwocmVzLmJvZHkuZGF0YSwgJ3VzZXJuYW1lIG9yIHBhc3N3b3JkIHNob3VsZCBub3QgYmUgbnVsbCcpO1xyXG4gICAgICAgIGFzc2VydC5pc05vdE51bGwoZXJyLCAndW5leHBlY3RlZCBlcnJvcicpO1xyXG4gICAgICAgIGRvbmUoKTtcclxuICAgICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "login.test.js"
      ],
      "names": [
        "chaiHTTP",
        "API_PREFIX",
        "describe",
        "done",
        "it",
        "loggedInUser",
        "request",
        "app",
        "post",
        "set",
        "send",
        "username",
        "password",
        "end",
        "err",
        "res",
        "statusCode",
        "to",
        "equal",
        "body",
        "status",
        "be",
        "an",
        "assert",
        "strictEqual",
        "isString",
        "data",
        "isNotNull",
        "error",
        "incorrect",
        "isNotObject",
        "isNull"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
      "sourcesContent": [
        "import chai, {\r\n  use, expect, require, assert,\r\n} from 'chai';\r\nimport chaiHTTP from 'chai-http';\r\nimport app from '../app';\r\n\r\n\r\nuse(chaiHTTP);\r\n\r\nconst API_PREFIX = '/api/v1';\r\n\r\ndescribe('user can login', (done) => {\r\n  it('should get username and password then return successful', (done) => {\r\n    loggedInUser.request(app)\r\n      .post('app/v1/auth/login')\r\n      .set({\r\n        'Content-Type': 'application/json',\r\n      \t})\r\n      .send({\r\n        username: 'martini',\r\n        password: 'xxxfff546tg',\r\n      })\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body.status).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        assert.strictEqual(res.body, 200, 'should return 200 status code');\r\n        assert.strictEqual(res.statusCode, 200, 'should return 200 status code');\r\n        assert.isString(res.body.data.username, 'username should be a string');\r\n        assert.isNotNull(res.body.data, 'password should not be null');\r\n        assert.isNotNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('should return error message if username and password is incorrect', (done) => {\r\n    loggedInUser.request(app)\r\n      .post('app/v1/auth/login')\r\n      .set({\r\n        'Content-Type': 'application/json',\r\n      \t})\r\n      .send({\r\n        username: 'martini',\r\n        password: 'xxxfff546tg',\r\n      })\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(400);\r\n        expect(res.body.status).to.equal(400);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.error).to.equal('username or password is incorrect');\r\n        assert.strictEqual(res.body, 400, 'should return 200 status code');\r\n        assert.strictEqual(res.statusCode, 400, 'should return 200 status code');\r\n        assert.strictEqual(res.body.error, incorrect, 'unexpected error', 'should return error');\r\n        assert.isNotObject(res.body.data, 'expected an object');\r\n        assert.isNull(res.body.data, 'username or password should not be null');\r\n        assert.isNotNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560104741712
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\user\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\user\\\\user.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\user",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\user\\user.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\user\\user.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\user\\user.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\user",
        "sourceFileName": "user.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireWildcard(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../../app\"));\n\nvar _dummyDb = require(\"../db/dummy-db\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\ndescribe('Test user signup', function () {\n  it('should create a new user', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/auth/signup').set({\n      'Content-type': 'application/json'\n    }).send(_dummyDb.userDetail).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(201);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(201);\n      (0, _chai.expect)(res.body.data).to.be.an('object');\n      (0, _chai.expect)(res.body.data.token).to.be.a('string');\n      (0, _chai.expect)(res.body.data.id).to.be.an('number');\n      (0, _chai.expect)(res.body.data.first_name).to.be.a('string');\n      (0, _chai.expect)(res.body.data.last_name).to.be.a('string');\n\n      _chai.assert.strictEqual(res.statusCode, 201, 'Status code is not 201');\n\n      _chai.assert.strictEqual(res.body.status, 201, 'Status is not 201');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.isObject(res.body.data, 'Data is not an object');\n\n      _chai.assert.isString(res.body.data.token, 'Token is not a string');\n\n      _chai.assert.isNumber(res.body.data.id, 'ID is not a number');\n\n      _chai.assert.isString(res.body.data.firstName, 'First name is not a string');\n\n      _chai.assert.isString(res.body.data.lastName, 'Last name is not a string');\n\n      _chai.assert.isNull(err, 'Expect error to not exist');\n\n      done();\n    });\n  });\n});\ndescribe('Test existing registered user', function () {\n  it('should create an error when email exists', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/auth/signup').set({\n      'Content-type': 'application/json'\n    }).send(_dummyDb.incorrectUserDetail[0]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(409);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(409);\n      (0, _chai.expect)(res.body.error).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.equal('Email already exists');\n\n      _chai.assert.isNotNull(err);\n\n      done();\n    });\n  });\n});\ndescribe('Test user Login', function () {\n  it('should perform a user login when registered email exists', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/auth/login').set({\n      'Content-type': 'application/json'\n    }).send(_dummyDb.correctLoginDetail[0]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(200);\n      (0, _chai.expect)(res.body.data).to.be.an('object');\n      (0, _chai.expect)(res.body.data).to.have.property('token');\n      (0, _chai.expect)(res.body.data).to.equal(\"Login Successful, Welcome \".concat(res.body.data.firstName));\n      done();\n    });\n  });\n});\ndescribe('Test user signup without details', function () {\n  it('should return an error message', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/auth/signup').send(badSignUpDetail[1]).end(function (err, res) {\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body.error).to.be.a('object');\n      (0, _chai.expect)(res.body.error.firstName).to.equal('The firstName field is required.');\n      (0, _chai.expect)(res.body.error.lastName).to.equal('The lastName field is required.');\n      (0, _chai.expect)(res.body.error.email).to.equal('The Email field is required.');\n      (0, _chai.expect)(res.body.error.address).to.equal('The address field is required.');\n      (0, _chai.expect)(res.body.error.password).to.equal('The password field is required.');\n      (0, _chai.expect)(res.body.error.confirmPassword).to.equal('The password confirmation field is required.');\n      done();\n    });\n  });\n});\ndescribe('Test user not signed up trying to login', function () {\n  it('should return an error message if user attempts to login and  is not signed up', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('api/v1/auth/login').send(_dummyDb.incorrectLoginDetail[0]).end(function (err, res) {\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(403);\n      (0, _chai.expect)(res.body.error).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.equal(403);\n      (0, _chai.expect)(res.body.error).to.equal('Invalid username or password');\n      done();\n    });\n  });\n});\ndescribe('Test Signed up user providing empty email', function () {\n  it('should return an error message', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post(\"api/v1/auth/login\").send(_dummyDb.incorrectLoginDetail[2]).end(function (err, res) {\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body.error).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.equal(400);\n      (0, _chai.expect)(res.body.status).to.have.property('email');\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body.error.email).to.equal('The email field is required.');\n      done();\n    });\n  });\n});\ndescribe('Test Signed up user providing wrong password', function () {\n  it('should return status code 403 and send an error message', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post(\"api/v1/auth/login\").send(_dummyDb.incorrectLoginDetail[1]).end(function (err, res) {\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(403);\n      (0, _chai.expect)(res.body.error).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.equal(400);\n      (0, _chai.expect)(res.body.status).to.equal(403);\n      (0, _chai.expect)(res.body.error).to.equal('Invalid username or password');\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.test.js"
      ],
      "names": [
        "chai",
        "use",
        "chaiHttp",
        "describe",
        "it",
        "done",
        "request",
        "app",
        "post",
        "set",
        "send",
        "userDetail",
        "end",
        "err",
        "res",
        "statusCode",
        "to",
        "equal",
        "body",
        "be",
        "an",
        "status",
        "data",
        "token",
        "a",
        "id",
        "first_name",
        "last_name",
        "assert",
        "strictEqual",
        "isObject",
        "isString",
        "isNumber",
        "firstName",
        "lastName",
        "isNull",
        "incorrectUserDetail",
        "error",
        "isNotNull",
        "correctLoginDetail",
        "have",
        "property",
        "badSignUpDetail",
        "email",
        "address",
        "password",
        "confirmPassword",
        "incorrectLoginDetail"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\user",
      "sourcesContent": [
        "import chai, { expect, assert } from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../app';\r\nimport {userDetail, incorrectUserDetail, correctLoginDetail, incorrectLoginDetail} from '../db/dummy-db';\r\n\r\n\r\nchai.use(chaiHttp);\r\n\r\n\r\ndescribe('Test user signup', () => {\r\n  it('should create a new user', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .send(userDetail)\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(201);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(201);\r\n        expect(res.body.data).to.be.an('object');\r\n        expect(res.body.data.token).to.be.a('string');\r\n        expect(res.body.data.id).to.be.an('number');\r\n        expect(res.body.data.first_name).to.be.a('string');\r\n        expect(res.body.data.last_name).to.be.a('string');\r\n        assert.strictEqual(res.statusCode, 201, 'Status code is not 201');\r\n        assert.strictEqual(res.body.status, 201, 'Status is not 201');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.isObject(res.body.data, 'Data is not an object');\r\n        assert.isString(res.body.data.token, 'Token is not a string');\r\n        assert.isNumber(res.body.data.id, 'ID is not a number');\r\n        assert.isString(res.body.data.firstName, 'First name is not a string');\r\n        assert.isString(res.body.data.lastName, 'Last name is not a string');\r\n        assert.isNull(err, 'Expect error to not exist');\r\n        done();\r\n      });\r\n\t});\r\n});\r\n\r\ndescribe('Test existing registered user', () => {\r\n  it('should create an error when email exists', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/auth/signup')\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .send(incorrectUserDetail[0])\r\n      .end((err, res) => {\r\n      \texpect(res.statusCode).to.equal(409);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(409);\r\n        expect(res.body.error).to.be.an('object');\r\n         expect(res.body.error).to.equal('Email already exists');\r\n         assert.isNotNull(err);\r\n         done();\r\n     });\r\n    });\r\n});\r\n\r\ndescribe('Test user Login', () => {\r\n  it('should perform a user login when registered email exists', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/auth/login')\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .send(correctLoginDetail[0])\r\n      .end((err, res) => {\r\n      \texpect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(200);\r\n        expect(res.body.data).to.be.an('object');\r\n        expect(res.body.data).to.have.property('token');\r\n        expect(res.body.data).to.equal(`Login Successful, Welcome ${res.body.data.firstName}`);\r\n        done();\r\n     });\r\n    });\r\n});\r\n\r\ndescribe('Test user signup without details', () => {\r\n    it('should return an error message', (done) => {\r\n      chai\r\n        .request(app)\r\n        .post('/api/v1/auth/signup')\r\n        .send(badSignUpDetail[1])\r\n        .end((err, res) => {\r\n          expect(res.body.status).to.equal(400);\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body.error).to.be.an('object');\r\n          expect(res.body.status).to.equal(400);\r\n          expect(res.body.error).to.be.a('object');\r\n          expect(res.body.error.firstName).to.equal('The firstName field is required.');\r\n          expect(res.body.error.lastName).to.equal('The lastName field is required.');\r\n          expect(res.body.error.email).to.equal('The Email field is required.');\r\n          expect(res.body.error.address).to.equal('The address field is required.');\r\n          expect(res.body.error.password).to.equal('The password field is required.');\r\n          expect(res.body.error.confirmPassword).to\r\n            .equal('The password confirmation field is required.');\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\ndescribe('Test user not signed up trying to login', () => {\r\n      it('should return an error message if user attempts to login and  is not signed up', (done) => {\r\n        chai\r\n          .request(app)\r\n          .post('api/v1/auth/login')\r\n          .send(incorrectLoginDetail[0])\r\n          .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body.status).to.equal(403);\r\n          expect(res.body.error).to.be.an('object')\r\n          expect(res.body.error).to.equal(403);\r\n          expect(res.body.error).to.equal('Invalid username or password');\r\n          done();\r\n          });\r\n      });\r\n    });\r\n\r\ndescribe('Test Signed up user providing empty email', () => {\r\n      it('should return an error message', (done) => {\r\n        chai\r\n          .request(app)\r\n          .post(`api/v1/auth/login`)\r\n          .send(incorrectLoginDetail[2])\r\n          .end((err, res) => {\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body.status).to.equal(400);\r\n          expect(res.body.error).to.be.an('object')\r\n          expect(res.body.error).to.equal(400);\r\n          expect(res.body.status).to.have.property('email');\r\n          expect(res.body.status).to.equal(400);\r\n          expect(res.body.error.email).to.equal('The email field is required.');\r\n          done();\r\n          });\r\n      });\r\n    });\r\n    describe('Test Signed up user providing wrong password', () => {\r\n      it('should return status code 403 and send an error message', (done) => {\r\n        chai\r\n          .request(app)\r\n          .post(`api/v1/auth/login`)\r\n          .send(incorrectLoginDetail[1])\r\n          .end((err, res) => {\r\n\r\n          expect(res.body).to.be.an('object');\r\n          expect(res.body.status).to.equal(403);\r\n          expect(res.body.error).to.be.an('object');\r\n          expect(res.body.error).to.equal(400);\r\n          expect(res.body.status).to.equal(403);\r\n          expect(res.body.error).to.equal('Invalid username or password');\r\n          done();\r\n          });\r\n      });\r\n    });"
      ]
    },
    "sourceType": "script",
    "mtime": 1560179542102
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\db\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\db\\\\dummy-db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\db",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\db\\dummy-db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\db\\dummy-db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\db\\dummy-db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\db",
        "sourceFileName": "dummy-db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CarOrder = exports.incorrectLoginDetail = exports.correctLoginDetail = exports.incorrectUserDetail = exports.userDetail = exports.updatePrice = exports.testMakeDetail = exports.carDetail = void 0;\n//car details\nvar carDetail = [{\n  id: 22560,\n  createdOn: '1st May',\n  make: 'Honda',\n  model: 'Accord',\n  price: 5000000,\n  state: 'New',\n  bodyType: 'saloon',\n  year: 2009\n}];\nexports.carDetail = carDetail;\nvar testMakeDetail = [{\n  id: 22560,\n  createdOn: '1st May',\n  make: '5000',\n  model: 'Accord',\n  price: 5000000,\n  state: 'New',\n  bodyType: 'saloon',\n  year: 2009\n}, {\n  id: 22560,\n  createdOn: '1st May',\n  make: 'Honda',\n  model: 'Accord',\n  price: 'Five hundred',\n  state: 'New',\n  bodyType: 'saloon',\n  year: 2009\n}, {\n  id: 'abcde',\n  createdOn: '1st May',\n  make: '',\n  model: 'Accord',\n  price: 'Five hundred',\n  state: 'New',\n  bodyType: 'wagon',\n  year: 2009\n}];\nexports.testMakeDetail = testMakeDetail;\nvar updatePrice = [{\n  price: 3500000\n}]; //user details\n\nexports.updatePrice = updatePrice;\nvar userDetail = [{\n  id: 23056,\n  owner: '54',\n  firstName: 'Jason',\n  lastName: 'Trello',\n  password: '555SSS',\n  email: 'jason@gmail.com',\n  address: '321 upper crest park, New York, USA',\n  confirmPassword: '555SSS',\n  is_admin: true\n}];\nexports.userDetail = userDetail;\nvar incorrectUserDetail = [{\n  id: 23056,\n  owner: '54',\n  firstName: 'Js56on',\n  lastName: 'Trello',\n  password: '555SSS',\n  email: 'jason@gmail.com',\n  address: '321 upper crest park, New York, USA',\n  confirmPassword: '555SSS',\n  is_admin: false\n}, {\n  id: '',\n  owner: '54',\n  firstName: '',\n  lastName: '',\n  password: '',\n  email: '',\n  address: '',\n  confirmPassword: '',\n  is_admin: false\n}];\nexports.incorrectUserDetail = incorrectUserDetail;\nvar correctLoginDetail = [{\n  email: 'jason@gmail.com',\n  password: '555SSS'\n}];\nexports.correctLoginDetail = correctLoginDetail;\nvar incorrectLoginDetail = [{\n  email: 'jason123@gmail.com',\n  password: '555SSS'\n}, {\n  email: 'jason@gmail.com',\n  password: '554%SSS'\n}, // empty email \n{\n  email: '',\n  password: '555SSS'\n}];\nexports.incorrectLoginDetail = incorrectLoginDetail;\nvar CarOrder = [{\n  id: 22560,\n  price: 4500000,\n  priceOffered: 3000000\n}, {\n  id: 22560,\n  price: 3200000,\n  priceOffered: 'abddef'\n}, {\n  id: 'abcs',\n  price: 5000000,\n  priceOffered: 3500000\n}, {\n  id: 22560,\n  price: 'hbdjhdks',\n  priceOffered: 3000000\n}];\nexports.CarOrder = CarOrder;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImR1bW15LWRiLmpzIl0sIm5hbWVzIjpbImNhckRldGFpbCIsImlkIiwiY3JlYXRlZE9uIiwibWFrZSIsIm1vZGVsIiwicHJpY2UiLCJzdGF0ZSIsImJvZHlUeXBlIiwieWVhciIsInRlc3RNYWtlRGV0YWlsIiwidXBkYXRlUHJpY2UiLCJ1c2VyRGV0YWlsIiwib3duZXIiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInBhc3N3b3JkIiwiZW1haWwiLCJhZGRyZXNzIiwiY29uZmlybVBhc3N3b3JkIiwiaXNfYWRtaW4iLCJpbmNvcnJlY3RVc2VyRGV0YWlsIiwiY29ycmVjdExvZ2luRGV0YWlsIiwiaW5jb3JyZWN0TG9naW5EZXRhaWwiLCJDYXJPcmRlciIsInByaWNlT2ZmZXJlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUM7QUFFTSxJQUFNQSxTQUFTLEdBQUcsQ0FFdkI7QUFDQ0MsRUFBQUEsRUFBRSxFQUFFLEtBREw7QUFFQ0MsRUFBQUEsU0FBUyxFQUFFLFNBRlo7QUFHRUMsRUFBQUEsSUFBSSxFQUFFLE9BSFI7QUFJRUMsRUFBQUEsS0FBSyxFQUFFLFFBSlQ7QUFLRUMsRUFBQUEsS0FBSyxFQUFFLE9BTFQ7QUFNRUMsRUFBQUEsS0FBSyxFQUFFLEtBTlQ7QUFPRUMsRUFBQUEsUUFBUSxFQUFFLFFBUFo7QUFRRUMsRUFBQUEsSUFBSSxFQUFFO0FBUlIsQ0FGdUIsQ0FBbEI7O0FBY0EsSUFBTUMsY0FBYyxHQUFHLENBRTVCO0FBQ0NSLEVBQUFBLEVBQUUsRUFBRSxLQURMO0FBRUNDLEVBQUFBLFNBQVMsRUFBRSxTQUZaO0FBR0VDLEVBQUFBLElBQUksRUFBRSxNQUhSO0FBSUVDLEVBQUFBLEtBQUssRUFBRSxRQUpUO0FBS0VDLEVBQUFBLEtBQUssRUFBRSxPQUxUO0FBTUVDLEVBQUFBLEtBQUssRUFBRSxLQU5UO0FBT0VDLEVBQUFBLFFBQVEsRUFBRSxRQVBaO0FBUUVDLEVBQUFBLElBQUksRUFBRTtBQVJSLENBRjRCLEVBYTVCO0FBQ0NQLEVBQUFBLEVB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dUIsRUFNdkI7QUFDQ3ZCLEVBQUFBLEVBQUUsRUFBRSxLQURMO0FBRUNJLEVBQUFBLEtBQUssRUFBRSxPQUZSO0FBR0NtQixFQUFBQSxZQUFZLEVBQUU7QUFIZixDQU51QixFQVl2QjtBQUNDdkIsRUFBQUEsRUFBRSxFQUFFLE1BREw7QUFFQ0ksRUFBQUEsS0FBSyxFQUFFLE9BRlI7QUFHQ21CLEVBQUFBLFlBQVksRUFBRTtBQUhmLENBWnVCLEVBa0J2QjtBQUNDdkIsRUFBQUEsRUFBRSxFQUFFLEtBREw7QUFFQ0ksRUFBQUEsS0FBSyxFQUFFLFVBRlI7QUFHQ21CLEVBQUFBLFlBQVksRUFBRTtBQUhmLENBbEJ1QixDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEVyaWMgSWJ1XFxkZXNrdG9wXFxhdXRvbWFydC5naXRodWIuaW8tZ2gtcGFnZXNcXGFwaVxcc2VydmVyXFx0ZXN0XFxkYiIsInNvdXJjZXNDb250ZW50IjpbIiAvL2NhciBkZXRhaWxzXHJcblxyXG5leHBvcnQgY29uc3QgY2FyRGV0YWlsID0gW1xyXG4gIFxyXG4gIHtcclxuICBcdGlkOiAyMjU2MCxcclxuICBcdGNyZWF0ZWRPbjogJzFzdCBNYXknLFxyXG4gICAgbWFrZTogJ0hvbmRhJyxcclxuICAgIG1vZGVsOiAnQWNjb3JkJyxcclxuICAgIHByaWNlOiA1MDAwMDAwLFxyXG4gICAgc3RhdGU6ICdOZXcnLFxyXG4gICAgYm9keVR5cGU6ICdzYWxvb24nLFxyXG4gICAgeWVhcjogMjAwOVxyXG4gIH0sXHJcbl07XHJcblxyXG5leHBvcnQgY29uc3QgdGVzdE1ha2VEZXRhaWwgPSBbXHJcblxyXG4gIHtcclxuICBcdGlkOiAyMjU2MCxcclxuICBcdGNyZWF0ZWRPbjogJzFzdCBNYXknLFxyXG4gICAgbWFrZTogJzUwMDAnLFxyXG4gICAgbW9kZWw6ICdBY2NvcmQnLFxyXG4gICAgcHJpY2U6IDUwMDAwMDAsXHJcbiAgICBzdGF0ZTogJ05ldycsXHJcbiAgICBib2R5VHlwZTogJ3NhbG9vbicsXHJcbiAgICB5ZWFyOiAyMDA5XHJcbiAgfSxcclxuICBcclxuICB7XHJcbiAgXHRpZDoyMjU2MCxcclxuICBcdGNyZWF0ZWRPbjogJzFzdCBNYXknLFxyXG4gICAgbWFrZTogJ0hvbmRhJyxcclxuICAgIG1vZGVsOiAnQWNjb3JkJyxcclxuICAgIHByaWNlOiAnRml2ZSBodW5kcmVkJyxcclxuICAgIHN0YXRlOiAnTmV3JyxcclxuICAgIGJvZHlUeXBlOiAnc2Fsb29uJyxcclxuICAgIHllYXI6IDIwMDlcclxuICB9LFxyXG5cclxuICB7XHJcbiAgXHRpZDogJ2FiY2RlJyxcclxuICBcdGNyZWF0ZWRPbjogJzFzdCBNYXknLFxyXG4gICAgbWFrZTogJycsXHJcbiAgICBtb2RlbDogJ0FjY29yZCcsXHJcbiAgICBwcmljZTogJ0ZpdmUgaHVuZHJlZCcsXHJcbiAgICBzdGF0ZTogJ05ldycsXHJcbiAgICBib2R5VHlwZTogJ3dhZ29uJyxcclxuICAgIHllYXI6IDIwMDlcclxuICB9LFxyXG5dO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVwZGF0ZVByaWNlID0gW1xyXG4gIHtcclxuICAgIHByaWNlOiAzNTAwMDAwLFxyXG4gIH0sXHJcbl07XHJcblxyXG4vL3VzZXIgZGV0YWlsc1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZXJEZXRhaWwgPSBbXHJcbiAgXHJcbiAge1xyXG4gIFx0aWQ6IDIzMDU2LFxyXG4gIFx0b3duZXI6ICc1NCcsXHJcbiAgICBmaXJzdE5hbWU6ICdKYXNvbicsXHJcbiAgICBsYXN0TmFtZTogJ1RyZWxsbycsXHJcbiAgICBwYXNzd29yZDogJzU1NVNTUycsXHJcbiAgICBlbWFpbDogJ2phc29uQGdtYWlsLmNvbScsXHJcbiAgICBhZGRyZXNzOiAnMzIxIHVwcGVyIGNyZXN0IHBhcmssIE5ldyBZb3JrLCBVU0EnLFxyXG4gICAgY29uZmlybVBhc3N3b3JkOiAnNTU1U1NTJyxcclxuICAgIGlzX2FkbWluOiB0cnVlLFxyXG4gIH0sXHJcbl07XHJcblxyXG5leHBvcnQgY29uc3QgaW5jb3JyZWN0VXNlckRldGFpbCA9IFtcclxuICBcclxuICB7XHJcbiAgXHRpZDoyMzA1NixcclxuICBcdG93bmVyOiAnNTQnLFxyXG4gICAgZmlyc3ROYW1lOiAnSnM1Nm9uJyxcclxuICAgIGxhc3ROYW1lOiAnVHJlbGxvJyxcclxuICAgIHBhc3N3b3JkOiAnNTU1U1NTJyxcclxuICAgIGVtYWlsOiAnamFzb25AZ21haWwuY29tJyxcclxuICAgIGFkZHJlc3M6ICczMjEgdXBwZXIgY3Jlc3QgcGFyaywgTmV3IFlvcmssIFVTQScsXHJcbiAgICBjb25maXJtUGFzc3dvcmQ6ICc1NTVTU1MnLFxyXG4gICAgaXNfYWRtaW46IGZhbHNlLFxyXG4gIH0sXHJcbiAgXHJcbiBcclxuICB7XHJcbiAgXHRpZDonJyxcclxuICBcdG93bmVyOiAnNTQnLFxyXG4gICAgZmlyc3ROYW1lOiAnJyxcclxuICAgIGxhc3ROYW1lOiAnJyxcclxuICAgIHBhc3N3b3JkOiAnJyxcclxuICAgIGVtYWlsOiAnJyxcclxuICAgIGFkZHJlc3M6ICcnLFxyXG4gICAgY29uZmlybVBhc3N3b3JkOiAnJyxcclxuICAgIGlzX2FkbWluOiBmYWxzZSxcclxuICB9LFxyXG4gIFxyXG5dO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvcnJlY3RMb2dpbkRldGFpbCA9IFtcclxuICB7XHJcbiAgICBlbWFpbDogJ2phc29uQGdtYWlsLmNvbScsXHJcbiAgICBwYXNzd29yZDogJzU1NVNTUycsXHJcbiAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmNvcnJlY3RMb2dpbkRldGFpbCA9IFtcclxuICBcclxuICB7XHJcbiAgICBlbWFpbDogJ2phc29uMTIzQGdtYWlsLmNvbScsXHJcbiAgICBwYXNzd29yZDogJzU1NVNTUycsXHJcbiAgfSxcclxuICBcclxuICB7XHJcbiAgICBlbWFpbDogJ2phc29uQGdtYWlsLmNvbScsXHJcbiAgICBwYXNzd29yZDogJzU1NCVTU1MnLFxyXG4gIH0sXHJcbiAgLy8gZW1wdHkgZW1haWwgXHJcbiAge1xyXG4gICAgZW1haWw6ICcnLFxyXG4gICAgcGFzc3dvcmQ6ICc1NTVTU1MnLFxyXG4gIH0sXHJcbl07XHJcblxyXG5leHBvcnQgY29uc3QgQ2FyT3JkZXIgPSBbXHJcblx0e1xyXG5cdFx0aWQ6IDIyNTYwLFxyXG5cdFx0cHJpY2U6IDQ1MDAwMDAsIFxyXG5cdFx0cHJpY2VPZmZlcmVkOiAzMDAwMDAwXHJcblx0fSxcclxuXHR7XHJcblx0XHRpZDogMjI1NjAsXHJcblx0XHRwcmljZTogMzIwMDAwMCwgXHJcblx0XHRwcmljZU9mZmVyZWQ6ICdhYmRkZWYnXHJcblx0fSxcclxuXHJcblx0e1xyXG5cdFx0aWQ6ICdhYmNzJyxcclxuXHRcdHByaWNlOiA1MDAwMDAwLCBcclxuXHRcdHByaWNlT2ZmZXJlZDogMzUwMDAwMFxyXG5cdH0sXHJcblxyXG5cdHtcclxuXHRcdGlkOiAyMjU2MCxcclxuXHRcdHByaWNlOiAnaGJkamhka3MnLCBcclxuXHRcdHByaWNlT2ZmZXJlZDogMzAwMDAwMFxyXG5cdH1cclxuXSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dummy-db.js"
      ],
      "names": [
        "carDetail",
        "id",
        "createdOn",
        "make",
        "model",
        "price",
        "state",
        "bodyType",
        "year",
        "testMakeDetail",
        "updatePrice",
        "userDetail",
        "owner",
        "firstName",
        "lastName",
        "password",
        "email",
        "address",
        "confirmPassword",
        "is_admin",
        "incorrectUserDetail",
        "correctLoginDetail",
        "incorrectLoginDetail",
        "CarOrder",
        "priceOffered"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\db",
      "sourcesContent": [
        " //car details\r\n\r\nexport const carDetail = [\r\n  \r\n  {\r\n  \tid: 22560,\r\n  \tcreatedOn: '1st May',\r\n    make: 'Honda',\r\n    model: 'Accord',\r\n    price: 5000000,\r\n    state: 'New',\r\n    bodyType: 'saloon',\r\n    year: 2009\r\n  },\r\n];\r\n\r\nexport const testMakeDetail = [\r\n\r\n  {\r\n  \tid: 22560,\r\n  \tcreatedOn: '1st May',\r\n    make: '5000',\r\n    model: 'Accord',\r\n    price: 5000000,\r\n    state: 'New',\r\n    bodyType: 'saloon',\r\n    year: 2009\r\n  },\r\n  \r\n  {\r\n  \tid:22560,\r\n  \tcreatedOn: '1st May',\r\n    make: 'Honda',\r\n    model: 'Accord',\r\n    price: 'Five hundred',\r\n    state: 'New',\r\n    bodyType: 'saloon',\r\n    year: 2009\r\n  },\r\n\r\n  {\r\n  \tid: 'abcde',\r\n  \tcreatedOn: '1st May',\r\n    make: '',\r\n    model: 'Accord',\r\n    price: 'Five hundred',\r\n    state: 'New',\r\n    bodyType: 'wagon',\r\n    year: 2009\r\n  },\r\n];\r\n\r\nexport const updatePrice = [\r\n  {\r\n    price: 3500000,\r\n  },\r\n];\r\n\r\n//user details\r\n\r\nexport const userDetail = [\r\n  \r\n  {\r\n  \tid: 23056,\r\n  \towner: '54',\r\n    firstName: 'Jason',\r\n    lastName: 'Trello',\r\n    password: '555SSS',\r\n    email: 'jason@gmail.com',\r\n    address: '321 upper crest park, New York, USA',\r\n    confirmPassword: '555SSS',\r\n    is_admin: true,\r\n  },\r\n];\r\n\r\nexport const incorrectUserDetail = [\r\n  \r\n  {\r\n  \tid:23056,\r\n  \towner: '54',\r\n    firstName: 'Js56on',\r\n    lastName: 'Trello',\r\n    password: '555SSS',\r\n    email: 'jason@gmail.com',\r\n    address: '321 upper crest park, New York, USA',\r\n    confirmPassword: '555SSS',\r\n    is_admin: false,\r\n  },\r\n  \r\n \r\n  {\r\n  \tid:'',\r\n  \towner: '54',\r\n    firstName: '',\r\n    lastName: '',\r\n    password: '',\r\n    email: '',\r\n    address: '',\r\n    confirmPassword: '',\r\n    is_admin: false,\r\n  },\r\n  \r\n];\r\n\r\nexport const correctLoginDetail = [\r\n  {\r\n    email: 'jason@gmail.com',\r\n    password: '555SSS',\r\n  },\r\n];\r\n\r\nexport const incorrectLoginDetail = [\r\n  \r\n  {\r\n    email: 'jason123@gmail.com',\r\n    password: '555SSS',\r\n  },\r\n  \r\n  {\r\n    email: 'jason@gmail.com',\r\n    password: '554%SSS',\r\n  },\r\n  // empty email \r\n  {\r\n    email: '',\r\n    password: '555SSS',\r\n  },\r\n];\r\n\r\nexport const CarOrder = [\r\n\t{\r\n\t\tid: 22560,\r\n\t\tprice: 4500000, \r\n\t\tpriceOffered: 3000000\r\n\t},\r\n\t{\r\n\t\tid: 22560,\r\n\t\tprice: 3200000, \r\n\t\tpriceOffered: 'abddef'\r\n\t},\r\n\r\n\t{\r\n\t\tid: 'abcs',\r\n\t\tprice: 5000000, \r\n\t\tpriceOffered: 3500000\r\n\t},\r\n\r\n\t{\r\n\t\tid: 22560,\r\n\t\tprice: 'hbdjhdks', \r\n\t\tpriceOffered: 3000000\r\n\t}\r\n]"
      ]
    },
    "sourceType": "script",
    "mtime": 1560170581975
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\order\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\order\\\\order.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\order",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\order\\order.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\order\\order.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\order\\order.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\order",
        "sourceFileName": "order.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireWildcard(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../../app\"));\n\nvar _dummyDb = require(\"../db/dummy-db\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\ndescribe('Test for create order endpoint', function () {\n  it('Test Should create an order', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/order').set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[0]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(201);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(201);\n      (0, _chai.expect)(res.body.data).to.be.an('object');\n      (0, _chai.expect)(res.body.data.id).to.be.a('number');\n      (0, _chai.expect)(res.body.data.car_id).to.be.a('number');\n      (0, _chai.expect)(res.body.data.created_on).to.be.a('string');\n      (0, _chai.expect)(res.body.data.status).to.be.a('string');\n      (0, _chai.expect)(res.body.data.price).to.be.a('number');\n      (0, _chai.expect)(res.body.data.priceOffered).to.be.a('number');\n\n      _chai.assert.strictEqual(res.statusCode, 201, 'Status code is not 201');\n\n      _chai.assert.strictEqual(res.body.status, 201, 'Status is not 201');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.isObject(res.body.data, 'Data is not an object');\n\n      _chai.assert.isNumber(res.body.data.id, 'ID is not a number');\n\n      _chai.assert.isNumber(res.body.data.car_id, 'ID is not a number');\n\n      _chai.assert.isString(res.body.data.created_on, 'Date is not a string');\n\n      _chai.assert.isString(res.body.data.status, 'Status is not a string');\n\n      _chai.assert.isNumber(res.body.data.price, 'Price is not a number');\n\n      _chai.assert.isNumber(res.body.data.priceOffered, 'Price is not a number');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('Test Should return an error message if price is not a number', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/order').set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[1]).end(function (err, res) {\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equals(400);\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body.error).to.equals('Enter a valid price');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\n\n      _chai.assert.strictEqual(res.body.status, 400, 'Status is not 400');\n\n      _chai.assert.strictEqual(res.body.error, 'Enter a valid price', 'Expect error to be Enter a valid price');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('Test Should return an error if request is not authorized', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/order').set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[0]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(401);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(401);\n      (0, _chai.expect)(res.body.error).to.equal('Authentication failed! Please Login again');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 401, 'Status code is not 401');\n\n      _chai.assert.strictEqual(res.body.status, 401, 'Status is not 401');\n\n      _chai.assert.strictEqual(res.body.error, 'Authentication failed! Please Login again', 'Expect error to be Authentication failed! Please Login again');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('Test should return an error if token is not valid', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/order').set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[0]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(401);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(401);\n      (0, _chai.expect)(res.body.error).to.equal('Authentication failed! Please Login again');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 401, 'Status code is not 401');\n\n      _chai.assert.strictEqual(res.body.status, 401, 'Status is not 401');\n\n      _chai.assert.strictEqual(res.body.error, 'Authentication failed! Please Login again', 'Expect error to be Authentication failed! Please Login again');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n});\ndescribe('Test for update order price', function () {\n  // Create an order\n  var order;\n  before(function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/order').set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[0]).end(function (err, res) {\n      order = res.body.data;\n      done();\n    });\n  });\n  it('Test should update price of purchase order', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).patch(\"/api/v1/order/\".concat(order.id, \"/price\")).set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[1]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.be.equal(200);\n      (0, _chai.expect)(res.body.data.id).to.be.a('number');\n      (0, _chai.expect)(res.body.data.car_id).to.be.a('number');\n      (0, _chai.expect)(res.body.data.status).to.be.a('string');\n      (0, _chai.expect)(res.body.data.old_price_offered).to.be.a('number');\n      (0, _chai.expect)(res.body.data.new_price_offered).to.be.a('number');\n\n      _chai.assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\n\n      _chai.assert.strictEqual(res.body.status, 200, 'Status is not 200');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.isObject(res.body.data, 'Data is not an object');\n\n      _chai.assert.isNumber(res.body.data.id, 'ID is not a number');\n\n      _chai.assert.isNumber(res.body.data.car_id, 'ID is not a number');\n\n      _chai.assert.isNumber(res.body.data.old_price_offered, 'Price is not a number');\n\n      _chai.assert.isNumber(res.body.data.new_price_offered, 'Price is not a number');\n\n      _chai.assert.isString(res.body.data.status, 'Status is not a string');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('Test should return a message if no order with the id is found', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).patch('/api/v1/order/1234354/price').set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[2]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.data).to.be.equal('No record found');\n      (0, _chai.expect)(res.body.data).to.be.a('string');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\n\n      _chai.assert.isString(res.body.data, 'Data is not a string');\n\n      _chai.assert.strictEqual(res.body.data, 'No record found', 'Data is not equal to No record found');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('Test should return an error message if id is not a number', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).patch('/api/v1/order/1234354/price').set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[2]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.be.equal('Invalid ID');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'Status code is not 200');\n\n      _chai.assert.isString(res.body.error, 'ID is not valid');\n\n      _chai.assert.strictEqual(res.body.error, 'ID is not valid', 'Expected error to be a valid ID');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('Test should return an error message if price is not a number', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).patch(\"/api/v1/order/\".concat(_dummyDb.carOrder.id, \"/price\")).set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[3]).end(function (err, res) {\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equals(400);\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body.error).to.equals('Enter a valid price');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\n\n      _chai.assert.strictEqual(res.body.status, 400, 'Status is not 400');\n\n      _chai.assert.strictEqual(res.body.error, 'Enter a valid price', 'Expected error to be a valid price');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('Test should return an error if request is not authorized', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).patch(\"/api/v1/order/\".concat(order.id, \"/price\")).set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[2]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(401);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(401);\n      (0, _chai.expect)(res.body.error).to.equal('Authentication failed! Please Login again');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 401, 'Status code is not 401');\n\n      _chai.assert.strictEqual(res.body.status, 401, 'Status is not 401');\n\n      _chai.assert.strictEqual(res.body.error, 'Authentication failed! Please Login again', 'Expect error to be Authentication failed! Please Login again');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('Test should return an error if token is not valid', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).patch(\"/api/v1/order/\".concat(order.id, \"/price\")).set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.carOrder[2]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(401);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equal(401);\n      (0, _chai.expect)(res.body.error).to.equal('Authentication failed! Please Login again');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 401, 'Status code is not 401');\n\n      _chai.assert.strictEqual(res.body.status, 401, 'Status is not 401');\n\n      _chai.assert.strictEqual(res.body.error, 'Authentication failed! Please Login again', 'Expect error to be Authentication failed! Please Login again');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "order.test.js"
      ],
      "names": [
        "chai",
        "use",
        "chaiHttp",
        "describe",
        "it",
        "done",
        "request",
        "app",
        "post",
        "set",
        "send",
        "carOrder",
        "end",
        "err",
        "res",
        "statusCode",
        "to",
        "equal",
        "body",
        "be",
        "an",
        "status",
        "data",
        "id",
        "a",
        "car_id",
        "created_on",
        "price",
        "priceOffered",
        "assert",
        "strictEqual",
        "isObject",
        "isNumber",
        "isString",
        "isNull",
        "equals",
        "error",
        "order",
        "before",
        "patch",
        "old_price_offered",
        "new_price_offered"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\order",
      "sourcesContent": [
        "import chai, { expect, assert } from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../app';\r\nimport {carOrder } from '../db/dummy-db';\r\n\r\n\r\nchai.use(chaiHttp);\r\n\r\ndescribe('Test for create order endpoint', () => {\r\n  it('Test Should create an order', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/order')\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n      })\r\n      .send(\r\n        carOrder[0]\r\n      )\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(201);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(201);\r\n        expect(res.body.data).to.be.an('object');\r\n        expect(res.body.data.id).to.be.a('number');\r\n        expect(res.body.data.car_id).to.be.a('number');\r\n        expect(res.body.data.created_on).to.be.a('string');\r\n        expect(res.body.data.status).to.be.a('string');\r\n        expect(res.body.data.price).to.be.a('number');\r\n        expect(res.body.data.priceOffered).to.be.a('number');\r\n        assert.strictEqual(res.statusCode, 201, 'Status code is not 201');\r\n        assert.strictEqual(res.body.status, 201, 'Status is not 201');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.isObject(res.body.data, 'Data is not an object');\r\n        assert.isNumber(res.body.data.id, 'ID is not a number');\r\n        assert.isNumber(res.body.data.car_id, 'ID is not a number');\r\n        assert.isString(res.body.data.created_on, 'Date is not a string');\r\n        assert.isString(res.body.data.status, 'Status is not a string');\r\n        assert.isNumber(res.body.data.price, 'Price is not a number');\r\n        assert.isNumber(res.body.data.priceOffered, 'Price is not a number');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Test Should return an error message if price is not a number', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/order')\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n      })\r\n      .send(\r\n        carOrder[1]\r\n      )\r\n      .end((err, res) => {\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equals(400);\r\n        expect(res.statusCode).to.equal(400);\r\n        expect(res.body.error).to.equals('Enter a valid price');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\r\n        assert.strictEqual(res.body.status, 400, 'Status is not 400');\r\n        assert.strictEqual(res.body.error,\r\n          'Enter a valid price',\r\n          'Expect error to be Enter a valid price');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Test Should return an error if request is not authorized', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/order')\r\n      .set({\r\n        'Content-Type': 'application/json',\r\n      })\r\n      .send(\r\n       carOrder[0]\r\n     )\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(401);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(401);\r\n        expect(res.body.error).to.equal('Authentication failed! Please Login again');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 401, 'Status code is not 401');\r\n        assert.strictEqual(res.body.status, 401, 'Status is not 401');\r\n        assert.strictEqual(res.body.error,\r\n          'Authentication failed! Please Login again',\r\n          'Expect error to be Authentication failed! Please Login again');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Test should return an error if token is not valid', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/order')\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n      })\r\n      .send(\r\n        carOrder[0],\r\n      )\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(401);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(401);\r\n        expect(res.body.error).to.equal('Authentication failed! Please Login again');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 401, 'Status code is not 401');\r\n        assert.strictEqual(res.body.status, 401, 'Status is not 401');\r\n        assert.strictEqual(res.body.error,\r\n          'Authentication failed! Please Login again',\r\n          'Expect error to be Authentication failed! Please Login again');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('Test for update order price', () => {\r\n  // Create an order\r\n  let order;\r\n  before((done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/order')\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n      })\r\n      .send(\r\n        carOrder[0]\r\n      )\r\n      .end((err, res) => {\r\n        order = res.body.data;\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Test should update price of purchase order', (done) => {\r\n    chai\r\n      .request(app)\r\n      .patch(`/api/v1/order/${order.id}/price`)\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n         })\r\n      .send(carOrder[1])\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.be.equal(200);\r\n        expect(res.body.data.id).to.be.a('number');\r\n        expect(res.body.data.car_id).to.be.a('number');\r\n        expect(res.body.data.status).to.be.a('string');\r\n        expect(res.body.data.old_price_offered).to.be.a('number');\r\n        expect(res.body.data.new_price_offered).to.be.a('number');\r\n        assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\r\n        assert.strictEqual(res.body.status, 200, 'Status is not 200');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.isObject(res.body.data, 'Data is not an object');\r\n        assert.isNumber(res.body.data.id, 'ID is not a number');\r\n        assert.isNumber(res.body.data.car_id, 'ID is not a number');\r\n        assert.isNumber(res.body.data.old_price_offered, 'Price is not a number');\r\n        assert.isNumber(res.body.data.new_price_offered, 'Price is not a number');\r\n        assert.isString(res.body.data.status, 'Status is not a string');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Test should return a message if no order with the id is found', (done) => {\r\n    chai\r\n      .request(app)\r\n      .patch('/api/v1/order/1234354/price')\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n      })\r\n      .send(\r\n        carOrder[2],\r\n      )\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.data).to.be.equal('No record found');\r\n        expect(res.body.data).to.be.a('string');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\r\n        assert.isString(res.body.data, 'Data is not a string');\r\n        assert.strictEqual(res.body.data,\r\n          'No record found',\r\n          'Data is not equal to No record found');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Test should return an error message if id is not a number', (done) => {\r\n    chai\r\n      .request(app)\r\n      .patch('/api/v1/order/1234354/price')\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n      })\r\n      .send(\r\n        carOrder[2])\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(400);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.error).to.be.equal('Invalid ID');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 400, 'Status code is not 200');\r\n        assert.isString(res.body.error, 'ID is not valid');\r\n        assert.strictEqual(res.body.error,\r\n          'ID is not valid',\r\n          'Expected error to be a valid ID');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Test should return an error message if price is not a number', (done) => {\r\n    chai\r\n      .request(app)\r\n      .patch(`/api/v1/order/${carOrder.id}/price`)\r\n      .set({\r\n        'Content-Type': 'application/json',\r\n        })\r\n      .send(carOrder[3])\r\n      .end((err, res) => {\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equals(400);\r\n        expect(res.statusCode).to.equal(400);\r\n        expect(res.body.error).to.equals('Enter a valid price');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\r\n        assert.strictEqual(res.body.status, 400, 'Status is not 400');\r\n        assert.strictEqual(res.body.error,\r\n          'Enter a valid price',\r\n          'Expected error to be a valid price');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Test should return an error if request is not authorized', (done) => {\r\n    chai\r\n      .request(app)\r\n      .patch(`/api/v1/order/${order.id}/price`)\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n      })\r\n      .send(carOrder[2])\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(401);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(401);\r\n        expect(res.body.error).to.equal('Authentication failed! Please Login again');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 401, 'Status code is not 401');\r\n        assert.strictEqual(res.body.status, 401, 'Status is not 401');\r\n        assert.strictEqual(res.body.error,\r\n          'Authentication failed! Please Login again',\r\n          'Expect error to be Authentication failed! Please Login again');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Test should return an error if token is not valid', (done) => {\r\n    chai\r\n      .request(app)\r\n      .patch(`/api/v1/order/${order.id}/price`)\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n      })\r\n      .send(carOrder[2])\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(401);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(401);\r\n        expect(res.body.error).to.equal('Authentication failed! Please Login again');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 401, 'Status code is not 401');\r\n        assert.strictEqual(res.body.status, 401, 'Status is not 401');\r\n        assert.strictEqual(res.body.error,\r\n          'Authentication failed! Please Login again',\r\n          'Expect error to be Authentication failed! Please Login again');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  });\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1560179966578
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\cars\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\cars\\\\car.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\cars",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\cars\\car.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\cars\\car.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\cars\\car.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\cars",
        "sourceFileName": "car.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireWildcard(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../../app\"));\n\nvar _dummyDb = require(\"../db/dummy-db\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\ndescribe('Create a car AD', function () {\n  it('should create a new car with all details', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/car').set({\n      'Content-type': 'application/json'\n    }).send(_dummyDb.carDetail).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(201);\n      (0, _chai.expect)(res.body.status).to.equal(201);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.data).to.be.an('object');\n      (0, _chai.expect)(res.body.data).to.have.property('object');\n\n      _chai.assert.strictEqual(res.statusCode, 201, 'Status code is not 201');\n\n      _chai.assert.strictEqual(res.body.status, 201, 'Status is not 201');\n\n      _chai.assert.isNumber(res.body.data.id, 'id', 'enter the car id');\n\n      _chai.assert.isNumber(res.body.data.owner, 'owner', 'enter the owner id');\n\n      _chai.assert.property(res.body.data.createdOn, 'createdOn', 'enter date of post ad');\n\n      _chai.assert.isString(res.body.data.make, 'make', 'enter make of car');\n\n      _chai.assert.isString(res.body.data.model, 'model', 'enter model of car');\n\n      _chai.assert.isNumber(res.body.data.price, 'price', 'enter price of car');\n\n      _chai.assert.isString(res.body.data.status, 'status', 'enter status of car');\n\n      _chai.assert.isString(res.body.data.bodytype, 'bodytype', 'enter bodytype of car');\n\n      _chai.assert.isNumber(res.body.data.year, 'year', 'enter the year of car');\n    });\n  }), it('should return an error if make is not provided', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1//car').send(_dummyDb.testMakeDetail[2]).set({\n      'Content-type': 'application/json'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.body).have.status(400);\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body.status).to.equal(300);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.data).to.be.an('object');\n      (0, _chai.expect)(res.body.data.make).to.be.a('string');\n      (0, _chai.expect)(res.body.error).to.be.an('object');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\n\n      _chai.assert.strictEqual(res.body.status, 400, 'Status is not 400');\n\n      _chai.assert.strictEqual(res.body.error, 'Make should not be empty', 'Expect error to be Make should not be empty');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  }), it('should return an error if model is not provided', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1//car').send(_dummyDb.testMakeDetail[2]).set({\n      'Content-type': 'application/json'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.body).have.status(400);\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body.status).to.equal(300);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.data).to.be.an('object');\n      (0, _chai.expect)(res.body.data.make).to.be.a('string');\n      (0, _chai.expect)(res.body.error).to.be.an('object');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\n\n      _chai.assert.strictEqual(res.body.status, 400, 'Status is not 400');\n\n      _chai.assert.strictEqual(res.body.error, 'Model should not be empty', 'Expect error to be model should not be empty');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  }), it('should return an error if incorrect car status is provided', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1//car').send(_dummyDb.testMakeDetail[0]).set({\n      'Content-type': 'application/json'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.body).have.status(400);\n      (0, _chai.expect)(res.body).to.be.a('object');\n      (0, _chai.expect)(res.body).to.have.property('status');\n      (0, _chai.expect)(res.body).to.have.property('error');\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body.error).to.be.a('object');\n      (0, _chai.expect)(res.body.error).to.have.property('status');\n      (0, _chai.expect)(res.body.error.state).to.equal('The valid options are either New, new, NEW or Old, old, OLD');\n      done();\n    });\n  }), it('should return an error if incorrect bodytpe is provided', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1//car').send(_dummyDb.testMakeDetail[1]).set({\n      'Content-type': 'application/json'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.body).have.status(400);\n      (0, _chai.expect)(res.body).to.be.a('object');\n      (0, _chai.expect)(res.body).to.have.property('status');\n      (0, _chai.expect)(res.body).to.have.property('error');\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body.error).to.be.a('object');\n      (0, _chai.expect)(res.body.error).to.have.property('bodytype');\n      (0, _chai.expect)(res.body.error.bodytype).to.equal('The valid options are saloon, wagon and suv');\n      done();\n    });\n  });\n  describe('Get a car', function () {\n    it('should get an available car present in db', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).get('/api/v1//car').set({\n        'Content-type': 'application/json'\n      }).end(function (err, res) {\n        (0, _chai.expect)(res.statusCode).to.equal(200);\n        (0, _chai.expect)(res.body).to.be.an('object');\n        (0, _chai.expect)(res.body.status).to.equal(200);\n        (0, _chai.expect)(res.body.data).to.be.an('object');\n        (0, _chai.expect)(res.body).to.have.property('status');\n        (0, _chai.expect)(res.body.data).to.be.a('object');\n        (0, _chai.expect)(res.body.data).to.have.property('id');\n        (0, _chai.expect)(res.body.data).to.have.property('owner');\n        (0, _chai.expect)(res.body.data).to.have.property('createdOn');\n        (0, _chai.expect)(res.body.data).to.have.property('make');\n        (0, _chai.expect)(res.body.data).to.have.property('model');\n        (0, _chai.expect)(res.body.data).to.have.property('price');\n        (0, _chai.expect)(res.body.data).to.have.property('state');\n        (0, _chai.expect)(res.body.data).to.have.property('bodyType');\n        (0, _chai.expect)(res.body.data).to.have.property('year');\n        done();\n      });\n    });\n    it('should return an error if the car is not in the db', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).get('/api/v1//car').set({\n        'Content-type': 'application/json'\n      }).end(function (err, res) {\n        (0, _chai.expect)(res).to.have.status(404);\n        (0, _chai.expect)(res.body).to.be.an('object');\n        (0, _chai.expect)(res.body.status).to.be.an('object');\n        (0, _chai.expect)(res.body).to.have.property('status');\n        (0, _chai.expect)(res.body).to.have.property('error');\n        (0, _chai.expect)(res.body.status).to.equal(404);\n        (0, _chai.expect)(res.body.error).to.equal(\"The requested car is not available\");\n        done();\n      });\n    });\n    it('should return an error if the ID is not a number', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).get('/api/v1//car').set({\n        'Content-type': 'application/json'\n      }).end(function (err, res) {\n        (0, _chai.expect)(res).to.have.status(400);\n        (0, _chai.expect)(res.body).to.be.an('object');\n        (0, _chai.expect)(res.body.status).to.be.an('object');\n        (0, _chai.expect)(res.body).to.have.property('status');\n        (0, _chai.expect)(res.body).to.have.property('error');\n        (0, _chai.expect)(res.body.status).to.equal(400);\n        (0, _chai.expect)(res.body.error).to.equal('The ID must contain numbers');\n        done();\n      });\n    });\n  });\n  describe('Get all cars', function () {\n    it('should get all the cars in the db', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).get('/api/v1//car').set({\n        'Content-type': 'application/json'\n      }).end(function (err, res) {\n        (0, _chai.expect)(res.statusCode).to.equal(200);\n        (0, _chai.expect)(res.body).to.be.an('object');\n        (0, _chai.expect)(res.body.status).to.equal(200);\n        (0, _chai.expect)(res.body).to.have.property('status');\n        (0, _chai.expect)(res.body).to.have.property('data');\n        (0, _chai.expect)(res.body.data).to.be.an('array');\n        (0, _chai.expect)(res.body.data[0]).to.be.an('object');\n        done();\n      });\n    });\n  });\n  it('should display an error 404 message if car is not available', function (done) {\n    _chai[\"default\"].request(_app[\"default\"])[\"delete\"]('/api/v1/car/190').end(function (err, res) {\n      (0, _chai.expect)(res).to.have.status(404);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body).to.have.property('status');\n      (0, _chai.expect)(res.body).to.have.property('error');\n      (0, _chai.expect)(res.body.status).to.equal(404);\n      (0, _chai.expect)(res.body.error).to.be.equal('The requested car is not available');\n      done();\n    });\n  });\n  it('Should return an error message if price is not a number', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/car').set({\n      'Content-Type': 'multipart/form-data'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.equals(400);\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body.error).to.equals('Enter a valid price');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\n\n      _chai.assert.strictEqual(res.body.status, 400, 'Status is not 400');\n\n      _chai.assert.strictEqual(res.body.error, 'Enter a valid price');\n\n      _chai.assert.isNull(err, 'Unexpected error');\n\n      done();\n    });\n  });\n  it('Should update car AD price', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).patch(\"/api/v1/car/carDetail/price\").set({\n      'Content-Type': 'application/json'\n    }).send(_dummyDb.updatePrice[0]).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.status).to.be.equal(200);\n      (0, _chai.expect)(res.body.data).to.be.an('object');\n      (0, _chai.expect)(res.body.data.id).to.be.a('number');\n      (0, _chai.expect)(res.body.data.created_on).to.be.a('string');\n      (0, _chai.expect)(res.body.data.email).to.be.a('string');\n      (0, _chai.expect)(res.body.data.make).to.be.a('string');\n      (0, _chai.expect)(res.body.data.model).to.be.a('string');\n      (0, _chai.expect)(res.body.data.price).to.be.a('number');\n      (0, _chai.expect)(res.body.data.state).to.be.a('string');\n      (0, _chai.expect)(res.body.data.status).to.equal('available');\n      (0, _chai.expect)(res.body.data.year).to.be.a('number');\n\n      _chai.assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\n\n      _chai.assert.strictEqual(res.body.status, 200, 'Status is not 200');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.isObject(res.body.data, 'Data is not an object');\n\n      _chai.assert.isNumber(res.body.data.id, 'ID is not a number');\n\n      _chai.assert.isString(res.body.data.created_on, 'Date is not a string');\n\n      _chai.assert.isString(res.body.data.manufacturer, 'Manufacturer is not a string');\n\n      _chai.assert.isString(res.body.data.model, 'Model is not a string');\n\n      _chai.assert.strictEqual(res.body.data.status, 'available', 'Status is not available');\n\n      _chai.assert.isNumber(res.body.data.price, 'Price is not a number');\n\n      _chai.assert.isString(res.body.data.state, 'State is not a string');\n\n      _chai.assert.isNumber(res.body.data.year, 'Year is not a number');\n\n      _chai.assert.isNull(err, 'Unexpected error');\n\n      done();\n    });\n  });\n  it('Should return all unsold cars of a specific manufacturer', function (done) {\n    _chai[\"default\"].request(_app[\"default\"]).get('/api/v1/car').query({\n      status: 'available',\n      manufacturer: 'Toyota'\n    }).set({\n      'Content-Type': 'application/json'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.data).to.be.an('array');\n\n      _chai.assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.isArray(res.body.data, 'Data is not array');\n\n      _chai.assert.isNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('Should delete an AD if user is an admin', function (done) {\n    _chai[\"default\"].request(_app[\"default\"])[\"delete\"](\"/api/v1/car/\".concat(carAd.id)).set({\n      'Content-Type': 'application/json'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.data).to.be.equal('Car Ad successfully deleted');\n      (0, _chai.expect)(res.body.data).to.be.a('string');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\n\n      _chai.assert.isString(res.body.data, 'Data is not a string');\n\n      _chai.assert.strictEqual(res.body.data, 'Car Ad successfully deleted', 'Data is not equal to Car Ad successfully deleted');\n\n      _chai.assert.isNull(err, 'Expect error to not exist');\n\n      done();\n    });\n  });\n  it('Should return a message if record is not found', function (done) {\n    _chai[\"default\"].request(_app[\"default\"])[\"delete\"]('/api/v1/car/11111045').set({\n      'Content-Type': 'application/json'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.data).to.be.equal('No record found');\n      (0, _chai.expect)(res.body.data).to.be.a('string');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 200);\n\n      _chai.assert.isString(res.body.data, 'Data is not a string');\n\n      _chai.assert.strictEqual(res.body.data, 'No record found', 'Data is not available');\n\n      _chai.assert.isNull(err, 'Unexpected error');\n\n      done();\n    });\n  });\n  it('Should return an error if user is not an admin', function (done) {\n    _chai[\"default\"].request(_app[\"default\"])[\"delete\"](\"/api/v1/car/\".concat(carAd.id)).set({\n      'Content-Type': 'application/json'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(403);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.be.equal('Forbidden: Only Admin can delete an AD');\n      (0, _chai.expect)(res.body.error).to.be.a('string');\n\n      _chai.assert.isObject(res.body, 'Response is not an object');\n\n      _chai.assert.strictEqual(res.statusCode, 403);\n\n      _chai.assert.isString(res.body.error, 'Data is not a string');\n\n      _chai.assert.strictEqual(res.body.error, 'Forbidden: Only Admin user can delete an AD', 'Only Admin user can delete an AD');\n\n      _chai.assert.isNull(err, 'Unexpected error');\n\n      done();\n    });\n  });\n});\ndescribe('DELETE a car', function () {\n  it('should remove a car and display a success message', function (done) {\n    _chai[\"default\"].request(_app[\"default\"])[\"delete\"]('/api/v1//car3').end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body).to.have.property('status');\n      (0, _chai.expect)(res.body).to.have.property('data');\n      (0, _chai.expect)(res.body.status).to.equal(200);\n      (0, _chai.expect)(res.body.data).to.be.a('object');\n      (0, _chai.expect)(res.body.data).to.have.property('message');\n      (0, _chai.expect)(res.body.data).to.have.property('car');\n      (0, _chai.expect)(res.body.data.message).to.equal('Car Ad has been deleted succesfully');\n      (0, _chai.expect)(res.body.data).to.have.property('id');\n      (0, _chai.expect)(res.body.data).to.have.property('owner');\n      (0, _chai.expect)(res.body.data).to.have.property('createdOn');\n      (0, _chai.expect)(res.body.data).to.have.property('make');\n      (0, _chai.expect)(res.body.data).to.have.property('model');\n      (0, _chai.expect)(res.body.data).to.have.property('price');\n      (0, _chai.expect)(res.body.data).to.have.property('state');\n      (0, _chai.expect)(res.body.data).to.have.property('bodyType');\n      (0, _chai.expect)(res.body.data).to.have.property('year');\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "car.test.js"
      ],
      "names": [
        "chai",
        "use",
        "chaiHttp",
        "describe",
        "it",
        "done",
        "request",
        "app",
        "post",
        "set",
        "send",
        "carDetail",
        "end",
        "err",
        "res",
        "statusCode",
        "to",
        "equal",
        "body",
        "status",
        "be",
        "an",
        "data",
        "have",
        "property",
        "assert",
        "strictEqual",
        "isNumber",
        "id",
        "owner",
        "createdOn",
        "isString",
        "make",
        "model",
        "price",
        "bodytype",
        "year",
        "testMakeDetail",
        "a",
        "error",
        "isObject",
        "isNotNull",
        "state",
        "get",
        "equals",
        "isNull",
        "patch",
        "updatePrice",
        "created_on",
        "email",
        "manufacturer",
        "query",
        "isArray",
        "carAd",
        "message"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\cars",
      "sourcesContent": [
        "import chai, { expect, assert } from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../app';\r\nimport {carDetail, testMakeDetail, updatePrice} from '../db/dummy-db';\r\n\r\n\r\nchai.use(chaiHttp);\r\n\r\n\r\ndescribe('Create a car AD', () => {\r\n  it('should create a new car with all details', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/car')\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .send(carDetail)\r\n      .end((err, res) => {\r\n       expect(res.statusCode).to.equal(201);\r\n       expect(res.body.status).to.equal(201);\r\n       expect(res.body).to.be.an('object');\r\n       expect(res.body.data).to.be.an('object');\r\n       expect(res.body.data).to.have.property('object');\r\n       assert.strictEqual(res.statusCode, 201, 'Status code is not 201');\r\n       assert.strictEqual(res.body.status, 201, 'Status is not 201');\r\n       assert.isNumber(res.body.data.id, 'id', 'enter the car id');\r\n       assert.isNumber(res.body.data.owner, 'owner', 'enter the owner id');\r\n       assert.property(res.body.data.createdOn, 'createdOn', 'enter date of post ad');\r\n       assert.isString(res.body.data.make, 'make' ,'enter make of car');       \r\n       assert.isString(res.body.data.model, 'model', 'enter model of car');\r\n       assert.isNumber(res.body.data.price, 'price', 'enter price of car');\r\n       assert.isString(res.body.data.status, 'status', 'enter status of car');\r\n       assert.isString(res.body.data.bodytype, 'bodytype', 'enter bodytype of car');\r\n       assert.isNumber(res.body.data.year, 'year', 'enter the year of car');\r\n   });\r\n  }),\r\n  it('should return an error if make is not provided', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1//car')\r\n      .send(testMakeDetail[2])\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .end((err, res) => {\r\n       expect(res.body).have.status(400);\r\n   \t   expect(res.statusCode).to.equal(400);\r\n       expect(res.body.status).to.equal(300);\r\n       expect(res.body).to.be.an('object');\r\n       expect(res.body.data).to.be.an('object');\r\n       expect(res.body.data.make).to.be.a('string');\r\n       expect(res.body.error).to.be.an('object');\r\n       assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\r\n        assert.strictEqual(res.body.status, 400, 'Status is not 400');\r\n        assert.strictEqual(res.body.error,\r\n          'Make should not be empty',\r\n          'Expect error to be Make should not be empty');\r\n        assert.isNotNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  }),   \r\n\r\nit('should return an error if model is not provided', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1//car')\r\n      .send(testMakeDetail[2])\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .end((err, res) => {\r\n       expect(res.body).have.status(400);\r\n   \t   expect(res.statusCode).to.equal(400);\r\n       expect(res.body.status).to.equal(300);\r\n       expect(res.body).to.be.an('object');\r\n       expect(res.body.data).to.be.an('object');\r\n       expect(res.body.data.make).to.be.a('string');\r\n       expect(res.body.error).to.be.an('object');\r\n       assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\r\n        assert.strictEqual(res.body.status, 400, 'Status is not 400');\r\n        assert.strictEqual(res.body.error,\r\n          'Model should not be empty',\r\n          'Expect error to be model should not be empty');\r\n        assert.isNotNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n  }), \r\n  it('should return an error if incorrect car status is provided', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1//car')\r\n      .send(testMakeDetail[0])\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .end((err, res) => {\r\n        expect(res.body).have.status(400);\r\n        expect(res.body).to.be.a('object');\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('error');\r\n        expect(res.body.status).to.equal(400);\r\n        expect(res.body.error).to.be.a('object');\r\n        expect(res.body.error).to.have.property('status');\r\n        expect(res.body.error.state).to.equal('The valid options are either New, new, NEW or Old, old, OLD',);\r\n        done();\r\n      });\r\n  }),\r\n  it('should return an error if incorrect bodytpe is provided', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1//car')\r\n      .send(testMakeDetail[1])\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .end((err, res) => {\r\n       expect(res.body).have.status(400);\r\n        expect(res.body).to.be.a('object');\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('error');\r\n        expect(res.body.status).to.equal(400);\r\n        expect(res.body.error).to.be.a('object');\r\n        expect(res.body.error).to.have.property('bodytype');\r\n        expect(res.body.error.bodytype).to.equal('The valid options are saloon, wagon and suv');\r\n        done();\r\n      });\r\n  });\r\n\r\n\r\ndescribe('Get a car', () => {\r\n  it('should get an available car present in db', (done) => {\r\n    chai\r\n      .request(app)\r\n      .get('/api/v1//car')\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(200);\r\n        expect(res.body.data).to.be.an('object');\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body.data).to.be.a('object');\r\n        expect(res.body.data).to.have.property('id');\r\n        expect(res.body.data).to.have.property('owner');\r\n        expect(res.body.data).to.have.property('createdOn');\r\n        expect(res.body.data).to.have.property('make');\r\n        expect(res.body.data).to.have.property('model');\r\n        expect(res.body.data).to.have.property('price');\r\n        expect(res.body.data).to.have.property('state');\r\n        expect(res.body.data).to.have.property('bodyType');\r\n        expect(res.body.data).to.have.property('year');\r\n        done();\r\n      });\r\n  });\r\n  it('should return an error if the car is not in the db', (done) => {\r\n    chai\r\n      .request(app)\r\n      .get('/api/v1//car')\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .end((err, res) => {\r\n         expect(res).to.have.status(404);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.be.an('object');\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('error');\r\n        expect(res.body.status).to.equal(404);\r\n        expect(res.body.error).to.equal(\"The requested car is not available\");\r\n        done();\r\n      });\r\n  });\r\n  it('should return an error if the ID is not a number', (done) => {\r\n    chai\r\n      .request(app)\r\n      .get('/api/v1//car')\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .end((err, res) => {\r\n         expect(res).to.have.status(400);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.be.an('object');\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('error');\r\n        expect(res.body.status).to.equal(400);\r\n        expect(res.body.error).to.equal('The ID must contain numbers');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('Get all cars', () => {\r\n  it('should get all the cars in the db', (done) => {\r\n    chai\r\n      .request(app)\r\n      .get('/api/v1//car')\r\n      .set({\r\n        'Content-type': 'application/json',\r\n      })\r\n      .end((err, res) => {\r\n\r\n       \texpect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equal(200);\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('data');\r\n        expect(res.body.data).to.be.an('array');\r\n        expect(res.body.data[0]).to.be.an('object');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n\r\n  it('should display an error 404 message if car is not available', (done) => {\r\n    chai\r\n      .request(app)\r\n      .delete('/api/v1/car/190')\r\n      .end((err, res) => {\r\n        expect(res).to.have.status(404);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('error');\r\n        expect(res.body.status).to.equal(404);\r\n        expect(res.body.error).to.be.equal('The requested car is not available');\r\n        done();\r\n      });\r\n  });\r\n\r\n\r\nit('Should return an error message if price is not a number', (done) => {\r\n    chai\r\n      .request(app)\r\n      .post('/api/v1/car')\r\n      .set({\r\n        'Content-Type': 'multipart/form-data',\r\n        \r\n      })\r\n\r\n      .end((err, res) => {\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.equals(400);\r\n        expect(res.statusCode).to.equal(400);\r\n        expect(res.body.error).to.equals('Enter a valid price');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 400, 'Status code is not 400');\r\n        assert.strictEqual(res.body.status, 400, 'Status is not 400');\r\n        assert.strictEqual(res.body.error, 'Enter a valid price');\r\n        assert.isNull(err, 'Unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\nit('Should update car AD price', (done) => {\r\n    chai\r\n      .request(app)\r\n      .patch(`/api/v1/car/carDetail/price`)\r\n      .set({'Content-Type': 'application/json'})\r\n      .send(updatePrice[0])\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.status).to.be.equal(200);\r\n        expect(res.body.data).to.be.an('object');\r\n        expect(res.body.data.id).to.be.a('number');\r\n        expect(res.body.data.created_on).to.be.a('string');\r\n        expect(res.body.data.email).to.be.a('string');\r\n        expect(res.body.data.make).to.be.a('string');\r\n        expect(res.body.data.model).to.be.a('string');\r\n        expect(res.body.data.price).to.be.a('number');\r\n        expect(res.body.data.state).to.be.a('string');\r\n        expect(res.body.data.status).to.equal('available');\r\n        expect(res.body.data.year).to.be.a('number');\r\n        assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\r\n        assert.strictEqual(res.body.status, 200, 'Status is not 200');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.isObject(res.body.data, 'Data is not an object');\r\n        assert.isNumber(res.body.data.id, 'ID is not a number');\r\n        assert.isString(res.body.data.created_on, 'Date is not a string');\r\n        assert.isString(res.body.data.manufacturer, 'Manufacturer is not a string');\r\n        assert.isString(res.body.data.model, 'Model is not a string');\r\n        assert.strictEqual(res.body.data.status, 'available', 'Status is not available');\r\n        assert.isNumber(res.body.data.price, 'Price is not a number');\r\n        assert.isString(res.body.data.state, 'State is not a string');\r\n        assert.isNumber(res.body.data.year, 'Year is not a number');\r\n        assert.isNull(err, 'Unexpected error');\r\n        done();\r\n      });\r\n});\r\n\r\nit('Should return all unsold cars of a specific manufacturer', (done) => {\r\n    chai\r\n      .request(app)\r\n      .get('/api/v1/car')\r\n      .query({\r\n        status: 'available',\r\n        manufacturer: 'Toyota',\r\n      })\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n        })\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.data).to.be.an('array');\r\n        assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.isArray(res.body.data, 'Data is not array');\r\n        assert.isNull(err, 'unexpected error');\r\n        done();\r\n      });\r\n});\r\nit('Should delete an AD if user is an admin', (done) => {\r\n    chai\r\n      .request(app)\r\n      .delete(`/api/v1/car/${carAd.id}`)\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n         })\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.data).to.be.equal('Car Ad successfully deleted');\r\n        expect(res.body.data).to.be.a('string');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 200, 'Status code is not 200');\r\n        assert.isString(res.body.data, 'Data is not a string');\r\n        assert.strictEqual(res.body.data,\r\n          'Car Ad successfully deleted',\r\n          'Data is not equal to Car Ad successfully deleted');\r\n        assert.isNull(err, 'Expect error to not exist');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return a message if record is not found', (done) => {\r\n    chai\r\n      .request(app)\r\n      .delete('/api/v1/car/11111045')\r\n      .set({\r\n        'Content-Type': 'application/json'\r\n    \t})\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.data).to.be.equal('No record found');\r\n        expect(res.body.data).to.be.a('string');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 200);\r\n        assert.isString(res.body.data, 'Data is not a string');\r\n        assert.strictEqual(res.body.data,\r\n          'No record found',\r\n          'Data is not available');\r\n        assert.isNull(err, 'Unexpected error');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return an error if user is not an admin', (done) => {\r\n    chai\r\n      .request(app)\r\n      .delete(`/api/v1/car/${carAd.id}`)\r\n      .set({\r\n        'Content-Type': 'application/json'})\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(403);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.error).to.be.equal('Forbidden: Only Admin can delete an AD');\r\n        expect(res.body.error).to.be.a('string');\r\n        assert.isObject(res.body, 'Response is not an object');\r\n        assert.strictEqual(res.statusCode, 403);\r\n        assert.isString(res.body.error, 'Data is not a string');\r\n        assert.strictEqual(res.body.error,\r\n          'Forbidden: Only Admin user can delete an AD',\r\n          'Only Admin user can delete an AD');\r\n        assert.isNull(err, 'Unexpected error');\r\n        done();\r\n      });\r\n  });\r\n});\r\ndescribe('DELETE a car', () => {\r\n  it('should remove a car and display a success message', (done) => {\r\n    chai\r\n      .request(app)\r\n      .delete('/api/v1//car3')\r\n      .end((err, res) => {\r\n        expect(res.statusCode).to.equal(200);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body).to.have.property('status');\r\n        expect(res.body).to.have.property('data');\r\n        expect(res.body.status).to.equal(200);\r\n        expect(res.body.data).to.be.a('object');\r\n        expect(res.body.data).to.have.property('message');\r\n        expect(res.body.data).to.have.property('car');\r\n        expect(res.body.data.message).to.equal('Car Ad has been deleted succesfully');\r\n        expect(res.body.data).to.have.property('id');\r\n        expect(res.body.data).to.have.property('owner');\r\n        expect(res.body.data).to.have.property('createdOn');\r\n        expect(res.body.data).to.have.property('make');\r\n        expect(res.body.data).to.have.property('model');\r\n        expect(res.body.data).to.have.property('price');\r\n        expect(res.body.data).to.have.property('state');\r\n        expect(res.body.data).to.have.property('bodyType');\r\n        expect(res.body.data).to.have.property('year');\r\n        done();\r\n      });\r\n  });\r\n});\r\n  \r\n\r\n\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560180545532
  }
}