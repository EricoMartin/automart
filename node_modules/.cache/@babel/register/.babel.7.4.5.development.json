{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\car-spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "car-spec.js"
      }
    },
    "ast": null,
    "code": "//import chai from 'chai';\n//import car from '../models/car.js';\nconst {\n  expect,\n  assert\n} = chai;\ndescribe('Car Endpoint', () => {\n  describe('Create a car ad', () => {\n    it('should create a car sale ad', () => {\n      const newCar = car.newCarAd({\n        owner: 1,\n        manufacturer: 'Honda',\n        model: 'Accord',\n        price: 5000000,\n        state: 'New',\n        body_type: 'saloon',\n        year: '2009',\n        status: 'available'\n      });\n      expect(newCar).to.have.property('created_on');\n      expect(newCar).to.have.property('id');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhci1zcGVjLmpzIl0sIm5hbWVzIjpbImV4cGVjdCIsImFzc2VydCIsImNoYWkiLCJkZXNjcmliZSIsIml0IiwibmV3Q2FyIiwiY2FyIiwibmV3Q2FyQWQiLCJvd25lciIsIm1hbnVmYWN0dXJlciIsIm1vZGVsIiwicHJpY2UiLCJzdGF0ZSIsImJvZHlfdHlwZSIsInllYXIiLCJzdGF0dXMiLCJ0byIsImhhdmUiLCJwcm9wZXJ0eSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUVBLE1BQU07QUFBRUEsRUFBQUEsTUFBRjtBQUFVQyxFQUFBQTtBQUFWLElBQXFCQyxJQUEzQjtBQUVBQyxRQUFRLENBQUMsY0FBRCxFQUFpQixNQUFNO0FBQzdCQSxFQUFBQSxRQUFRLENBQUMsaUJBQUQsRUFBb0IsTUFBTTtBQUNoQ0MsSUFBQUEsRUFBRSxDQUFDLDZCQUFELEVBQWdDLE1BQU07QUFDdEMsWUFBTUMsTUFBTSxHQUFHQyxHQUFHLENBQUNDLFFBQUosQ0FBYTtBQUMxQkMsUUFBQUEsS0FBSyxFQUFFLENBRG1CO0FBRTFCQyxRQUFBQSxZQUFZLEVBQUUsT0FGWTtBQUcxQkMsUUFBQUEsS0FBSyxFQUFFLFFBSG1CO0FBSTFCQyxRQUFBQSxLQUFLLEVBQUUsT0FKbUI7QUFLMUJDLFFBQUFBLEtBQUssRUFBRSxLQUxtQjtBQU0xQkMsUUFBQUEsU0FBUyxFQUFFLFFBTmU7QUFPMUJDLFFBQUFBLElBQUksRUFBRSxNQVBvQjtBQVExQkMsUUFBQUEsTUFBTSxFQUFFO0FBUmtCLE9BQWIsQ0FBZjtBQVVBZixNQUFBQSxNQUFNLENBQUNLLE1BQUQsQ0FBTixDQUFlVyxFQUFmLENBQWtCQyxJQUFsQixDQUF1QkMsUUFBdkIsQ0FBZ0MsWUFBaEM7QUFDQWxCLE1BQUFBLE1BQU0sQ0FBQ0ssTUFBRCxDQUFOLENBQWVXLEVBQWYsQ0FBa0JDLElBQWxCLENBQXVCQyxRQUF2QixDQUFnQyxJQUFoQztBQUNELEtBYkMsQ0FBRjtBQWNELEdBZk8sQ0FBUjtBQWlCQyxDQWxCSyxDQUFSIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0XFxzZXJ2ZXJcXHRlc3QiLCJzb3VyY2VzQ29udGVudCI6WyIvL2ltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xyXG4vL2ltcG9ydCBjYXIgZnJvbSAnLi4vbW9kZWxzL2Nhci5qcyc7XHJcblxyXG5jb25zdCB7IGV4cGVjdCwgYXNzZXJ0IH0gPSBjaGFpO1xyXG5cclxuZGVzY3JpYmUoJ0NhciBFbmRwb2ludCcsICgpID0+IHtcclxuICBkZXNjcmliZSgnQ3JlYXRlIGEgY2FyIGFkJywgKCkgPT4ge1xyXG4gICAgaXQoJ3Nob3VsZCBjcmVhdGUgYSBjYXIgc2FsZSBhZCcsICgpID0+IHtcclxuICAgICAgY29uc3QgbmV3Q2FyID0gY2FyLm5ld0NhckFkKHtcclxuICAgICAgICBvd25lcjogMSxcclxuICAgICAgICBtYW51ZmFjdHVyZXI6ICdIb25kYScsXHJcbiAgICAgICAgbW9kZWw6ICdBY2NvcmQnLFxyXG4gICAgICAgIHByaWNlOiA1MDAwMDAwLFxyXG4gICAgICAgIHN0YXRlOiAnTmV3JyxcclxuICAgICAgICBib2R5X3R5cGU6ICdzYWxvb24nLFxyXG4gICAgICAgIHllYXI6ICcyMDA5JyxcclxuICAgICAgICBzdGF0dXM6ICdhdmFpbGFibGUnLFxyXG4gICAgICB9KTtcclxuICAgICAgZXhwZWN0KG5ld0NhcikudG8uaGF2ZS5wcm9wZXJ0eSgnY3JlYXRlZF9vbicpO1xyXG4gICAgICBleHBlY3QobmV3Q2FyKS50by5oYXZlLnByb3BlcnR5KCdpZCcpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIH0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "car-spec.js"
      ],
      "names": [
        "expect",
        "assert",
        "chai",
        "describe",
        "it",
        "newCar",
        "car",
        "newCarAd",
        "owner",
        "manufacturer",
        "model",
        "price",
        "state",
        "body_type",
        "year",
        "status",
        "to",
        "have",
        "property"
      ],
      "mappings": "AAAA;AACA;AAEA,MAAM;AAAEA,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAqBC,IAA3B;AAEAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7BA,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCC,IAAAA,EAAE,CAAC,6BAAD,EAAgC,MAAM;AACtC,YAAMC,MAAM,GAAGC,GAAG,CAACC,QAAJ,CAAa;AAC1BC,QAAAA,KAAK,EAAE,CADmB;AAE1BC,QAAAA,YAAY,EAAE,OAFY;AAG1BC,QAAAA,KAAK,EAAE,QAHmB;AAI1BC,QAAAA,KAAK,EAAE,OAJmB;AAK1BC,QAAAA,KAAK,EAAE,KALmB;AAM1BC,QAAAA,SAAS,EAAE,QANe;AAO1BC,QAAAA,IAAI,EAAE,MAPoB;AAQ1BC,QAAAA,MAAM,EAAE;AARkB,OAAb,CAAf;AAUAf,MAAAA,MAAM,CAACK,MAAD,CAAN,CAAeW,EAAf,CAAkBC,IAAlB,CAAuBC,QAAvB,CAAgC,YAAhC;AACAlB,MAAAA,MAAM,CAACK,MAAD,CAAN,CAAeW,EAAf,CAAkBC,IAAlB,CAAuBC,QAAvB,CAAgC,IAAhC;AACD,KAbC,CAAF;AAcD,GAfO,CAAR;AAiBC,CAlBK,CAAR",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "//import chai from 'chai';\r\n//import car from '../models/car.js';\r\n\r\nconst { expect, assert } = chai;\r\n\r\ndescribe('Car Endpoint', () => {\r\n  describe('Create a car ad', () => {\r\n    it('should create a car sale ad', () => {\r\n      const newCar = car.newCarAd({\r\n        owner: 1,\r\n        manufacturer: 'Honda',\r\n        model: 'Accord',\r\n        price: 5000000,\r\n        state: 'New',\r\n        body_type: 'saloon',\r\n        year: '2009',\r\n        status: 'available',\r\n      });\r\n      expect(newCar).to.have.property('created_on');\r\n      expect(newCar).to.have.property('id');\r\n    });\r\n  });\r\n\r\n  });"
      ]
    },
    "sourceType": "module",
    "mtime": 1561755480895
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\car-spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "car-spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _car = _interopRequireDefault(require(\"../models/car\"));\n\nvar _cars = _interopRequireDefault(require(\"./mock_db/cars\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar expect = _chai[\"default\"].expect;\ndescribe('car Endpoint', function () {\n  describe('Create a car ad', function () {\n    it('should create a car sale ad', function () {\n      var newCar = _car[\"default\"].newCarAd({\n        owner: 1,\n        manufacturer: 'Honda',\n        model: 'Accord',\n        price: 5000000,\n        state: 'New',\n        body_type: 'saloon',\n        year: '2009',\n        status: 'available'\n      });\n\n      expect(newCar).to.be.a('object');\n      expect(newCar).to.have.property('id');\n      expect(newCar).to.have.property('owner');\n      expect(newCar).to.have.property('created_on');\n      expect(newCar).to.have.property('manufacturer');\n      expect(newCar).to.have.property('model');\n      expect(newCar).to.have.property('price');\n      expect(newCar).to.have.property('state');\n      expect(newCar).to.have.property('body_type');\n      expect(newCar).to.have.property('status');\n    });\n  });\n  describe('Find a car ad', function () {\n    it('should return a car ad', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var id = _cars[\"default\"][0].id;\n\n      var res = _car[\"default\"].findCarAd(id);\n\n      expect(res).to.be.an('array');\n    });\n    it('should return an empty array if not found', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n\n      var res = _car[\"default\"].findCarAd('0000000000787888888888');\n\n      expect(res).to.be.an('array');\n    });\n  });\n  describe('Get all ads', function () {\n    it('should return all ads', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n\n      var cars = _car[\"default\"].getAllCars();\n\n      expect(cars).to.be.an('array');\n      expect(cars[0]).to.have.property('id');\n    });\n    it('should return an empty array if there are no ads', function () {\n      var cars = _car[\"default\"].getAllCars();\n\n      expect(cars).to.be.an('array');\n    });\n  });\n  describe('Get all unsold cars', function () {\n    it('should return all usold cars', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n\n      var cars = _car[\"default\"].getAllUnsoldCars();\n\n      expect(cars).to.be.an('array');\n      expect(cars[0]).to.have.property('status');\n    });\n  });\n  describe('Get unsold cars by manufacturer', function () {\n    it('should return unsold cars by manufacturer', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var manufacturer = _cars[\"default\"][0].manufacturer;\n\n      var res = _car[\"default\"].getUnsoldCarByProp('manufacturer', manufacturer);\n\n      expect(res).to.be.an('object');\n    });\n  });\n  describe('Get unsold cars by body_type', function () {\n    it('should return unsold cars by body_type', function () {\n      _car[\"default\"].cars = _cars[\"default\"]; // eslint-disable-next-line camelcase\n\n      var body_type = _cars[\"default\"][0].body_type;\n\n      var res = _car[\"default\"].getUnsoldCarByProp('body_type', body_type);\n\n      expect(res).to.be.an('object');\n    });\n  });\n  describe('Get unsold cars by State', function () {\n    it('should return unsold cars by state', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var state = _cars[\"default\"][0].state;\n\n      var res = _car[\"default\"].getUnsoldCarByProp('state', state);\n\n      expect(res).to.be.an('object');\n    });\n  });\n  describe('Update car ad', function () {\n    it('should return updated car ad', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var status = _cars[\"default\"][1].status;\n\n      var res = _car[\"default\"].getCarByProp('status', status);\n\n      expect(res).to.be.an('object');\n      expect(res.status).to.equal('sold');\n    });\n  });\n  describe('get all unsold cars withn a price range', function () {\n    it('should return all car ads within a price range', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var maxPrice = 10000000;\n      var minPrice = 3500000;\n\n      var res = _car[\"default\"].getCarPriceRange(maxPrice, minPrice);\n\n      expect(res).to.be.an('array');\n    });\n  });\n  describe('Delete a car ad', function () {\n    it('should delete car ad', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var id = _cars[\"default\"][3].id;\n\n      var res = _car[\"default\"].deleteCar(id);\n\n      expect(res).to.be.an('array');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "car-spec.js"
      ],
      "names": [
        "expect",
        "chai",
        "describe",
        "it",
        "newCar",
        "Car",
        "newCarAd",
        "owner",
        "manufacturer",
        "model",
        "price",
        "state",
        "body_type",
        "year",
        "status",
        "to",
        "be",
        "a",
        "have",
        "property",
        "cars",
        "carsData",
        "id",
        "res",
        "findCarAd",
        "an",
        "getAllCars",
        "getAllUnsoldCars",
        "getUnsoldCarByProp",
        "getCarByProp",
        "equal",
        "maxPrice",
        "minPrice",
        "getCarPriceRange",
        "deleteCar"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;IAEQA,M,GAAWC,gB,CAAXD,M;AAERE,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BA,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChCC,IAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAM;AACtC,UAAMC,MAAM,GAAGC,gBAAIC,QAAJ,CAAa;AAC1BC,QAAAA,KAAK,EAAE,CADmB;AAE1BC,QAAAA,YAAY,EAAE,OAFY;AAG1BC,QAAAA,KAAK,EAAE,QAHmB;AAI1BC,QAAAA,KAAK,EAAE,OAJmB;AAK1BC,QAAAA,KAAK,EAAE,KALmB;AAM1BC,QAAAA,SAAS,EAAE,QANe;AAO1BC,QAAAA,IAAI,EAAE,MAPoB;AAQ1BC,QAAAA,MAAM,EAAE;AARkB,OAAb,CAAf;;AAUAd,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBC,EAAlB,CAAqBC,CAArB,CAAuB,QAAvB;AACAjB,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBG,IAAlB,CAAuBC,QAAvB,CAAgC,IAAhC;AACAnB,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBG,IAAlB,CAAuBC,QAAvB,CAAgC,OAAhC;AACAnB,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBG,IAAlB,CAAuBC,QAAvB,CAAgC,YAAhC;AACAnB,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBG,IAAlB,CAAuBC,QAAvB,CAAgC,cAAhC;AACAnB,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBG,IAAlB,CAAuBC,QAAvB,CAAgC,OAAhC;AACAnB,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBG,IAAlB,CAAuBC,QAAvB,CAAgC,OAAhC;AACAnB,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBG,IAAlB,CAAuBC,QAAvB,CAAgC,OAAhC;AACAnB,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBG,IAAlB,CAAuBC,QAAvB,CAAgC,WAAhC;AACAnB,MAAAA,MAAM,CAACI,MAAD,CAAN,CAAeW,EAAf,CAAkBG,IAAlB,CAAuBC,QAAvB,CAAgC,QAAhC;AACD,KArBC,CAAF;AAsBD,GAvBO,CAAR;AAyBAjB,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BC,IAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAM;AACjCE,sBAAIe,IAAJ,GAAWC,gBAAX;AADiC,UAEzBC,EAFyB,GAElBD,iBAAS,CAAT,CAFkB,CAEzBC,EAFyB;;AAGjC,UAAMC,GAAG,GAAGlB,gBAAImB,SAAJ,CAAcF,EAAd,CAAZ;;AACAtB,MAAAA,MAAM,CAACuB,GAAD,CAAN,CAAYR,EAAZ,CAAeC,EAAf,CAAkBS,EAAlB,CAAqB,OAArB;AACD,KALC,CAAF;AAMAtB,IAAAA,EAAE,CAAC,2CAAD,EAA8C,YAAM;AACpDE,sBAAIe,IAAJ,GAAWC,gBAAX;;AACA,UAAME,GAAG,GAAGlB,gBAAImB,SAAJ,CAAc,wBAAd,CAAZ;;AACAxB,MAAAA,MAAM,CAACuB,GAAD,CAAN,CAAYR,EAAZ,CAAeC,EAAf,CAAkBS,EAAlB,CAAqB,OAArB;AACD,KAJC,CAAF;AAKD,GAZO,CAAR;AAcAvB,EAAAA,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5BC,IAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAM;AAChCE,sBAAIe,IAAJ,GAAWC,gBAAX;;AACA,UAAMD,IAAI,GAAGf,gBAAIqB,UAAJ,EAAb;;AACA1B,MAAAA,MAAM,CAACoB,IAAD,CAAN,CAAaL,EAAb,CAAgBC,EAAhB,CAAmBS,EAAnB,CAAsB,OAAtB;AACAzB,MAAAA,MAAM,CAACoB,IAAI,CAAC,CAAD,CAAL,CAAN,CAAgBL,EAAhB,CAAmBG,IAAnB,CAAwBC,QAAxB,CAAiC,IAAjC;AACD,KALC,CAAF;AAMAhB,IAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AAC3D,UAAMiB,IAAI,GAAGf,gBAAIqB,UAAJ,EAAb;;AACA1B,MAAAA,MAAM,CAACoB,IAAD,CAAN,CAAaL,EAAb,CAAgBC,EAAhB,CAAmBS,EAAnB,CAAsB,OAAtB;AACD,KAHC,CAAF;AAID,GAXO,CAAR;AAaAvB,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACpCC,IAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvCE,sBAAIe,IAAJ,GAAWC,gBAAX;;AACA,UAAMD,IAAI,GAAGf,gBAAIsB,gBAAJ,EAAb;;AACA3B,MAAAA,MAAM,CAACoB,IAAD,CAAN,CAAaL,EAAb,CAAgBC,EAAhB,CAAmBS,EAAnB,CAAsB,OAAtB;AACAzB,MAAAA,MAAM,CAACoB,IAAI,CAAC,CAAD,CAAL,CAAN,CAAgBL,EAAhB,CAAmBG,IAAnB,CAAwBC,QAAxB,CAAiC,QAAjC;AACD,KALC,CAAF;AAMD,GAPO,CAAR;AAQAjB,EAAAA,QAAQ,CAAC,iCAAD,EAAoC,YAAM;AAChDC,IAAAA,EAAE,CAAC,2CAAD,EAA8C,YAAM;AACpDE,sBAAIe,IAAJ,GAAWC,gBAAX;AADoD,UAE5Cb,YAF4C,GAE3Ba,iBAAS,CAAT,CAF2B,CAE5Cb,YAF4C;;AAGpD,UAAMe,GAAG,GAAGlB,gBAAIuB,kBAAJ,CAAuB,cAAvB,EAAuCpB,YAAvC,CAAZ;;AACAR,MAAAA,MAAM,CAACuB,GAAD,CAAN,CAAYR,EAAZ,CAAeC,EAAf,CAAkBS,EAAlB,CAAqB,QAArB;AACD,KALC,CAAF;AAMD,GAPO,CAAR;AAQAvB,EAAAA,QAAQ,CAAC,8BAAD,EAAiC,YAAM;AAC7CC,IAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAM;AACjDE,sBAAIe,IAAJ,GAAWC,gBAAX,CADiD,CAEjD;;AAFiD,UAGzCT,SAHyC,GAG3BS,iBAAS,CAAT,CAH2B,CAGzCT,SAHyC;;AAIjD,UAAMW,GAAG,GAAGlB,gBAAIuB,kBAAJ,CAAuB,WAAvB,EAAoChB,SAApC,CAAZ;;AACAZ,MAAAA,MAAM,CAACuB,GAAD,CAAN,CAAYR,EAAZ,CAAeC,EAAf,CAAkBS,EAAlB,CAAqB,QAArB;AACD,KANC,CAAF;AAOD,GARO,CAAR;AASAvB,EAAAA,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACzCC,IAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7CE,sBAAIe,IAAJ,GAAWC,gBAAX;AAD6C,UAErCV,KAFqC,GAE3BU,iBAAS,CAAT,CAF2B,CAErCV,KAFqC;;AAG7C,UAAMY,GAAG,GAAGlB,gBAAIuB,kBAAJ,CAAuB,OAAvB,EAAgCjB,KAAhC,CAAZ;;AACAX,MAAAA,MAAM,CAACuB,GAAD,CAAN,CAAYR,EAAZ,CAAeC,EAAf,CAAkBS,EAAlB,CAAqB,QAArB;AACD,KALC,CAAF;AAMD,GAPO,CAAR;AASAvB,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BC,IAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvCE,sBAAIe,IAAJ,GAAWC,gBAAX;AADuC,UAE/BP,MAF+B,GAEpBO,iBAAS,CAAT,CAFoB,CAE/BP,MAF+B;;AAGvC,UAAMS,GAAG,GAAGlB,gBAAIwB,YAAJ,CAAiB,QAAjB,EAA2Bf,MAA3B,CAAZ;;AACAd,MAAAA,MAAM,CAACuB,GAAD,CAAN,CAAYR,EAAZ,CAAeC,EAAf,CAAkBS,EAAlB,CAAqB,QAArB;AACAzB,MAAAA,MAAM,CAACuB,GAAG,CAACT,MAAL,CAAN,CAAmBC,EAAnB,CAAsBe,KAAtB,CAA4B,MAA5B;AACD,KANC,CAAF;AAOD,GARO,CAAR;AAUA5B,EAAAA,QAAQ,CAAC,yCAAD,EAA4C,YAAM;AACxDC,IAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAM;AACzDE,sBAAIe,IAAJ,GAAWC,gBAAX;AACA,UAAMU,QAAQ,GAAG,QAAjB;AACA,UAAMC,QAAQ,GAAG,OAAjB;;AACA,UAAMT,GAAG,GAAGlB,gBAAI4B,gBAAJ,CAAqBF,QAArB,EAA+BC,QAA/B,CAAZ;;AACAhC,MAAAA,MAAM,CAACuB,GAAD,CAAN,CAAYR,EAAZ,CAAeC,EAAf,CAAkBS,EAAlB,CAAqB,OAArB;AACD,KANC,CAAF;AAOD,GARO,CAAR;AAWAvB,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChCC,IAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAM;AAC/BE,sBAAIe,IAAJ,GAAWC,gBAAX;AAD+B,UAEvBC,EAFuB,GAEhBD,iBAAS,CAAT,CAFgB,CAEvBC,EAFuB;;AAG/B,UAAMC,GAAG,GAAGlB,gBAAI6B,SAAJ,CAAcZ,EAAd,CAAZ;;AACAtB,MAAAA,MAAM,CAACuB,GAAD,CAAN,CAAYR,EAAZ,CAAeC,EAAf,CAAkBS,EAAlB,CAAqB,OAArB;AACD,KALC,CAAF;AAMD,GAPO,CAAR;AAQD,CApHO,CAAR",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "import chai from 'chai';\nimport Car from '../models/car';\nimport carsData from './mock_db/cars';\n\nconst { expect } = chai;\n\ndescribe('car Endpoint', () => {\n  describe('Create a car ad', () => {\n    it('should create a car sale ad', () => {\n      const newCar = Car.newCarAd({\n        owner: 1,\n        manufacturer: 'Honda',\n        model: 'Accord',\n        price: 5000000,\n        state: 'New',\n        body_type: 'saloon',\n        year: '2009',\n        status: 'available',\n      });\n      expect(newCar).to.be.a('object');\n      expect(newCar).to.have.property('id');\n      expect(newCar).to.have.property('owner');\n      expect(newCar).to.have.property('created_on');\n      expect(newCar).to.have.property('manufacturer');\n      expect(newCar).to.have.property('model');\n      expect(newCar).to.have.property('price');\n      expect(newCar).to.have.property('state');\n      expect(newCar).to.have.property('body_type');\n      expect(newCar).to.have.property('status');\n    });\n  });\n\n  describe('Find a car ad', () => {\n    it('should return a car ad', () => {\n      Car.cars = carsData;\n      const { id } = carsData[0];\n      const res = Car.findCarAd(id);\n      expect(res).to.be.an('array');\n    });\n    it('should return an empty array if not found', () => {\n      Car.cars = carsData;\n      const res = Car.findCarAd('0000000000787888888888');\n      expect(res).to.be.an('array');\n    });\n  });\n\n  describe('Get all ads', () => {\n    it('should return all ads', () => {\n      Car.cars = carsData;\n      const cars = Car.getAllCars();\n      expect(cars).to.be.an('array');\n      expect(cars[0]).to.have.property('id');\n    });\n    it('should return an empty array if there are no ads', () => {\n      const cars = Car.getAllCars();\n      expect(cars).to.be.an('array');\n    });\n  });\n\n  describe('Get all unsold cars', () => {\n    it('should return all usold cars', () => {\n      Car.cars = carsData;\n      const cars = Car.getAllUnsoldCars();\n      expect(cars).to.be.an('array');\n      expect(cars[0]).to.have.property('status');\n    });\n  });\n  describe('Get unsold cars by manufacturer', () => {\n    it('should return unsold cars by manufacturer', () => {\n      Car.cars = carsData;\n      const { manufacturer } = carsData[0];\n      const res = Car.getUnsoldCarByProp('manufacturer', manufacturer);\n      expect(res).to.be.an('object');\n    });\n  });\n  describe('Get unsold cars by body_type', () => {\n    it('should return unsold cars by body_type', () => {\n      Car.cars = carsData;\n      // eslint-disable-next-line camelcase\n      const { body_type } = carsData[0];\n      const res = Car.getUnsoldCarByProp('body_type', body_type);\n      expect(res).to.be.an('object');\n    });\n  });\n  describe('Get unsold cars by State', () => {\n    it('should return unsold cars by state', () => {\n      Car.cars = carsData;\n      const { state } = carsData[0];\n      const res = Car.getUnsoldCarByProp('state', state);\n      expect(res).to.be.an('object');\n    });\n  });\n\n  describe('Update car ad', () => {\n    it('should return updated car ad', () => {\n      Car.cars = carsData;\n      const { status } = carsData[1];\n      const res = Car.getCarByProp('status', status);\n      expect(res).to.be.an('object');\n      expect(res.status).to.equal('sold');\n    });\n  });\n\n  describe('get all unsold cars withn a price range', () => {\n    it('should return all car ads within a price range', () => {\n      Car.cars = carsData;\n      const maxPrice = 10000000;\n      const minPrice = 3500000;\n      const res = Car.getCarPriceRange(maxPrice, minPrice);\n      expect(res).to.be.an('array');\n    });\n  });\n\n\n  describe('Delete a car ad', () => {\n    it('should delete car ad', () => {\n      Car.cars = carsData;\n      const { id } = carsData[3];\n      const res = Car.deleteCar(id);\n      expect(res).to.be.an('array');\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561882015502
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\\\\car.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\car.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\car.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\car.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
        "sourceFileName": "car.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _cars = _interopRequireDefault(require(\"../test/mock_db/cars\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Car =\n/*#__PURE__*/\nfunction () {\n  function Car() {\n    _classCallCheck(this, Car);\n\n    this.cars = _cars[\"default\"];\n  }\n\n  _createClass(Car, [{\n    key: \"newCarAd\",\n    value: function newCarAd(data) {\n      var id = parseInt(_cars[\"default\"].length + 22000, 10);\n      var carData = {\n        id: id,\n        owner: data.owner || '',\n        created_on: new Date().toLocaleString(),\n        state: data.state || '',\n        status: data.status || 'available',\n        price: data.price || 0,\n        manufacturer: data.manufacturer || '',\n        model: data.model || '',\n        body_type: data.body_type || ''\n      };\n      this.cars.push(_cars[\"default\"]);\n      return carData;\n    }\n  }, {\n    key: \"getAllCars\",\n    value: function getAllCars() {\n      return this.cars;\n    }\n  }, {\n    key: \"findCarAd\",\n    value: function findCarAd(id) {\n      return this.cars.filter(function (car) {\n        return parseInt(car.id, 10) === parseInt(id, 10);\n      });\n    }\n  }, {\n    key: \"getAllUnsoldCars\",\n    value: function getAllUnsoldCars() {\n      return this.cars.filter(function (car) {\n        return car.status === 'available';\n      });\n    }\n  }, {\n    key: \"getCarByProp\",\n    value: function getCarByProp(key, value) {\n      return this.cars.find(function (car) {\n        return car[key] === value;\n      });\n    }\n  }, {\n    key: \"getUnsoldCarByProp\",\n    value: function getUnsoldCarByProp(key, value) {\n      return this.cars.find(function (car) {\n        return car[key] === value && car.status === 'available';\n      });\n    }\n  }, {\n    key: \"getCarPriceRange\",\n    value: function getCarPriceRange(maxPrice, minPrice) {\n      return this.cars.filter(function (car) {\n        return car.price <= maxPrice && car.price >= minPrice;\n      });\n    }\n  }, {\n    key: \"deleteCar\",\n    value: function deleteCar(car) {\n      var idx = this.cars.indexOf(car);\n      return this.cars.splice(idx, 1);\n    }\n  }]);\n\n  return Car;\n}();\n\nvar _default = new Car();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhci5qcyJdLCJuYW1lcyI6WyJDYXIiLCJjYXJzIiwiY2Fyc0RhdGEiLCJkYXRhIiwiaWQiLCJwYXJzZUludCIsImxlbmd0aCIsImNhckRhdGEiLCJvd25lciIsImNyZWF0ZWRfb24iLCJEYXRlIiwidG9Mb2NhbGVTdHJpbmciLCJzdGF0ZSIsInN0YXR1cyIsInByaWNlIiwibWFudWZhY3R1cmVyIiwibW9kZWwiLCJib2R5X3R5cGUiLCJwdXNoIiwiZmlsdGVyIiwiY2FyIiwia2V5IiwidmFsdWUiLCJmaW5kIiwibWF4UHJpY2UiLCJtaW5QcmljZSIsImlkeCIsImluZGV4T2YiLCJzcGxpY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUVNQSxHOzs7QUFDSixpQkFBYztBQUFBOztBQUNaLFNBQUtDLElBQUwsR0FBWUMsZ0JBQVo7QUFDRDs7Ozs2QkFFUUMsSSxFQUFNO0FBQ2IsVUFBTUMsRUFBRSxHQUFHQyxRQUFRLENBQUNILGlCQUFTSSxNQUFULEdBQWtCLEtBQW5CLEVBQTBCLEVBQTFCLENBQW5CO0FBQ0EsVUFBTUMsT0FBTyxHQUFHO0FBQ2RILFFBQUFBLEVBQUUsRUFBRkEsRUFEYztBQUVkSSxRQUFBQSxLQUFLLEVBQUVMLElBQUksQ0FBQ0ssS0FBTCxJQUFjLEVBRlA7QUFHZEMsUUFBQUEsVUFBVSxFQUFFLElBQUlDLElBQUosR0FBV0MsY0FBWCxFQUhFO0FBSWRDLFFBQUFBLEtBQUssRUFBRVQsSUFBSSxDQUFDUyxLQUFMLElBQWMsRUFKUDtBQUtkQyxRQUFBQSxNQUFNLEVBQUVWLElBQUksQ0FBQ1UsTUFBTCxJQUFlLFdBTFQ7QUFNZEMsUUFBQUEsS0FBSyxFQUFFWCxJQUFJLENBQUNXLEtBQUwsSUFBYyxDQU5QO0FBT2RDLFFBQUFBLFlBQVksRUFBRVosSUFBSSxDQUFDWSxZQUFMLElBQXFCLEVBUHJCO0FBUWRDLFFBQUFBLEtBQUssRUFBRWIsSUFBSSxDQUFDYSxLQUFMLElBQWMsRUFSUDtBQVNkQyxRQUFBQSxTQUFTLEVBQUVkLElBQUksQ0FBQ2MsU0FBTCxJQUFrQjtBQVRmLE9BQWhCO0FBV0EsV0FBS2hCLElBQUwsQ0FBVWlCLElBQVYsQ0FBZWhCLGdCQUFmO0FBQ0EsYUFBT0ssT0FBUDtBQUNEOzs7aUNBR1k7QUFDWCxhQUFPLEtBQUtOLElBQVo7QUFDRDs7OzhCQUVTRyxFLEVBQUk7QUFDWixhQUFPLEtBQUtILElBQUwsQ0FBVWtCLE1BQVYsQ0FBaUIsVUFBQUMsR0FBRztBQUFBLGVBQUlmLFFBQVEsQ0FBQ2UsR0FBRyxDQUFDaEIsRUFBTCxFQUFTLEVBQVQsQ0FBUixLQUF5QkMsUUFBUSxDQUFDRCxFQUFELEVBQUssRUFBTCxDQUFyQztBQUFBLE9BQXBCLENBQVA7QUFDRDs7O3VDQUVrQjtBQUNqQixhQUFPLEtBQUtILElBQUwsQ0FBVWtCLE1BQVYsQ0FBaUIsVUFBQUMsR0FBRztBQUFBLGVBQUlBLEdBQUcsQ0FBQ1AsTUFBSixLQUFlLFdBQW5CO0FBQUEsT0FBcEIsQ0FBUDtBQUNEOzs7aUNBRVlRLEcsRUFBS0MsSyxFQUFPO0FBQ3ZCLGFBQU8sS0FBS3JCLElBQUwsQ0FBVXNCLElBQVYsQ0FBZSxVQUFBSCxHQUFHO0FBQUEsZUFBSUEsR0FBRyxDQUFDQyxHQUFELENBQUgsS0FBYUMsS0FBakI7QUFBQSxPQUFsQixDQUFQO0FBQ0Q7Ozt1Q0FFa0JELEcsRUFBS0MsSyxFQUFPO0FBQzdCLGFBQU8sS0FBS3JCLElBQUwsQ0FBVXNCLElBQVYsQ0FBZSxVQUFBSCxHQUFHO0FBQUEsZUFBSUEsR0FBRyxDQUFDQyxHQUFELENBQUgsS0FBYUMsS0FBYixJQUFzQkYsR0FBRyxDQUFDUCxNQUFKLEtBQWUsV0FBekM7QUFBQSxPQUFsQixDQUFQO0FBQ0Q7OztxQ0FFZ0JXLFEsRUFBVUMsUSxFQUFVO0FBQ25DLGFBQU8sS0FBS3hCLElBQUwsQ0FBVWtCLE1BQVYsQ0FBaUIsVUFBQUMsR0FBRztBQUFBLGVBQUlBLEdBQUcsQ0FBQ04sS0FBSixJQUFhVSxRQUFiLElBQXlCSixHQUFHLENBQUNOLEtBQUosSUFBYVcsUUFBMUM7QUFBQSxPQUFwQixDQUFQO0FBQ0Q7Ozs4QkFFU0wsRyxFQUFLO0FBQ2IsVUFBTU0sR0FBRyxHQUFHLEtBQUt6QixJQUFMLENBQVUwQixPQUFWLENBQWtCUCxHQUFsQixDQUFaO0FBQ0EsYUFBTyxLQUFLbkIsSUFBTCxDQUFVMkIsTUFBVixDQUFpQkYsR0FBakIsRUFBc0IsQ0FBdEIsQ0FBUDtBQUNEOzs7Ozs7ZUFFWSxJQUFJMUIsR0FBSixFIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0XFxzZXJ2ZXJcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjYXJzRGF0YSBmcm9tICcuLi90ZXN0L21vY2tfZGIvY2Fycyc7XG5cbmNsYXNzIENhciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY2FycyA9IGNhcnNEYXRhO1xuICB9XG5cbiAgbmV3Q2FyQWQoZGF0YSkge1xuICAgIGNvbnN0IGlkID0gcGFyc2VJbnQoY2Fyc0RhdGEubGVuZ3RoICsgMjIwMDAsIDEwKTtcbiAgICBjb25zdCBjYXJEYXRhID0ge1xuICAgICAgaWQsXG4gICAgICBvd25lcjogZGF0YS5vd25lciB8fCAnJyxcbiAgICAgIGNyZWF0ZWRfb246IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKSxcbiAgICAgIHN0YXRlOiBkYXRhLnN0YXRlIHx8ICcnLFxuICAgICAgc3RhdHVzOiBkYXRhLnN0YXR1cyB8fCAnYXZhaWxhYmxlJyxcbiAgICAgIHByaWNlOiBkYXRhLnByaWNlIHx8IDAsXG4gICAgICBtYW51ZmFjdHVyZXI6IGRhdGEubWFudWZhY3R1cmVyIHx8ICcnLFxuICAgICAgbW9kZWw6IGRhdGEubW9kZWwgfHwgJycsXG4gICAgICBib2R5X3R5cGU6IGRhdGEuYm9keV90eXBlIHx8ICcnLFxuICAgIH07XG4gICAgdGhpcy5jYXJzLnB1c2goY2Fyc0RhdGEpO1xuICAgIHJldHVybiBjYXJEYXRhO1xuICB9XG5cblxuICBnZXRBbGxDYXJzKCkge1xuICAgIHJldHVybiB0aGlzLmNhcnM7XG4gIH1cblxuICBmaW5kQ2FyQWQoaWQpIHtcbiAgICByZXR1cm4gdGhpcy5jYXJzLmZpbHRlcihjYXIgPT4gcGFyc2VJbnQoY2FyLmlkLCAxMCkgPT09IHBhcnNlSW50KGlkLCAxMCkpO1xuICB9XG5cbiAgZ2V0QWxsVW5zb2xkQ2FycygpIHtcbiAgICByZXR1cm4gdGhpcy5jYXJzLmZpbHRlcihjYXIgPT4gY2FyLnN0YXR1cyA9PT0gJ2F2YWlsYWJsZScpO1xuICB9XG5cbiAgZ2V0Q2FyQnlQcm9wKGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdGhpcy5jYXJzLmZpbmQoY2FyID0+IGNhcltrZXldID09PSB2YWx1ZSk7XG4gIH1cblxuICBnZXRVbnNvbGRDYXJCeVByb3Aoa2V5LCB2YWx1ZSkge1xuICAgIHJldHVybiB0aGlzLmNhcnMuZmluZChjYXIgPT4gY2FyW2tleV0gPT09IHZhbHVlICYmIGNhci5zdGF0dXMgPT09ICdhdmFpbGFibGUnKTtcbiAgfVxuXG4gIGdldENhclByaWNlUmFuZ2UobWF4UHJpY2UsIG1pblByaWNlKSB7XG4gICAgcmV0dXJuIHRoaXMuY2Fycy5maWx0ZXIoY2FyID0+IGNhci5wcmljZSA8PSBtYXhQcmljZSAmJiBjYXIucHJpY2UgPj0gbWluUHJpY2UpO1xuICB9XG5cbiAgZGVsZXRlQ2FyKGNhcikge1xuICAgIGNvbnN0IGlkeCA9IHRoaXMuY2Fycy5pbmRleE9mKGNhcik7XG4gICAgcmV0dXJuIHRoaXMuY2Fycy5zcGxpY2UoaWR4LCAxKTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgbmV3IENhcigpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "car.js"
      ],
      "names": [
        "Car",
        "cars",
        "carsData",
        "data",
        "id",
        "parseInt",
        "length",
        "carData",
        "owner",
        "created_on",
        "Date",
        "toLocaleString",
        "state",
        "status",
        "price",
        "manufacturer",
        "model",
        "body_type",
        "push",
        "filter",
        "car",
        "key",
        "value",
        "find",
        "maxPrice",
        "minPrice",
        "idx",
        "indexOf",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,G;;;AACJ,iBAAc;AAAA;;AACZ,SAAKC,IAAL,GAAYC,gBAAZ;AACD;;;;6BAEQC,I,EAAM;AACb,UAAMC,EAAE,GAAGC,QAAQ,CAACH,iBAASI,MAAT,GAAkB,KAAnB,EAA0B,EAA1B,CAAnB;AACA,UAAMC,OAAO,GAAG;AACdH,QAAAA,EAAE,EAAFA,EADc;AAEdI,QAAAA,KAAK,EAAEL,IAAI,CAACK,KAAL,IAAc,EAFP;AAGdC,QAAAA,UAAU,EAAE,IAAIC,IAAJ,GAAWC,cAAX,EAHE;AAIdC,QAAAA,KAAK,EAAET,IAAI,CAACS,KAAL,IAAc,EAJP;AAKdC,QAAAA,MAAM,EAAEV,IAAI,CAACU,MAAL,IAAe,WALT;AAMdC,QAAAA,KAAK,EAAEX,IAAI,CAACW,KAAL,IAAc,CANP;AAOdC,QAAAA,YAAY,EAAEZ,IAAI,CAACY,YAAL,IAAqB,EAPrB;AAQdC,QAAAA,KAAK,EAAEb,IAAI,CAACa,KAAL,IAAc,EARP;AASdC,QAAAA,SAAS,EAAEd,IAAI,CAACc,SAAL,IAAkB;AATf,OAAhB;AAWA,WAAKhB,IAAL,CAAUiB,IAAV,CAAehB,gBAAf;AACA,aAAOK,OAAP;AACD;;;iCAGY;AACX,aAAO,KAAKN,IAAZ;AACD;;;8BAESG,E,EAAI;AACZ,aAAO,KAAKH,IAAL,CAAUkB,MAAV,CAAiB,UAAAC,GAAG;AAAA,eAAIf,QAAQ,CAACe,GAAG,CAAChB,EAAL,EAAS,EAAT,CAAR,KAAyBC,QAAQ,CAACD,EAAD,EAAK,EAAL,CAArC;AAAA,OAApB,CAAP;AACD;;;uCAEkB;AACjB,aAAO,KAAKH,IAAL,CAAUkB,MAAV,CAAiB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACP,MAAJ,KAAe,WAAnB;AAAA,OAApB,CAAP;AACD;;;iCAEYQ,G,EAAKC,K,EAAO;AACvB,aAAO,KAAKrB,IAAL,CAAUsB,IAAV,CAAe,UAAAH,GAAG;AAAA,eAAIA,GAAG,CAACC,GAAD,CAAH,KAAaC,KAAjB;AAAA,OAAlB,CAAP;AACD;;;uCAEkBD,G,EAAKC,K,EAAO;AAC7B,aAAO,KAAKrB,IAAL,CAAUsB,IAAV,CAAe,UAAAH,GAAG;AAAA,eAAIA,GAAG,CAACC,GAAD,CAAH,KAAaC,KAAb,IAAsBF,GAAG,CAACP,MAAJ,KAAe,WAAzC;AAAA,OAAlB,CAAP;AACD;;;qCAEgBW,Q,EAAUC,Q,EAAU;AACnC,aAAO,KAAKxB,IAAL,CAAUkB,MAAV,CAAiB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACN,KAAJ,IAAaU,QAAb,IAAyBJ,GAAG,CAACN,KAAJ,IAAaW,QAA1C;AAAA,OAApB,CAAP;AACD;;;8BAESL,G,EAAK;AACb,UAAMM,GAAG,GAAG,KAAKzB,IAAL,CAAU0B,OAAV,CAAkBP,GAAlB,CAAZ;AACA,aAAO,KAAKnB,IAAL,CAAU2B,MAAV,CAAiBF,GAAjB,EAAsB,CAAtB,CAAP;AACD;;;;;;eAEY,IAAI1B,GAAJ,E",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "sourcesContent": [
        "import carsData from '../test/mock_db/cars';\n\nclass Car {\n  constructor() {\n    this.cars = carsData;\n  }\n\n  newCarAd(data) {\n    const id = parseInt(carsData.length + 22000, 10);\n    const carData = {\n      id,\n      owner: data.owner || '',\n      created_on: new Date().toLocaleString(),\n      state: data.state || '',\n      status: data.status || 'available',\n      price: data.price || 0,\n      manufacturer: data.manufacturer || '',\n      model: data.model || '',\n      body_type: data.body_type || '',\n    };\n    this.cars.push(carsData);\n    return carData;\n  }\n\n\n  getAllCars() {\n    return this.cars;\n  }\n\n  findCarAd(id) {\n    return this.cars.filter(car => parseInt(car.id, 10) === parseInt(id, 10));\n  }\n\n  getAllUnsoldCars() {\n    return this.cars.filter(car => car.status === 'available');\n  }\n\n  getCarByProp(key, value) {\n    return this.cars.find(car => car[key] === value);\n  }\n\n  getUnsoldCarByProp(key, value) {\n    return this.cars.find(car => car[key] === value && car.status === 'available');\n  }\n\n  getCarPriceRange(maxPrice, minPrice) {\n    return this.cars.filter(car => car.price <= maxPrice && car.price >= minPrice);\n  }\n\n  deleteCar(car) {\n    const idx = this.cars.indexOf(car);\n    return this.cars.splice(idx, 1);\n  }\n}\nexport default new Car();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561992062859
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "mock_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar cars = [{\n  id: 1,\n  owner: 1,\n  createdOn: \"1/5/2013\",\n  manufacturer: \"Honda\",\n  model: \"Accord\",\n  price: 5000000,\n  state: \"New\",\n  bodyType: \"saloon\",\n  year: 2009,\n  status: \"available\"\n}, {\n  id: 2,\n  owner: 2,\n  createdOn: \"11/25/2017\",\n  manufacturer: \"Honda\",\n  model: \"Accord\",\n  price: 4500000,\n  state: \"used\",\n  bodyType: \"wagon\",\n  year: 2016,\n  status: \"sold\"\n}, {\n  id: 3,\n  owner: 3,\n  createdOn: \"7/9/2008\",\n  manufacturer: \"Mercedes\",\n  model: \"c300\",\n  price: 7500000,\n  state: \"used\",\n  bodyType: \"saloon\",\n  year: 2014,\n  status: \"available\"\n}, {\n  id: 4,\n  owner: 4,\n  createdOn: \"6/13/2015\",\n  manufacturer: \"Peugot\",\n  model: \"409\",\n  price: 2000000,\n  state: \"New\",\n  bodyType: \"saloon\",\n  year: 2009,\n  status: \"available\"\n}];\nvar users = [{\n  id: 1,\n  email: \"jason@gmail.com\",\n  firstName: \"Jason\",\n  lastName: \"Trello\",\n  password: \"555SSS777\",\n  address: \"321 upper crest park, New York, USA\",\n  is_admin: true\n}, {\n  id: 2,\n  email: \"dammy@gmail.com\",\n  firstName: \"dammy\",\n  lastName: \"Gonzalez\",\n  password: \"555SSS777\",\n  address: \"R280 wood west park, Milwaukee, USA\",\n  is_admin: false\n}];\nvar orders = [{\n  order_id: 1,\n  buyer: 1,\n  car_id: 1,\n  amount: 3500000,\n  status: \"avaialble\"\n}];\nvar flags = [{\n  flag_id: 1,\n  car_id: 3,\n  createdOn: \"1st May\",\n  reason: \"damaged car\",\n  description: \" ABC Tried to sell a damaged Peugot car to me\"\n}];\nvar _default = {\n  cars: cars,\n  orders: orders,\n  users: users,\n  flags: flags\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vY2tfZGIuanMiXSwibmFtZXMiOlsiY2FycyIsImlkIiwib3duZXIiLCJjcmVhdGVkT24iLCJtYW51ZmFjdHVyZXIiLCJtb2RlbCIsInByaWNlIiwic3RhdGUiLCJib2R5VHlwZSIsInllYXIiLCJzdGF0dXMiLCJ1c2VycyIsImVtYWlsIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJwYXNzd29yZCIsImFkZHJlc3MiLCJpc19hZG1pbiIsIm9yZGVycyIsIm9yZGVyX2lkIiwiYnV5ZXIiLCJjYXJfaWQiLCJhbW91bnQiLCJmbGFncyIsImZsYWdfaWQiLCJyZWFzb24iLCJkZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsSUFBSSxHQUFHLENBR1o7QUFDQ0MsRUFBQUEsRUFBRSxFQUFFLENBREw7QUFFR0MsRUFBQUEsS0FBSyxFQUFFLENBRlY7QUFHSUMsRUFBQUEsU0FBUyxFQUFFLFVBSGY7QUFJSUMsRUFBQUEsWUFBWSxFQUFFLE9BSmxCO0FBS0lDLEVBQUFBLEtBQUssRUFBRSxRQUxYO0FBTUlDLEVBQUFBLEtBQUssRUFBRSxPQU5YO0FBT0lDLEVBQUFBLEtBQUssRUFBRSxLQVBYO0FBUUlDLEVBQUFBLFFBQVEsRUFBRSxRQVJkO0FBU0lDLEVBQUFBLElBQUksRUFBRSxJQVRWO0FBVUlDLEVBQUFBLE1BQU0sRUFBRTtBQVZaLENBSFksRUFlWjtBQUNDVCxFQUFBQSxFQUFFLEVBQUUsQ0FETDtBQUVHQyxFQUFBQSxLQUFLLEVBQUUsQ0FGVjtBQUdJQyxFQUFBQSxTQUFTLEVBQUUsWUFIZjtBQUlJQyxFQUFBQSxZQUFZLEVBQUUsT0FKbEI7QUFLSUMsRUFBQUEsS0FBSyxFQUFFLFFBTFg7QUFNSUMsRUFBQUEsS0FBSyxFQUFFLE9BTlg7QUFPSUMsRUFBQUEsS0FBSyxFQUFFLE1BUFg7QUFRSUMsRUFBQUEsUUFBUSxFQUFFLE9BUmQ7QUFTSUMsRUFBQUEsSUFBSSxFQUFFLElBVFY7QUFVSUMsRUFBQUEsTUFBTSxFQUFFO0FBVlosQ0FmWSxFQTJCWjtBQUNDVCxFQUFBQSxFQUFFLEVBQUUsQ0FETDtBQUVHQyxFQUFBQSxLQUFLLEVBQUUsQ0FGVjtBQUdJQyxFQUFBQSxTQUFTLEVBQUUsVUFIZjtBQUlJQyxFQUFBQSxZQUFZLEVBQUUsVUFKbEI7QUFLSUMsRUFBQUEsS0FBSyxFQUFFLE1BTFg7QUFNSUMsRUFBQUEsS0FBSyxFQUFFLE9BTlg7QUFPSUMsRUFBQUEsS0FBSyxFQUFFLE1BUFg7QUFRSUMsRUFBQUEsUUFBUSxFQUFFLFFBUmQ7QUFTSUMsRUFBQUEsSUFBSSxFQUFFLElBVFY7QUFVSUMsRUFBQUEsTUFBTSxFQUFFO0FBVlosQ0EzQlksRUF1Q1o7QUFDQ1QsRUFBQUEsRUFBRSxFQUFFLENBREw7QUFFR0MsRUFBQUEsS0FBSyxFQUFFLENBRlY7QUFHSUMsRUFBQUEsU0FBUyxFQUFFLFdBSGY7QUFJSUMsRUFBQUEsWUFBWSxFQUFFLFFBSmxCO0FBS0lDLEVBQUFBLEtBQUssRUFBRSxLQUxYO0FBTUlDLEVBQUFBLEtBQUssRUFBRSxPQU5YO0FBT0lDLEVBQUFBLEtBQUssRUFBRSxLQVBYO0FBUUlDLEVBQUFBLFFBQVEsRUFBRSxRQVJkO0FBU0lDLEVBQUFBLElBQUksRUFBRSxJQVRWO0FBVUlDLEVBQUFBLE1BQU0sRUFBRTtBQVZaLENBdkNZLENBQWI7QUFzREEsSUFBTUMsS0FBSyxHQUFHLENBQ2I7QUFFQ1YsRUFBQUEsRUFBRSxFQUFFLENBRkw7QUFHQ1csRUFBQUEsS0FBSyxFQUFFLGlCQUhSO0FBSUlDLEVBQUFBLFNBQVMsRUFBRSxPQUpmO0FBS0lDLEVBQUFBLFFBQVEsRUFBRSxRQUxkO0FBTUlDLEVBQUFBLFFBQVEsRUFBRSxXQU5kO0FBT0lDLEVBQUFBLE9BQU8sRUFBRSxxQ0FQYjtBQVFJQyxFQUFBQSxRQUFRLEVBQUU7QUFSZCxDQURhLEVBWWI7QUFFQ2hCLEVBQUFBLEVBQUUsRUFBRSxDQUZMO0FBR0NXLEVBQUFBLEtBQUssRUFBRSxpQkFIUjtBQUlJQyxFQUFBQSxTQUFTLEVBQUUsT0FKZjtBQUtJQyxFQUFBQSxRQUFRLEVBQUUsVUFMZDtBQU1JQyxFQUFBQSxRQUFRLEVBQUUsV0FOZDtBQU9JQyxFQUFBQSxPQUFPLEVBQUUscUNBUGI7QUFRSUMsRUFBQUEsUUFBUSxFQUFFO0FBUmQsQ0FaYSxDQUFkO0FBd0JBLElBQU1DLE1BQU0sR0FBRyxDQUNkO0FBQ0NDLEVBQUFBLFFBQVEsRUFBRSxDQURYO0FBRUNDLEVBQUFBLEtBQUssRUFBRSxDQUZSO0FBR0lDLEVBQUFBLE1BQU0sRUFBRSxDQUhaO0FBSUlDLEVBQUFBLE1BQU0sRUFBRSxPQUpaO0FBS0laLEVBQUFBLE1BQU0sRUFBRTtBQUxaLENBRGMsQ0FBZjtBQVVBLElBQU1hLEtBQUssR0FBRyxDQUNiO0FBQ0NDLEVBQUFBLE9BQU8sRUFBRSxDQURWO0FBRUNILEVBQUFBLE1BQU0sRUFBRSxDQUZUO0FBR0lsQixFQUFBQSxTQUFTLEVBQUUsU0FIZjtBQUlJc0IsRUFBQUEsTUFBTSxFQUFFLGFBSlo7QUFLSUMsRUFBQUEsV0FBVyxFQUFFO0FBTGpCLENBRGEsQ0FBZDtlQVVnQjtBQUFDMUIsRUFBQUEsSUFBSSxFQUFKQSxJQUFEO0FBQU9rQixFQUFBQSxNQUFNLEVBQU5BLE1BQVA7QUFBZVAsRUFBQUEsS0FBSyxFQUFMQSxLQUFmO0FBQXNCWSxFQUFBQSxLQUFLLEVBQUxBO0FBQXRCLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxFcmljIElidVxcZGVza3RvcFxcYXV0b21hcnRcXHNlcnZlclxcdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNhcnMgPSBbXHJcblxyXG5cdFxyXG5cdHtcclxuXHRcdGlkOlx0MSxcclxuXHQgIFx0b3duZXI6IDEsXHJcblx0ICAgIGNyZWF0ZWRPbjogXCIxLzUvMjAxM1wiLFxyXG5cdCAgICBtYW51ZmFjdHVyZXI6IFwiSG9uZGFcIixcclxuXHQgICAgbW9kZWw6IFwiQWNjb3JkXCIsXHJcblx0ICAgIHByaWNlOiA1MDAwMDAwLFxyXG5cdCAgICBzdGF0ZTogXCJOZXdcIixcclxuXHQgICAgYm9keVR5cGU6IFwic2Fsb29uXCIsXHJcblx0ICAgIHllYXI6IDIwMDksXHJcblx0ICAgIHN0YXR1czogXCJhdmFpbGFibGVcIlxyXG5cdH0sXHJcblx0e1xyXG5cdFx0aWQ6XHQyLFxyXG5cdCAgXHRvd25lcjogMixcclxuXHQgICAgY3JlYXRlZE9uOiBcIjExLzI1LzIwMTdcIixcclxuXHQgICAgbWFudWZhY3R1cmVyOiBcIkhvbmRhXCIsXHJcblx0ICAgIG1vZGVsOiBcIkFjY29yZFwiLFxyXG5cdCAgICBwcmljZTogNDUwMDAwMCxcclxuXHQgICAgc3RhdGU6IFwidXNlZFwiLFxyXG5cdCAgICBib2R5VHlwZTogXCJ3YWdvblwiLFxyXG5cdCAgICB5ZWFyOiAyMDE2LFxyXG5cdCAgICBzdGF0dXM6IFwic29sZFwiXHJcblx0fSxcclxuXHR7XHJcblx0XHRpZDpcdDMsXHJcblx0ICBcdG93bmVyOiAzLFxyXG5cdCAgICBjcmVhdGVkT246IFwiNy85LzIwMDhcIixcclxuXHQgICAgbWFudWZhY3R1cmVyOiBcIk1lcmNlZGVzXCIsXHJcblx0ICAgIG1vZGVsOiBcImMzMDBcIixcclxuXHQgICAgcHJpY2U6IDc1MDAwMDAsXHJcblx0ICAgIHN0YXRlOiBcInVzZWRcIixcclxuXHQgICAgYm9keVR5cGU6IFwic2Fsb29uXCIsXHJcblx0ICAgIHllYXI6IDIwMTQsXHJcblx0ICAgIHN0YXR1czogXCJhdmFpbGFibGVcIlxyXG5cdH0sXHJcblx0e1xyXG5cdFx0aWQ6XHQ0LFxyXG5cdCAgXHRvd25lcjogNCxcclxuXHQgICAgY3JlYXRlZE9uOiBcIjYvMTMvMjAxNVwiLFxyXG5cdCAgICBtYW51ZmFjdHVyZXI6IFwiUGV1Z290XCIsXHJcblx0ICAgIG1vZGVsOiBcIjQwOVwiLFxyXG5cdCAgICBwcmljZTogMjAwMDAwMCxcclxuXHQgICAgc3RhdGU6IFwiTmV3XCIsXHJcblx0ICAgIGJvZHlUeXBlOiBcInNhbG9vblwiLFxyXG5cdCAgICB5ZWFyOiAyMDA5LFxyXG5cdCAgICBzdGF0dXM6IFwiYXZhaWxhYmxlXCJcclxuXHR9XHJcblxyXG5dO1xyXG5cclxuY29uc3QgdXNlcnMgPSBbXHJcblx0e1xyXG5cdFxyXG5cdFx0aWQ6XHQxLFxyXG5cdFx0ZW1haWw6IFwiamFzb25AZ21haWwuY29tXCIsXHJcblx0ICAgIGZpcnN0TmFtZTogXCJKYXNvblwiLFxyXG5cdCAgICBsYXN0TmFtZTogXCJUcmVsbG9cIixcclxuXHQgICAgcGFzc3dvcmQ6IFwiNTU1U1NTNzc3XCIsXHJcblx0ICAgIGFkZHJlc3M6IFwiMzIxIHVwcGVyIGNyZXN0IHBhcmssIE5ldyBZb3JrLCBVU0FcIixcclxuXHQgICAgaXNfYWRtaW46IHRydWVcclxuXHRcclxuXHR9LFxyXG5cdHtcclxuXHRcclxuXHRcdGlkOlx0MixcclxuXHRcdGVtYWlsOiBcImRhbW15QGdtYWlsLmNvbVwiLFxyXG5cdCAgICBmaXJzdE5hbWU6IFwiZGFtbXlcIixcclxuXHQgICAgbGFzdE5hbWU6IFwiR29uemFsZXpcIixcclxuXHQgICAgcGFzc3dvcmQ6IFwiNTU1U1NTNzc3XCIsXHJcblx0ICAgIGFkZHJlc3M6IFwiUjI4MCB3b29kIHdlc3QgcGFyaywgTWlsd2F1a2VlLCBVU0FcIixcclxuXHQgICAgaXNfYWRtaW46IGZhbHNlXHJcblx0XHJcblx0fVxyXG5dO1xyXG5jb25zdCBvcmRlcnMgPSBbXHJcblx0e1xyXG5cdFx0b3JkZXJfaWQ6XHQxLFxyXG5cdFx0YnV5ZXI6IDEsXHJcblx0ICAgIGNhcl9pZDogMSxcclxuXHQgICAgYW1vdW50OiAzNTAwMDAwLFxyXG5cdCAgICBzdGF0dXM6IFwiYXZhaWFsYmxlXCIsXHJcblx0fVxyXG5dO1xyXG5cclxuY29uc3QgZmxhZ3MgPSBbXHJcblx0e1xyXG5cdFx0ZmxhZ19pZDpcdDEsXHJcblx0XHRjYXJfaWQ6IDMsXHJcblx0ICAgIGNyZWF0ZWRPbjogXCIxc3QgTWF5XCIsXHJcblx0ICAgIHJlYXNvbjogXCJkYW1hZ2VkIGNhclwiLFxyXG5cdCAgICBkZXNjcmlwdGlvbjogXCIgQUJDIFRyaWVkIHRvIHNlbGwgYSBkYW1hZ2VkIFBldWdvdCBjYXIgdG8gbWVcIlxyXG5cdH1cclxuXTtcclxuXHJcbiBleHBvcnQgZGVmYXVsdCB7Y2Fycywgb3JkZXJzLCB1c2VycywgZmxhZ3N9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mock_db.js"
      ],
      "names": [
        "cars",
        "id",
        "owner",
        "createdOn",
        "manufacturer",
        "model",
        "price",
        "state",
        "bodyType",
        "year",
        "status",
        "users",
        "email",
        "firstName",
        "lastName",
        "password",
        "address",
        "is_admin",
        "orders",
        "order_id",
        "buyer",
        "car_id",
        "amount",
        "flags",
        "flag_id",
        "reason",
        "description"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,IAAI,GAAG,CAGZ;AACCC,EAAAA,EAAE,EAAE,CADL;AAEGC,EAAAA,KAAK,EAAE,CAFV;AAGIC,EAAAA,SAAS,EAAE,UAHf;AAIIC,EAAAA,YAAY,EAAE,OAJlB;AAKIC,EAAAA,KAAK,EAAE,QALX;AAMIC,EAAAA,KAAK,EAAE,OANX;AAOIC,EAAAA,KAAK,EAAE,KAPX;AAQIC,EAAAA,QAAQ,EAAE,QARd;AASIC,EAAAA,IAAI,EAAE,IATV;AAUIC,EAAAA,MAAM,EAAE;AAVZ,CAHY,EAeZ;AACCT,EAAAA,EAAE,EAAE,CADL;AAEGC,EAAAA,KAAK,EAAE,CAFV;AAGIC,EAAAA,SAAS,EAAE,YAHf;AAIIC,EAAAA,YAAY,EAAE,OAJlB;AAKIC,EAAAA,KAAK,EAAE,QALX;AAMIC,EAAAA,KAAK,EAAE,OANX;AAOIC,EAAAA,KAAK,EAAE,MAPX;AAQIC,EAAAA,QAAQ,EAAE,OARd;AASIC,EAAAA,IAAI,EAAE,IATV;AAUIC,EAAAA,MAAM,EAAE;AAVZ,CAfY,EA2BZ;AACCT,EAAAA,EAAE,EAAE,CADL;AAEGC,EAAAA,KAAK,EAAE,CAFV;AAGIC,EAAAA,SAAS,EAAE,UAHf;AAIIC,EAAAA,YAAY,EAAE,UAJlB;AAKIC,EAAAA,KAAK,EAAE,MALX;AAMIC,EAAAA,KAAK,EAAE,OANX;AAOIC,EAAAA,KAAK,EAAE,MAPX;AAQIC,EAAAA,QAAQ,EAAE,QARd;AASIC,EAAAA,IAAI,EAAE,IATV;AAUIC,EAAAA,MAAM,EAAE;AAVZ,CA3BY,EAuCZ;AACCT,EAAAA,EAAE,EAAE,CADL;AAEGC,EAAAA,KAAK,EAAE,CAFV;AAGIC,EAAAA,SAAS,EAAE,WAHf;AAIIC,EAAAA,YAAY,EAAE,QAJlB;AAKIC,EAAAA,KAAK,EAAE,KALX;AAMIC,EAAAA,KAAK,EAAE,OANX;AAOIC,EAAAA,KAAK,EAAE,KAPX;AAQIC,EAAAA,QAAQ,EAAE,QARd;AASIC,EAAAA,IAAI,EAAE,IATV;AAUIC,EAAAA,MAAM,EAAE;AAVZ,CAvCY,CAAb;AAsDA,IAAMC,KAAK,GAAG,CACb;AAECV,EAAAA,EAAE,EAAE,CAFL;AAGCW,EAAAA,KAAK,EAAE,iBAHR;AAIIC,EAAAA,SAAS,EAAE,OAJf;AAKIC,EAAAA,QAAQ,EAAE,QALd;AAMIC,EAAAA,QAAQ,EAAE,WANd;AAOIC,EAAAA,OAAO,EAAE,qCAPb;AAQIC,EAAAA,QAAQ,EAAE;AARd,CADa,EAYb;AAEChB,EAAAA,EAAE,EAAE,CAFL;AAGCW,EAAAA,KAAK,EAAE,iBAHR;AAIIC,EAAAA,SAAS,EAAE,OAJf;AAKIC,EAAAA,QAAQ,EAAE,UALd;AAMIC,EAAAA,QAAQ,EAAE,WANd;AAOIC,EAAAA,OAAO,EAAE,qCAPb;AAQIC,EAAAA,QAAQ,EAAE;AARd,CAZa,CAAd;AAwBA,IAAMC,MAAM,GAAG,CACd;AACCC,EAAAA,QAAQ,EAAE,CADX;AAECC,EAAAA,KAAK,EAAE,CAFR;AAGIC,EAAAA,MAAM,EAAE,CAHZ;AAIIC,EAAAA,MAAM,EAAE,OAJZ;AAKIZ,EAAAA,MAAM,EAAE;AALZ,CADc,CAAf;AAUA,IAAMa,KAAK,GAAG,CACb;AACCC,EAAAA,OAAO,EAAE,CADV;AAECH,EAAAA,MAAM,EAAE,CAFT;AAGIlB,EAAAA,SAAS,EAAE,SAHf;AAIIsB,EAAAA,MAAM,EAAE,aAJZ;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADa,CAAd;eAUgB;AAAC1B,EAAAA,IAAI,EAAJA,IAAD;AAAOkB,EAAAA,MAAM,EAANA,MAAP;AAAeP,EAAAA,KAAK,EAALA,KAAf;AAAsBY,EAAAA,KAAK,EAALA;AAAtB,C",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "const cars = [\r\n\r\n\t\r\n\t{\r\n\t\tid:\t1,\r\n\t  \towner: 1,\r\n\t    createdOn: \"1/5/2013\",\r\n\t    manufacturer: \"Honda\",\r\n\t    model: \"Accord\",\r\n\t    price: 5000000,\r\n\t    state: \"New\",\r\n\t    bodyType: \"saloon\",\r\n\t    year: 2009,\r\n\t    status: \"available\"\r\n\t},\r\n\t{\r\n\t\tid:\t2,\r\n\t  \towner: 2,\r\n\t    createdOn: \"11/25/2017\",\r\n\t    manufacturer: \"Honda\",\r\n\t    model: \"Accord\",\r\n\t    price: 4500000,\r\n\t    state: \"used\",\r\n\t    bodyType: \"wagon\",\r\n\t    year: 2016,\r\n\t    status: \"sold\"\r\n\t},\r\n\t{\r\n\t\tid:\t3,\r\n\t  \towner: 3,\r\n\t    createdOn: \"7/9/2008\",\r\n\t    manufacturer: \"Mercedes\",\r\n\t    model: \"c300\",\r\n\t    price: 7500000,\r\n\t    state: \"used\",\r\n\t    bodyType: \"saloon\",\r\n\t    year: 2014,\r\n\t    status: \"available\"\r\n\t},\r\n\t{\r\n\t\tid:\t4,\r\n\t  \towner: 4,\r\n\t    createdOn: \"6/13/2015\",\r\n\t    manufacturer: \"Peugot\",\r\n\t    model: \"409\",\r\n\t    price: 2000000,\r\n\t    state: \"New\",\r\n\t    bodyType: \"saloon\",\r\n\t    year: 2009,\r\n\t    status: \"available\"\r\n\t}\r\n\r\n];\r\n\r\nconst users = [\r\n\t{\r\n\t\r\n\t\tid:\t1,\r\n\t\temail: \"jason@gmail.com\",\r\n\t    firstName: \"Jason\",\r\n\t    lastName: \"Trello\",\r\n\t    password: \"555SSS777\",\r\n\t    address: \"321 upper crest park, New York, USA\",\r\n\t    is_admin: true\r\n\t\r\n\t},\r\n\t{\r\n\t\r\n\t\tid:\t2,\r\n\t\temail: \"dammy@gmail.com\",\r\n\t    firstName: \"dammy\",\r\n\t    lastName: \"Gonzalez\",\r\n\t    password: \"555SSS777\",\r\n\t    address: \"R280 wood west park, Milwaukee, USA\",\r\n\t    is_admin: false\r\n\t\r\n\t}\r\n];\r\nconst orders = [\r\n\t{\r\n\t\torder_id:\t1,\r\n\t\tbuyer: 1,\r\n\t    car_id: 1,\r\n\t    amount: 3500000,\r\n\t    status: \"avaialble\",\r\n\t}\r\n];\r\n\r\nconst flags = [\r\n\t{\r\n\t\tflag_id:\t1,\r\n\t\tcar_id: 3,\r\n\t    createdOn: \"1st May\",\r\n\t    reason: \"damaged car\",\r\n\t    description: \" ABC Tried to sell a damaged Peugot car to me\"\r\n\t}\r\n];\r\n\r\n export default {cars, orders, users, flags};"
      ]
    },
    "sourceType": "script",
    "mtime": 1561845381122
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\user-spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\user-spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\user-spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\user-spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "user-spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _users = _interopRequireDefault(require(\"./mock_db/users\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar expect = _chai[\"default\"].expect;\ndescribe('user Endpoint', function () {\n  describe('user can signup', function () {\n    it('should create user account', function () {\n      var data = {\n        id: 1,\n        first_name: 'Jason',\n        last_name: 'Trello',\n        email: 'jason@gmail.com',\n        password: '555SSS777',\n        address: '321 upper crest park, New York, USA',\n        isAdmin: true\n      };\n\n      var user = _user[\"default\"].createUser(data);\n\n      expect(user).to.have.property('id');\n      expect(user).to.have.property('email').eq(data.email);\n      expect(user.first_name).to.equal(data.first_name);\n      expect(user.last_name).to.equal(data.last_name);\n    });\n  });\n  describe('Get all users', function () {\n    it('should return all users', function () {\n      _user[\"default\"].users = _users[\"default\"];\n\n      var allUsers = _user[\"default\"].getAllUsers();\n\n      expect(allUsers).to.be.an('Array');\n      expect(allUsers.length).to.eq(_users[\"default\"].length);\n    });\n  });\n  describe('Get user by first_name', function () {\n    it('should return a user\\'s first_name', function () {\n      _user[\"default\"].users = _users[\"default\"];\n\n      var user = _user[\"default\"].findByFirstName('Jason');\n\n      expect(user).to.have.property('first_name').to.eq('Jason');\n    });\n  });\n  describe('Get user by email', function () {\n    it('should return a user\\'s email', function () {\n      _user[\"default\"].users = _users[\"default\"];\n\n      var user = _user[\"default\"].findByEmail('jason@gmail.com');\n\n      expect(user).to.have.property('email').to.equal('jason@gmail.com');\n    });\n  });\n  describe('Get a User', function () {\n    it('should return a user based on id', function () {\n      _user[\"default\"].users = _users[\"default\"];\n      var userId = _users[\"default\"][0].id;\n\n      var user = _user[\"default\"].getUser(userId);\n\n      expect(user).to.be.an('Object');\n      expect(user).to.have.property('id').eq(_users[\"default\"][0].id);\n    });\n  });\n  describe('Get Admin User', function () {\n    it('should check for an admin', function () {\n      _user[\"default\"].users = _users[\"default\"];\n      _users[\"default\"][0].is_admin = true;\n      var admin = _users[\"default\"][0];\n      expect(admin).to.be.a('object');\n      expect(admin.is_admin).to.equal(true);\n    });\n  });\n  describe('Delete User', function () {\n    it('should delete a user', function () {\n      _users[\"default\"][0].status = 'registered';\n      _user[\"default\"].users = _users[\"default\"];\n\n      var deletedUser = _user[\"default\"].deleteUser(_users[\"default\"][0]);\n\n      expect(deletedUser.id).to.eq(1);\n      expect(deletedUser.status).to.eq('deleted');\n    });\n  });\n  describe('Log in User', function () {\n    it('should login a user', function () {\n      _users[\"default\"][1].status = 'registered';\n      _user[\"default\"].users = _users[\"default\"];\n\n      var loggedUser = _user[\"default\"].loginUser(_users[\"default\"][1].id);\n\n      expect(loggedUser[0].id).to.eq(_users[\"default\"][1].id);\n      expect(loggedUser.status).to.eq('loggedIn');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user-spec.js"
      ],
      "names": [
        "expect",
        "chai",
        "describe",
        "it",
        "data",
        "id",
        "first_name",
        "last_name",
        "email",
        "password",
        "address",
        "isAdmin",
        "user",
        "User",
        "createUser",
        "to",
        "have",
        "property",
        "eq",
        "equal",
        "users",
        "usersData",
        "allUsers",
        "getAllUsers",
        "be",
        "an",
        "length",
        "findByFirstName",
        "findByEmail",
        "userId",
        "getUser",
        "is_admin",
        "admin",
        "a",
        "status",
        "deletedUser",
        "deleteUser",
        "loggedUser",
        "loginUser"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;IAEQA,M,GAAWC,gB,CAAXD,M;AAERE,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BA,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChCC,IAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACrC,UAAMC,IAAI,GAAG;AACXC,QAAAA,EAAE,EAAE,CADO;AAEXC,QAAAA,UAAU,EAAE,OAFD;AAGXC,QAAAA,SAAS,EAAE,QAHA;AAIXC,QAAAA,KAAK,EAAE,iBAJI;AAKXC,QAAAA,QAAQ,EAAE,WALC;AAMXC,QAAAA,OAAO,EAAE,qCANE;AAOXC,QAAAA,OAAO,EAAE;AAPE,OAAb;;AASA,UAAMC,IAAI,GAAGC,iBAAKC,UAAL,CAAgBV,IAAhB,CAAb;;AACAJ,MAAAA,MAAM,CAACY,IAAD,CAAN,CAAaG,EAAb,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,IAA9B;AACAjB,MAAAA,MAAM,CAACY,IAAD,CAAN,CAAaG,EAAb,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,OAA9B,EAAuCC,EAAvC,CAA0Cd,IAAI,CAACI,KAA/C;AACAR,MAAAA,MAAM,CAACY,IAAI,CAACN,UAAN,CAAN,CAAwBS,EAAxB,CAA2BI,KAA3B,CAAiCf,IAAI,CAACE,UAAtC;AACAN,MAAAA,MAAM,CAACY,IAAI,CAACL,SAAN,CAAN,CAAuBQ,EAAvB,CAA0BI,KAA1B,CAAgCf,IAAI,CAACG,SAArC;AACD,KAfC,CAAF;AAgBD,GAjBO,CAAR;AAmBAL,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BC,IAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAM;AAClCU,uBAAKO,KAAL,GAAaC,iBAAb;;AACA,UAAMC,QAAQ,GAAGT,iBAAKU,WAAL,EAAjB;;AACAvB,MAAAA,MAAM,CAACsB,QAAD,CAAN,CAAiBP,EAAjB,CAAoBS,EAApB,CAAuBC,EAAvB,CAA0B,OAA1B;AACAzB,MAAAA,MAAM,CAACsB,QAAQ,CAACI,MAAV,CAAN,CAAwBX,EAAxB,CAA2BG,EAA3B,CAA8BG,kBAAUK,MAAxC;AACD,KALC,CAAF;AAMD,GAPO,CAAR;AASAxB,EAAAA,QAAQ,CAAC,wBAAD,EAA2B,YAAM;AACvCC,IAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7CU,uBAAKO,KAAL,GAAaC,iBAAb;;AACA,UAAMT,IAAI,GAAGC,iBAAKc,eAAL,CAAqB,OAArB,CAAb;;AACA3B,MAAAA,MAAM,CAACY,IAAD,CAAN,CAAaG,EAAb,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,YAA9B,EAA4CF,EAA5C,CAA+CG,EAA/C,CAAkD,OAAlD;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAhB,EAAAA,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAClCC,IAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACxCU,uBAAKO,KAAL,GAAaC,iBAAb;;AACA,UAAMT,IAAI,GAAGC,iBAAKe,WAAL,CAAiB,iBAAjB,CAAb;;AACA5B,MAAAA,MAAM,CAACY,IAAD,CAAN,CAAaG,EAAb,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,OAA9B,EAAuCF,EAAvC,CAA0CI,KAA1C,CAAgD,iBAAhD;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAjB,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BC,IAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3CU,uBAAKO,KAAL,GAAaC,iBAAb;AAEA,UAAMQ,MAAM,GAAGR,kBAAU,CAAV,EAAahB,EAA5B;;AACA,UAAMO,IAAI,GAAGC,iBAAKiB,OAAL,CAAaD,MAAb,CAAb;;AACA7B,MAAAA,MAAM,CAACY,IAAD,CAAN,CAAaG,EAAb,CAAgBS,EAAhB,CAAmBC,EAAnB,CAAsB,QAAtB;AACAzB,MAAAA,MAAM,CAACY,IAAD,CAAN,CAAaG,EAAb,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,IAA9B,EAAoCC,EAApC,CAAuCG,kBAAU,CAAV,EAAahB,EAApD;AACD,KAPC,CAAF;AAQD,GATO,CAAR;AAWAH,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,IAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpCU,uBAAKO,KAAL,GAAaC,iBAAb;AACAA,wBAAU,CAAV,EAAaU,QAAb,GAAwB,IAAxB;AAEA,UAAMC,KAAK,GAAGX,kBAAU,CAAV,CAAd;AACArB,MAAAA,MAAM,CAACgC,KAAD,CAAN,CAAcjB,EAAd,CAAiBS,EAAjB,CAAoBS,CAApB,CAAsB,QAAtB;AACAjC,MAAAA,MAAM,CAACgC,KAAK,CAACD,QAAP,CAAN,CAAuBhB,EAAvB,CAA0BI,KAA1B,CAAgC,IAAhC;AACD,KAPC,CAAF;AAQD,GATO,CAAR;AAWAjB,EAAAA,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5BC,IAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAM;AAC/BkB,wBAAU,CAAV,EAAaa,MAAb,GAAsB,YAAtB;AACArB,uBAAKO,KAAL,GAAaC,iBAAb;;AAEA,UAAMc,WAAW,GAAGtB,iBAAKuB,UAAL,CAAgBf,kBAAU,CAAV,CAAhB,CAApB;;AACArB,MAAAA,MAAM,CAACmC,WAAW,CAAC9B,EAAb,CAAN,CAAuBU,EAAvB,CAA0BG,EAA1B,CAA6B,CAA7B;AACAlB,MAAAA,MAAM,CAACmC,WAAW,CAACD,MAAb,CAAN,CAA2BnB,EAA3B,CAA8BG,EAA9B,CAAiC,SAAjC;AACD,KAPC,CAAF;AAQD,GATO,CAAR;AAWAhB,EAAAA,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5BC,IAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAC9BkB,wBAAU,CAAV,EAAaa,MAAb,GAAsB,YAAtB;AACArB,uBAAKO,KAAL,GAAaC,iBAAb;;AAEA,UAAMgB,UAAU,GAAGxB,iBAAKyB,SAAL,CAAejB,kBAAU,CAAV,EAAahB,EAA5B,CAAnB;;AACAL,MAAAA,MAAM,CAACqC,UAAU,CAAC,CAAD,CAAV,CAAchC,EAAf,CAAN,CAAyBU,EAAzB,CAA4BG,EAA5B,CAA+BG,kBAAU,CAAV,EAAahB,EAA5C;AACAL,MAAAA,MAAM,CAACqC,UAAU,CAACH,MAAZ,CAAN,CAA0BnB,EAA1B,CAA6BG,EAA7B,CAAgC,UAAhC;AACD,KAPC,CAAF;AAQD,GATO,CAAR;AAUD,CAxFO,CAAR",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "import chai from 'chai';\nimport usersData from './mock_db/users';\nimport User from '../models/user';\n\nconst { expect } = chai;\n\ndescribe('user Endpoint', () => {\n  describe('user can signup', () => {\n    it('should create user account', () => {\n      const data = {\n        id: 1,\n        first_name: 'Jason',\n        last_name: 'Trello',\n        email: 'jason@gmail.com',\n        password: '555SSS777',\n        address: '321 upper crest park, New York, USA',\n        isAdmin: true,\n      };\n      const user = User.createUser(data);\n      expect(user).to.have.property('id');\n      expect(user).to.have.property('email').eq(data.email);\n      expect(user.first_name).to.equal(data.first_name);\n      expect(user.last_name).to.equal(data.last_name);\n    });\n  });\n\n  describe('Get all users', () => {\n    it('should return all users', () => {\n      User.users = usersData;\n      const allUsers = User.getAllUsers();\n      expect(allUsers).to.be.an('Array');\n      expect(allUsers.length).to.eq(usersData.length);\n    });\n  });\n\n  describe('Get user by first_name', () => {\n    it('should return a user\\'s first_name', () => {\n      User.users = usersData;\n      const user = User.findByFirstName('Jason');\n      expect(user).to.have.property('first_name').to.eq('Jason');\n    });\n  });\n\n  describe('Get user by email', () => {\n    it('should return a user\\'s email', () => {\n      User.users = usersData;\n      const user = User.findByEmail('jason@gmail.com');\n      expect(user).to.have.property('email').to.equal('jason@gmail.com');\n    });\n  });\n\n  describe('Get a User', () => {\n    it('should return a user based on id', () => {\n      User.users = usersData;\n\n      const userId = usersData[0].id;\n      const user = User.getUser(userId);\n      expect(user).to.be.an('Object');\n      expect(user).to.have.property('id').eq(usersData[0].id);\n    });\n  });\n\n  describe('Get Admin User', () => {\n    it('should check for an admin', () => {\n      User.users = usersData;\n      usersData[0].is_admin = true;\n\n      const admin = usersData[0];\n      expect(admin).to.be.a('object');\n      expect(admin.is_admin).to.equal(true);\n    });\n  });\n\n  describe('Delete User', () => {\n    it('should delete a user', () => {\n      usersData[0].status = 'registered';\n      User.users = usersData;\n\n      const deletedUser = User.deleteUser(usersData[0]);\n      expect(deletedUser.id).to.eq(1);\n      expect(deletedUser.status).to.eq('deleted');\n    });\n  });\n\n  describe('Log in User', () => {\n    it('should login a user', () => {\n      usersData[1].status = 'registered';\n      User.users = usersData;\n\n      const loggedUser = User.loginUser(usersData[1].id);\n      expect(loggedUser[0].id).to.eq(usersData[1].id);\n      expect(loggedUser.status).to.eq('loggedIn');\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561997342288
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\\\\cars.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\cars.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\cars.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\cars.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
        "sourceFileName": "cars.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar cars = [{\n  id: 1,\n  owner: 1,\n  createdOn: '1/5/2013',\n  manufacturer: 'Honda',\n  model: 'Accord',\n  price: 5000000,\n  state: 'New',\n  bodyType: 'saloon',\n  year: 2009,\n  status: 'available'\n}, {\n  id: 2,\n  owner: 2,\n  createdOn: '11/25/2017',\n  manufacturer: 'Honda',\n  model: 'Accord',\n  price: 4500000,\n  state: 'used',\n  bodyType: 'wagon',\n  year: 2016,\n  status: 'sold'\n}, {\n  id: 3,\n  owner: 3,\n  createdOn: '7/9/2008',\n  manufacturer: 'Mercedes',\n  model: 'c300',\n  price: 7500000,\n  state: 'used',\n  bodyType: 'saloon',\n  year: 2014,\n  status: 'available'\n}, {\n  id: 4,\n  owner: 4,\n  createdOn: '6/13/2015',\n  manufacturer: 'Peugot',\n  model: '409',\n  price: 2000000,\n  state: 'New',\n  bodyType: 'saloon',\n  year: 2009,\n  status: 'available'\n}];\nvar _default = cars;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcnMuanMiXSwibmFtZXMiOlsiY2FycyIsImlkIiwib3duZXIiLCJjcmVhdGVkT24iLCJtYW51ZmFjdHVyZXIiLCJtb2RlbCIsInByaWNlIiwic3RhdGUiLCJib2R5VHlwZSIsInllYXIiLCJzdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLElBQUksR0FBRyxDQUdYO0FBQ0VDLEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxDQUZUO0FBR0VDLEVBQUFBLFNBQVMsRUFBRSxVQUhiO0FBSUVDLEVBQUFBLFlBQVksRUFBRSxPQUpoQjtBQUtFQyxFQUFBQSxLQUFLLEVBQUUsUUFMVDtBQU1FQyxFQUFBQSxLQUFLLEVBQUUsT0FOVDtBQU9FQyxFQUFBQSxLQUFLLEVBQUUsS0FQVDtBQVFFQyxFQUFBQSxRQUFRLEVBQUUsUUFSWjtBQVNFQyxFQUFBQSxJQUFJLEVBQUUsSUFUUjtBQVVFQyxFQUFBQSxNQUFNLEVBQUU7QUFWVixDQUhXLEVBZVg7QUFDRVQsRUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsRUFBQUEsS0FBSyxFQUFFLENBRlQ7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLFlBSGI7QUFJRUMsRUFBQUEsWUFBWSxFQUFFLE9BSmhCO0FBS0VDLEVBQUFBLEtBQUssRUFBRSxRQUxUO0FBTUVDLEVBQUFBLEtBQUssRUFBRSxPQU5UO0FBT0VDLEVBQUFBLEtBQUssRUFBRSxNQVBUO0FBUUVDLEVBQUFBLFFBQVEsRUFBRSxPQVJaO0FBU0VDLEVBQUFBLElBQUksRUFBRSxJQVRSO0FBVUVDLEVBQUFBLE1BQU0sRUFBRTtBQVZWLENBZlcsRUEyQlg7QUFDRVQsRUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsRUFBQUEsS0FBSyxFQUFFLENBRlQ7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLFVBSGI7QUFJRUMsRUFBQUEsWUFBWSxFQUFFLFVBSmhCO0FBS0VDLEVBQUFBLEtBQUssRUFBRSxNQUxUO0FBTUVDLEVBQUFBLEtBQUssRUFBRSxPQU5UO0FBT0VDLEVBQUFBLEtBQUssRUFBRSxNQVBUO0FBUUVDLEVBQUFBLFFBQVEsRUFBRSxRQVJaO0FBU0VDLEVBQUFBLElBQUksRUFBRSxJQVRSO0FBVUVDLEVBQUFBLE1BQU0sRUFBRTtBQVZWLENBM0JXLEVBdUNYO0FBQ0VULEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxDQUZUO0FBR0VDLEVBQUFBLFNBQVMsRUFBRSxXQUhiO0FBSUVDLEVBQUFBLFlBQVksRUFBRSxRQUpoQjtBQUtFQyxFQUFBQSxLQUFLLEVBQUUsS0FMVDtBQU1FQyxFQUFBQSxLQUFLLEVBQUUsT0FOVDtBQU9FQyxFQUFBQSxLQUFLLEVBQUUsS0FQVDtBQVFFQyxFQUFBQSxRQUFRLEVBQUUsUUFSWjtBQVNFQyxFQUFBQSxJQUFJLEVBQUUsSUFUUjtBQVVFQyxFQUFBQSxNQUFNLEVBQUU7QUFWVixDQXZDVyxDQUFiO2VBcURlVixJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0XFxzZXJ2ZXJcXHRlc3RcXG1vY2tfZGIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjYXJzID0gW1xuXG5cbiAge1xuICAgIGlkOiAxLFxuICAgIG93bmVyOiAxLFxuICAgIGNyZWF0ZWRPbjogJzEvNS8yMDEzJyxcbiAgICBtYW51ZmFjdHVyZXI6ICdIb25kYScsXG4gICAgbW9kZWw6ICdBY2NvcmQnLFxuICAgIHByaWNlOiA1MDAwMDAwLFxuICAgIHN0YXRlOiAnTmV3JyxcbiAgICBib2R5VHlwZTogJ3NhbG9vbicsXG4gICAgeWVhcjogMjAwOSxcbiAgICBzdGF0dXM6ICdhdmFpbGFibGUnLFxuICB9LFxuICB7XG4gICAgaWQ6IDIsXG4gICAgb3duZXI6IDIsXG4gICAgY3JlYXRlZE9uOiAnMTEvMjUvMjAxNycsXG4gICAgbWFudWZhY3R1cmVyOiAnSG9uZGEnLFxuICAgIG1vZGVsOiAnQWNjb3JkJyxcbiAgICBwcmljZTogNDUwMDAwMCxcbiAgICBzdGF0ZTogJ3VzZWQnLFxuICAgIGJvZHlUeXBlOiAnd2Fnb24nLFxuICAgIHllYXI6IDIwMTYsXG4gICAgc3RhdHVzOiAnc29sZCcsXG4gIH0sXG4gIHtcbiAgICBpZDogMyxcbiAgICBvd25lcjogMyxcbiAgICBjcmVhdGVkT246ICc3LzkvMjAwOCcsXG4gICAgbWFudWZhY3R1cmVyOiAnTWVyY2VkZXMnLFxuICAgIG1vZGVsOiAnYzMwMCcsXG4gICAgcHJpY2U6IDc1MDAwMDAsXG4gICAgc3RhdGU6ICd1c2VkJyxcbiAgICBib2R5VHlwZTogJ3NhbG9vbicsXG4gICAgeWVhcjogMjAxNCxcbiAgICBzdGF0dXM6ICdhdmFpbGFibGUnLFxuICB9LFxuICB7XG4gICAgaWQ6IDQsXG4gICAgb3duZXI6IDQsXG4gICAgY3JlYXRlZE9uOiAnNi8xMy8yMDE1JyxcbiAgICBtYW51ZmFjdHVyZXI6ICdQZXVnb3QnLFxuICAgIG1vZGVsOiAnNDA5JyxcbiAgICBwcmljZTogMjAwMDAwMCxcbiAgICBzdGF0ZTogJ05ldycsXG4gICAgYm9keVR5cGU6ICdzYWxvb24nLFxuICAgIHllYXI6IDIwMDksXG4gICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcbiAgfSxcblxuXTtcbmV4cG9ydCBkZWZhdWx0IGNhcnM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cars.js"
      ],
      "names": [
        "cars",
        "id",
        "owner",
        "createdOn",
        "manufacturer",
        "model",
        "price",
        "state",
        "bodyType",
        "year",
        "status"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,IAAI,GAAG,CAGX;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,CAFT;AAGEC,EAAAA,SAAS,EAAE,UAHb;AAIEC,EAAAA,YAAY,EAAE,OAJhB;AAKEC,EAAAA,KAAK,EAAE,QALT;AAMEC,EAAAA,KAAK,EAAE,OANT;AAOEC,EAAAA,KAAK,EAAE,KAPT;AAQEC,EAAAA,QAAQ,EAAE,QARZ;AASEC,EAAAA,IAAI,EAAE,IATR;AAUEC,EAAAA,MAAM,EAAE;AAVV,CAHW,EAeX;AACET,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,CAFT;AAGEC,EAAAA,SAAS,EAAE,YAHb;AAIEC,EAAAA,YAAY,EAAE,OAJhB;AAKEC,EAAAA,KAAK,EAAE,QALT;AAMEC,EAAAA,KAAK,EAAE,OANT;AAOEC,EAAAA,KAAK,EAAE,MAPT;AAQEC,EAAAA,QAAQ,EAAE,OARZ;AASEC,EAAAA,IAAI,EAAE,IATR;AAUEC,EAAAA,MAAM,EAAE;AAVV,CAfW,EA2BX;AACET,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,CAFT;AAGEC,EAAAA,SAAS,EAAE,UAHb;AAIEC,EAAAA,YAAY,EAAE,UAJhB;AAKEC,EAAAA,KAAK,EAAE,MALT;AAMEC,EAAAA,KAAK,EAAE,OANT;AAOEC,EAAAA,KAAK,EAAE,MAPT;AAQEC,EAAAA,QAAQ,EAAE,QARZ;AASEC,EAAAA,IAAI,EAAE,IATR;AAUEC,EAAAA,MAAM,EAAE;AAVV,CA3BW,EAuCX;AACET,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,CAFT;AAGEC,EAAAA,SAAS,EAAE,WAHb;AAIEC,EAAAA,YAAY,EAAE,QAJhB;AAKEC,EAAAA,KAAK,EAAE,KALT;AAMEC,EAAAA,KAAK,EAAE,OANT;AAOEC,EAAAA,KAAK,EAAE,KAPT;AAQEC,EAAAA,QAAQ,EAAE,QARZ;AASEC,EAAAA,IAAI,EAAE,IATR;AAUEC,EAAAA,MAAM,EAAE;AAVV,CAvCW,CAAb;eAqDeV,I",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "sourcesContent": [
        "const cars = [\n\n\n  {\n    id: 1,\n    owner: 1,\n    createdOn: '1/5/2013',\n    manufacturer: 'Honda',\n    model: 'Accord',\n    price: 5000000,\n    state: 'New',\n    bodyType: 'saloon',\n    year: 2009,\n    status: 'available',\n  },\n  {\n    id: 2,\n    owner: 2,\n    createdOn: '11/25/2017',\n    manufacturer: 'Honda',\n    model: 'Accord',\n    price: 4500000,\n    state: 'used',\n    bodyType: 'wagon',\n    year: 2016,\n    status: 'sold',\n  },\n  {\n    id: 3,\n    owner: 3,\n    createdOn: '7/9/2008',\n    manufacturer: 'Mercedes',\n    model: 'c300',\n    price: 7500000,\n    state: 'used',\n    bodyType: 'saloon',\n    year: 2014,\n    status: 'available',\n  },\n  {\n    id: 4,\n    owner: 4,\n    createdOn: '6/13/2015',\n    manufacturer: 'Peugot',\n    model: '409',\n    price: 2000000,\n    state: 'New',\n    bodyType: 'saloon',\n    year: 2009,\n    status: 'available',\n  },\n\n];\nexport default cars;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561883816397
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar users = [{\n  id: 1,\n  email: 'jason@gmail.com',\n  firstName: 'Jason',\n  lastName: 'Trello',\n  password: '555SSS777',\n  address: '321 upper crest park, New York, USA',\n  is_admin: true,\n  status: 'registered'\n}, {\n  id: 2,\n  email: 'dammy@gmail.com',\n  firstName: 'dammy',\n  lastName: 'Gonzalez',\n  password: '936379JUI',\n  address: 'R280 wood west park, Milwaukee, USA',\n  is_admin: false,\n  status: 'registered'\n}, {\n  id: 3,\n  email: 'sammy@gmail.com',\n  firstName: 'Sammy',\n  lastName: 'Bongo',\n  password: '333SSSHHH',\n  address: '3600 Pillhamton, Boston, USA',\n  is_admin: false,\n  status: 'registered'\n}];\nvar _default = users;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInVzZXJzIiwiaWQiLCJlbWFpbCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGFzc3dvcmQiLCJhZGRyZXNzIiwiaXNfYWRtaW4iLCJzdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLEtBQUssR0FBRyxDQUNaO0FBRUVDLEVBQUFBLEVBQUUsRUFBRSxDQUZOO0FBR0VDLEVBQUFBLEtBQUssRUFBRSxpQkFIVDtBQUlFQyxFQUFBQSxTQUFTLEVBQUUsT0FKYjtBQUtFQyxFQUFBQSxRQUFRLEVBQUUsUUFMWjtBQU1FQyxFQUFBQSxRQUFRLEVBQUUsV0FOWjtBQU9FQyxFQUFBQSxPQUFPLEVBQUUscUNBUFg7QUFRRUMsRUFBQUEsUUFBUSxFQUFFLElBUlo7QUFTRUMsRUFBQUEsTUFBTSxFQUFFO0FBVFYsQ0FEWSxFQWFaO0FBRUVQLEVBQUFBLEVBQUUsRUFBRSxDQUZOO0FBR0VDLEVBQUFBLEtBQUssRUFBRSxpQkFIVDtBQUlFQyxFQUFBQSxTQUFTLEVBQUUsT0FKYjtBQUtFQyxFQUFBQSxRQUFRLEVBQUUsVUFMWjtBQU1FQyxFQUFBQSxRQUFRLEVBQUUsV0FOWjtBQU9FQyxFQUFBQSxPQUFPLEVBQUUscUNBUFg7QUFRRUMsRUFBQUEsUUFBUSxFQUFFLEtBUlo7QUFTRUMsRUFBQUEsTUFBTSxFQUFFO0FBVFYsQ0FiWSxFQXdCWjtBQUNFUCxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsaUJBRlQ7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLE9BSGI7QUFJRUMsRUFBQUEsUUFBUSxFQUFFLE9BSlo7QUFLRUMsRUFBQUEsUUFBUSxFQUFFLFdBTFo7QUFNRUMsRUFBQUEsT0FBTyxFQUFFLDhCQU5YO0FBT0VDLEVBQUFBLFFBQVEsRUFBRSxLQVBaO0FBUUVDLEVBQUFBLE1BQU0sRUFBRTtBQVJWLENBeEJZLENBQWQ7ZUFtQ2VSLEsiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxFcmljIElidVxcZGVza3RvcFxcYXV0b21hcnRcXHNlcnZlclxcdGVzdFxcbW9ja19kYiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHVzZXJzID0gW1xuICB7XG5cbiAgICBpZDogMSxcbiAgICBlbWFpbDogJ2phc29uQGdtYWlsLmNvbScsXG4gICAgZmlyc3ROYW1lOiAnSmFzb24nLFxuICAgIGxhc3ROYW1lOiAnVHJlbGxvJyxcbiAgICBwYXNzd29yZDogJzU1NVNTUzc3NycsXG4gICAgYWRkcmVzczogJzMyMSB1cHBlciBjcmVzdCBwYXJrLCBOZXcgWW9yaywgVVNBJyxcbiAgICBpc19hZG1pbjogdHJ1ZSxcbiAgICBzdGF0dXM6ICdyZWdpc3RlcmVkJyxcblxuICB9LFxuICB7XG5cbiAgICBpZDogMixcbiAgICBlbWFpbDogJ2RhbW15QGdtYWlsLmNvbScsXG4gICAgZmlyc3ROYW1lOiAnZGFtbXknLFxuICAgIGxhc3ROYW1lOiAnR29uemFsZXonLFxuICAgIHBhc3N3b3JkOiAnOTM2Mzc5SlVJJyxcbiAgICBhZGRyZXNzOiAnUjI4MCB3b29kIHdlc3QgcGFyaywgTWlsd2F1a2VlLCBVU0EnLFxuICAgIGlzX2FkbWluOiBmYWxzZSxcbiAgICBzdGF0dXM6ICdyZWdpc3RlcmVkJyxcbiAgfSxcbiAge1xuICAgIGlkOiAzLFxuICAgIGVtYWlsOiAnc2FtbXlAZ21haWwuY29tJyxcbiAgICBmaXJzdE5hbWU6ICdTYW1teScsXG4gICAgbGFzdE5hbWU6ICdCb25nbycsXG4gICAgcGFzc3dvcmQ6ICczMzNTU1NISEgnLFxuICAgIGFkZHJlc3M6ICczNjAwIFBpbGxoYW10b24sIEJvc3RvbiwgVVNBJyxcbiAgICBpc19hZG1pbjogZmFsc2UsXG4gICAgc3RhdHVzOiAncmVnaXN0ZXJlZCcsXG4gIH0sXG5dO1xuZXhwb3J0IGRlZmF1bHQgdXNlcnM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "users",
        "id",
        "email",
        "firstName",
        "lastName",
        "password",
        "address",
        "is_admin",
        "status"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,KAAK,GAAG,CACZ;AAEEC,EAAAA,EAAE,EAAE,CAFN;AAGEC,EAAAA,KAAK,EAAE,iBAHT;AAIEC,EAAAA,SAAS,EAAE,OAJb;AAKEC,EAAAA,QAAQ,EAAE,QALZ;AAMEC,EAAAA,QAAQ,EAAE,WANZ;AAOEC,EAAAA,OAAO,EAAE,qCAPX;AAQEC,EAAAA,QAAQ,EAAE,IARZ;AASEC,EAAAA,MAAM,EAAE;AATV,CADY,EAaZ;AAEEP,EAAAA,EAAE,EAAE,CAFN;AAGEC,EAAAA,KAAK,EAAE,iBAHT;AAIEC,EAAAA,SAAS,EAAE,OAJb;AAKEC,EAAAA,QAAQ,EAAE,UALZ;AAMEC,EAAAA,QAAQ,EAAE,WANZ;AAOEC,EAAAA,OAAO,EAAE,qCAPX;AAQEC,EAAAA,QAAQ,EAAE,KARZ;AASEC,EAAAA,MAAM,EAAE;AATV,CAbY,EAwBZ;AACEP,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,SAAS,EAAE,OAHb;AAIEC,EAAAA,QAAQ,EAAE,OAJZ;AAKEC,EAAAA,QAAQ,EAAE,WALZ;AAMEC,EAAAA,OAAO,EAAE,8BANX;AAOEC,EAAAA,QAAQ,EAAE,KAPZ;AAQEC,EAAAA,MAAM,EAAE;AARV,CAxBY,CAAd;eAmCeR,K",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "sourcesContent": [
        "const users = [\n  {\n\n    id: 1,\n    email: 'jason@gmail.com',\n    firstName: 'Jason',\n    lastName: 'Trello',\n    password: '555SSS777',\n    address: '321 upper crest park, New York, USA',\n    is_admin: true,\n    status: 'registered',\n\n  },\n  {\n\n    id: 2,\n    email: 'dammy@gmail.com',\n    firstName: 'dammy',\n    lastName: 'Gonzalez',\n    password: '936379JUI',\n    address: 'R280 wood west park, Milwaukee, USA',\n    is_admin: false,\n    status: 'registered',\n  },\n  {\n    id: 3,\n    email: 'sammy@gmail.com',\n    firstName: 'Sammy',\n    lastName: 'Bongo',\n    password: '333SSSHHH',\n    address: '3600 Pillhamton, Boston, USA',\n    is_admin: false,\n    status: 'registered',\n  },\n];\nexport default users;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561883735453
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _users = _interopRequireDefault(require(\"../test/mock_db/users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar User =\n/*#__PURE__*/\nfunction () {\n  function User() {\n    _classCallCheck(this, User);\n\n    this.users = _users[\"default\"];\n  }\n\n  _createClass(User, [{\n    key: \"createUser\",\n    value: function createUser(data) {\n      var id = parseInt(this.users.length + 1, 10);\n      var userData = {\n        id: id,\n        email: data.email || '',\n        first_name: data.first_name || '',\n        last_name: data.last_name || '',\n        password: data.password || '',\n        address: data.address || '',\n        is_admin: data.is_admin || '',\n        status: data.status || ''\n      };\n      this.users.push(userData);\n      return userData;\n    }\n  }, {\n    key: \"getAllUsers\",\n    value: function getAllUsers() {\n      return this.users;\n    }\n  }, {\n    key: \"findByFirstName\",\n    value: function findByFirstName(first_name) {\n      return this.users.find(function (user) {\n        return user.first_name === first_name;\n      });\n    }\n  }, {\n    key: \"findByEmail\",\n    value: function findByEmail(email) {\n      return this.users.find(function (user) {\n        return user.email === email;\n      });\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser(id) {\n      return this.users.find(function (user) {\n        return user.id === id;\n      });\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(userdata) {\n      var idx = this.users.indexOf(userdata);\n      this.users.splice(idx, 1);\n      userdata.status = 'deleted';\n      return userdata;\n    }\n  }, {\n    key: \"loginUser\",\n    value: function loginUser(id) {\n      console.log(this.users);\n      var logUser = this.users.filter(function (user) {\n        return parseInt(user.id, 10) === parseInt(id, 10);\n      });\n      logUser.status = 'loggedIn';\n      console.log(logUser);\n      return logUser;\n    }\n  }]);\n\n  return User;\n}();\n\nvar _default = new User();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXIiLCJ1c2VycyIsInVzZXJzRGF0YSIsImRhdGEiLCJpZCIsInBhcnNlSW50IiwibGVuZ3RoIiwidXNlckRhdGEiLCJlbWFpbCIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJwYXNzd29yZCIsImFkZHJlc3MiLCJpc19hZG1pbiIsInN0YXR1cyIsInB1c2giLCJmaW5kIiwidXNlciIsInVzZXJkYXRhIiwiaWR4IiwiaW5kZXhPZiIsInNwbGljZSIsImNvbnNvbGUiLCJsb2ciLCJsb2dVc2VyIiwiZmlsdGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7SUFFTUEsSTs7O0FBQ0wsa0JBQWE7QUFBQTs7QUFDWixTQUFLQyxLQUFMLEdBQWFDLGlCQUFiO0FBQ0E7Ozs7K0JBQ2FDLEksRUFBSztBQUNmLFVBQU1DLEVBQUUsR0FBR0MsUUFBUSxDQUFDLEtBQUtKLEtBQUwsQ0FBV0ssTUFBWCxHQUFvQixDQUFyQixFQUF3QixFQUF4QixDQUFuQjtBQUNBLFVBQU1DLFFBQVEsR0FBRTtBQUNmSCxRQUFBQSxFQUFFLEVBQUZBLEVBRGU7QUFFVEksUUFBQUEsS0FBSyxFQUFFTCxJQUFJLENBQUNLLEtBQUwsSUFBYyxFQUZaO0FBR1RDLFFBQUFBLFVBQVUsRUFBRU4sSUFBSSxDQUFDTSxVQUFMLElBQW1CLEVBSHRCO0FBSVRDLFFBQUFBLFNBQVMsRUFBRVAsSUFBSSxDQUFDTyxTQUFMLElBQWtCLEVBSnBCO0FBS1RDLFFBQUFBLFFBQVEsRUFBRVIsSUFBSSxDQUFDUSxRQUFMLElBQWlCLEVBTGxCO0FBTVRDLFFBQUFBLE9BQU8sRUFBRVQsSUFBSSxDQUFDUyxPQUFMLElBQWUsRUFOZjtBQU9UQyxRQUFBQSxRQUFRLEVBQUVWLElBQUksQ0FBQ1UsUUFBTCxJQUFpQixFQVBsQjtBQVFUQyxRQUFBQSxNQUFNLEVBQUVYLElBQUksQ0FBQ1csTUFBTCxJQUFlO0FBUmQsT0FBaEI7QUFVQSxXQUFLYixLQUFMLENBQVdjLElBQVgsQ0FBZ0JSLFFBQWhCO0FBQ0EsYUFBT0EsUUFBUDtBQUNBOzs7a0NBQ2M7QUFDZixhQUFPLEtBQUtOLEtBQVo7QUFDRDs7O29DQUNrQlEsVSxFQUFXO0FBQzFCLGFBQU8sS0FBS1IsS0FBTCxDQUFXZSxJQUFYLENBQWdCLFVBQUFDLElBQUk7QUFBQSxlQUFJQSxJQUFJLENBQUNSLFVBQUwsS0FBb0JBLFVBQXhCO0FBQUEsT0FBcEIsQ0FBUDtBQUNBOzs7Z0NBQ1dELEssRUFBTTtBQUNqQixhQUFPLEtBQUtQLEtBQUwsQ0FBV2UsSUFBWCxDQUFnQixVQUFBQyxJQUFJO0FBQUEsZUFBSUEsSUFBSSxDQUFDVCxLQUFMLEtBQWVBLEtBQW5CO0FBQUEsT0FBcEIsQ0FBUDtBQUNBOzs7NEJBQ09KLEUsRUFBRztBQUNWLGFBQU8sS0FBS0gsS0FBTCxDQUFXZSxJQUFYLENBQWdCLFVBQUFDLElBQUk7QUFBQSxlQUFJQSxJQUFJLENBQUNiLEVBQUwsS0FBYUEsRUFBakI7QUFBQSxPQUFwQixDQUFQO0FBQ0E7OzsrQkFDVWMsUSxFQUFTO0FBQ25CLFVBQU1DLEdBQUcsR0FBRyxLQUFLbEIsS0FBTCxDQUFXbUIsT0FBWCxDQUFtQkYsUUFBbkIsQ0FBWjtBQUNBLFdBQUtqQixLQUFMLENBQVdvQixNQUFYLENBQWtCRixHQUFsQixFQUF1QixDQUF2QjtBQUNBRCxNQUFBQSxRQUFRLENBQUNKLE1BQVQsR0FBa0IsU0FBbEI7QUFFQSxhQUFPSSxRQUFQO0FBQ0E7Ozs4QkFDU2QsRSxFQUFHO0FBQ1prQixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxLQUFLdEIsS0FBakI7QUFDQSxVQUFNdUIsT0FBTyxHQUFHLEtBQUt2QixLQUFMLENBQVd3QixNQUFYLENBQWtCLFVBQUFSLElBQUk7QUFBQSxlQUFJWixRQUFRLENBQUNZLElBQUksQ0FBQ2IsRUFBTixFQUFVLEVBQVYsQ0FBUixLQUEyQkMsUUFBUSxDQUFDRCxFQUFELEVBQUssRUFBTCxDQUF2QztBQUFBLE9BQXRCLENBQWhCO0FBQ0RvQixNQUFBQSxPQUFPLENBQUNWLE1BQVIsR0FBa0IsVUFBbEI7QUFDQVEsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BQVo7QUFDQyxhQUFPQSxPQUFQO0FBRUE7Ozs7OztlQUdTLElBQUl4QixJQUFKLEUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxFcmljIElidVxcZGVza3RvcFxcYXV0b21hcnRcXHNlcnZlclxcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZXJzRGF0YSBmcm9tICcuLi90ZXN0L21vY2tfZGIvdXNlcnMnO1xyXG5cclxuY2xhc3MgVXNlcntcclxuXHRjb25zdHJ1Y3Rvcigpe1xyXG5cdFx0dGhpcy51c2VycyA9IHVzZXJzRGF0YTtcclxuXHR9XHJcbiAgICBjcmVhdGVVc2VyKGRhdGEpe1xyXG4gICAgXHRjb25zdCBpZCA9IHBhcnNlSW50KHRoaXMudXNlcnMubGVuZ3RoICsgMSwgMTApO1xyXG4gICAgXHRjb25zdCB1c2VyRGF0YSA9e1xyXG4gICAgXHRcdGlkLFxyXG4gICAgICAgICAgICBlbWFpbDogZGF0YS5lbWFpbCB8fCAnJyxcclxuICAgICAgICAgICAgZmlyc3RfbmFtZTogZGF0YS5maXJzdF9uYW1lIHx8ICcnLFxyXG4gICAgICAgICAgICBsYXN0X25hbWU6IGRhdGEubGFzdF9uYW1lIHx8ICcnLFxyXG4gICAgICAgICAgICBwYXNzd29yZDogZGF0YS5wYXNzd29yZCB8fCAnJyxcclxuICAgICAgICAgICAgYWRkcmVzczogZGF0YS5hZGRyZXNzfHwgJycsXHJcbiAgICAgICAgICAgIGlzX2FkbWluOiBkYXRhLmlzX2FkbWluIHx8ICcnLFxyXG4gICAgICAgICAgICBzdGF0dXM6IGRhdGEuc3RhdHVzIHx8ICcnXHJcbiAgICBcdH1cclxuICAgIFx0dGhpcy51c2Vycy5wdXNoKHVzZXJEYXRhKTtcclxuICAgIFx0cmV0dXJuIHVzZXJEYXRhO1xyXG4gICAgfVxyXG4gICAgIGdldEFsbFVzZXJzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMudXNlcnM7XHJcbiAgfVxyXG4gICAgIGZpbmRCeUZpcnN0TmFtZShmaXJzdF9uYW1lKXtcclxuICAgICBcdHJldHVybiB0aGlzLnVzZXJzLmZpbmQodXNlciA9PiB1c2VyLmZpcnN0X25hbWUgPT09IGZpcnN0X25hbWUgKTtcclxuICAgICB9XHJcbiAgICAgZmluZEJ5RW1haWwoZW1haWwpe1xyXG4gICAgIFx0cmV0dXJuIHRoaXMudXNlcnMuZmluZCh1c2VyID0+IHVzZXIuZW1haWwgPT09IGVtYWlsICk7XHJcbiAgICAgfVxyXG4gICAgIGdldFVzZXIoaWQpe1xyXG4gICAgIFx0cmV0dXJuIHRoaXMudXNlcnMuZmluZCh1c2VyID0+IHVzZXIuaWQgID09PSBpZCApO1xyXG4gICAgIH1cclxuICAgICBkZWxldGVVc2VyKHVzZXJkYXRhKXtcclxuICAgICBcdGNvbnN0IGlkeCA9IHRoaXMudXNlcnMuaW5kZXhPZih1c2VyZGF0YSk7XHJcbiAgICAgXHR0aGlzLnVzZXJzLnNwbGljZShpZHgsIDEpO1xyXG4gICAgIFx0dXNlcmRhdGEuc3RhdHVzID0gJ2RlbGV0ZWQnO1xyXG5cclxuICAgICBcdHJldHVybiB1c2VyZGF0YTtcclxuICAgICB9XHJcbiAgICAgbG9naW5Vc2VyKGlkKXtcclxuICAgICBcdGNvbnNvbGUubG9nKHRoaXMudXNlcnMpO1xyXG4gICAgIFx0Y29uc3QgbG9nVXNlciA9IHRoaXMudXNlcnMuZmlsdGVyKHVzZXIgPT4gcGFyc2VJbnQodXNlci5pZCwgMTApICA9PT0gcGFyc2VJbnQoaWQsIDEwKSApO1xyXG4gICBcdFx0bG9nVXNlci5zdGF0dXMgID0gJ2xvZ2dlZEluJztcclxuICAgXHRcdGNvbnNvbGUubG9nKGxvZ1VzZXIpO1xyXG4gICAgIFx0cmV0dXJuIGxvZ1VzZXI7XHJcblxyXG4gICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IFVzZXIoKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "User",
        "users",
        "usersData",
        "data",
        "id",
        "parseInt",
        "length",
        "userData",
        "email",
        "first_name",
        "last_name",
        "password",
        "address",
        "is_admin",
        "status",
        "push",
        "find",
        "user",
        "userdata",
        "idx",
        "indexOf",
        "splice",
        "console",
        "log",
        "logUser",
        "filter"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,I;;;AACL,kBAAa;AAAA;;AACZ,SAAKC,KAAL,GAAaC,iBAAb;AACA;;;;+BACaC,I,EAAK;AACf,UAAMC,EAAE,GAAGC,QAAQ,CAAC,KAAKJ,KAAL,CAAWK,MAAX,GAAoB,CAArB,EAAwB,EAAxB,CAAnB;AACA,UAAMC,QAAQ,GAAE;AACfH,QAAAA,EAAE,EAAFA,EADe;AAETI,QAAAA,KAAK,EAAEL,IAAI,CAACK,KAAL,IAAc,EAFZ;AAGTC,QAAAA,UAAU,EAAEN,IAAI,CAACM,UAAL,IAAmB,EAHtB;AAITC,QAAAA,SAAS,EAAEP,IAAI,CAACO,SAAL,IAAkB,EAJpB;AAKTC,QAAAA,QAAQ,EAAER,IAAI,CAACQ,QAAL,IAAiB,EALlB;AAMTC,QAAAA,OAAO,EAAET,IAAI,CAACS,OAAL,IAAe,EANf;AAOTC,QAAAA,QAAQ,EAAEV,IAAI,CAACU,QAAL,IAAiB,EAPlB;AAQTC,QAAAA,MAAM,EAAEX,IAAI,CAACW,MAAL,IAAe;AARd,OAAhB;AAUA,WAAKb,KAAL,CAAWc,IAAX,CAAgBR,QAAhB;AACA,aAAOA,QAAP;AACA;;;kCACc;AACf,aAAO,KAAKN,KAAZ;AACD;;;oCACkBQ,U,EAAW;AAC1B,aAAO,KAAKR,KAAL,CAAWe,IAAX,CAAgB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACR,UAAL,KAAoBA,UAAxB;AAAA,OAApB,CAAP;AACA;;;gCACWD,K,EAAM;AACjB,aAAO,KAAKP,KAAL,CAAWe,IAAX,CAAgB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACT,KAAL,KAAeA,KAAnB;AAAA,OAApB,CAAP;AACA;;;4BACOJ,E,EAAG;AACV,aAAO,KAAKH,KAAL,CAAWe,IAAX,CAAgB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACb,EAAL,KAAaA,EAAjB;AAAA,OAApB,CAAP;AACA;;;+BACUc,Q,EAAS;AACnB,UAAMC,GAAG,GAAG,KAAKlB,KAAL,CAAWmB,OAAX,CAAmBF,QAAnB,CAAZ;AACA,WAAKjB,KAAL,CAAWoB,MAAX,CAAkBF,GAAlB,EAAuB,CAAvB;AACAD,MAAAA,QAAQ,CAACJ,MAAT,GAAkB,SAAlB;AAEA,aAAOI,QAAP;AACA;;;8BACSd,E,EAAG;AACZkB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAjB;AACA,UAAMuB,OAAO,GAAG,KAAKvB,KAAL,CAAWwB,MAAX,CAAkB,UAAAR,IAAI;AAAA,eAAIZ,QAAQ,CAACY,IAAI,CAACb,EAAN,EAAU,EAAV,CAAR,KAA2BC,QAAQ,CAACD,EAAD,EAAK,EAAL,CAAvC;AAAA,OAAtB,CAAhB;AACDoB,MAAAA,OAAO,CAACV,MAAR,GAAkB,UAAlB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACC,aAAOA,OAAP;AAEA;;;;;;eAGS,IAAIxB,IAAJ,E",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "sourcesContent": [
        "import usersData from '../test/mock_db/users';\r\n\r\nclass User{\r\n\tconstructor(){\r\n\t\tthis.users = usersData;\r\n\t}\r\n    createUser(data){\r\n    \tconst id = parseInt(this.users.length + 1, 10);\r\n    \tconst userData ={\r\n    \t\tid,\r\n            email: data.email || '',\r\n            first_name: data.first_name || '',\r\n            last_name: data.last_name || '',\r\n            password: data.password || '',\r\n            address: data.address|| '',\r\n            is_admin: data.is_admin || '',\r\n            status: data.status || ''\r\n    \t}\r\n    \tthis.users.push(userData);\r\n    \treturn userData;\r\n    }\r\n     getAllUsers() {\r\n    return this.users;\r\n  }\r\n     findByFirstName(first_name){\r\n     \treturn this.users.find(user => user.first_name === first_name );\r\n     }\r\n     findByEmail(email){\r\n     \treturn this.users.find(user => user.email === email );\r\n     }\r\n     getUser(id){\r\n     \treturn this.users.find(user => user.id  === id );\r\n     }\r\n     deleteUser(userdata){\r\n     \tconst idx = this.users.indexOf(userdata);\r\n     \tthis.users.splice(idx, 1);\r\n     \tuserdata.status = 'deleted';\r\n\r\n     \treturn userdata;\r\n     }\r\n     loginUser(id){\r\n     \tconsole.log(this.users);\r\n     \tconst logUser = this.users.filter(user => parseInt(user.id, 10)  === parseInt(id, 10) );\r\n   \t\tlogUser.status  = 'loggedIn';\r\n   \t\tconsole.log(logUser);\r\n     \treturn logUser;\r\n\r\n     }\r\n}\r\n\r\nexport default new User();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561996326466
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _users = _interopRequireDefault(require(\"../test/mock_db/users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar User =\n/*#__PURE__*/\nfunction () {\n  function User() {\n    _classCallCheck(this, User);\n\n    this.users = _users[\"default\"];\n  }\n\n  _createClass(User, [{\n    key: \"createUser\",\n    value: function createUser(data) {\n      var id = parseInt(this.users.length + 1, 10);\n      var userData = {\n        id: id,\n        email: data.email || '',\n        first_name: data.first_name || '',\n        last_name: data.last_name || '',\n        password: data.password || '',\n        address: data.address || '',\n        is_admin: data.is_admin || '',\n        status: data.status || ''\n      };\n      this.users.push(userData);\n      return userData;\n    }\n  }, {\n    key: \"getAllUsers\",\n    value: function getAllUsers() {\n      return this.users;\n    }\n  }, {\n    key: \"findByFirstName\",\n    value: function findByFirstName(first_name) {\n      return this.users.find(function (user) {\n        return user.first_name === first_name;\n      });\n    }\n  }, {\n    key: \"findByEmail\",\n    value: function findByEmail(email) {\n      return this.users.find(function (user) {\n        return user.email === email;\n      });\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser(id) {\n      return this.users.find(function (user) {\n        return user.id === id;\n      });\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(userdata) {\n      var idx = this.users.indexOf(userdata);\n      this.users.splice(idx, 1);\n      userdata.status = 'deleted';\n      return userdata;\n    }\n  }, {\n    key: \"loginUser\",\n    value: function loginUser(id) {\n      var logUser = this.users.filter(function (user) {\n        return parseInt(user.id, 10) === parseInt(id, 10);\n      });\n      logUser.status = 'loggedIn';\n      return logUser;\n    }\n  }]);\n\n  return User;\n}();\n\nvar _default = new User();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiVXNlciIsInVzZXJzIiwidXNlcnNEYXRhIiwiZGF0YSIsImlkIiwicGFyc2VJbnQiLCJsZW5ndGgiLCJ1c2VyRGF0YSIsImVtYWlsIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsInBhc3N3b3JkIiwiYWRkcmVzcyIsImlzX2FkbWluIiwic3RhdHVzIiwicHVzaCIsImZpbmQiLCJ1c2VyIiwidXNlcmRhdGEiLCJpZHgiLCJpbmRleE9mIiwic3BsaWNlIiwibG9nVXNlciIsImZpbHRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRU1BLEk7OztBQUNMLGtCQUFhO0FBQUE7O0FBQ1osU0FBS0MsS0FBTCxHQUFhQyxpQkFBYjtBQUNBOzs7OytCQUNhQyxJLEVBQUs7QUFDZixVQUFNQyxFQUFFLEdBQUdDLFFBQVEsQ0FBQyxLQUFLSixLQUFMLENBQVdLLE1BQVgsR0FBb0IsQ0FBckIsRUFBd0IsRUFBeEIsQ0FBbkI7QUFDQSxVQUFNQyxRQUFRLEdBQUU7QUFDZkgsUUFBQUEsRUFBRSxFQUFGQSxFQURlO0FBRVRJLFFBQUFBLEtBQUssRUFBRUwsSUFBSSxDQUFDSyxLQUFMLElBQWMsRUFGWjtBQUdUQyxRQUFBQSxVQUFVLEVBQUVOLElBQUksQ0FBQ00sVUFBTCxJQUFtQixFQUh0QjtBQUlUQyxRQUFBQSxTQUFTLEVBQUVQLElBQUksQ0FBQ08sU0FBTCxJQUFrQixFQUpwQjtBQUtUQyxRQUFBQSxRQUFRLEVBQUVSLElBQUksQ0FBQ1EsUUFBTCxJQUFpQixFQUxsQjtBQU1UQyxRQUFBQSxPQUFPLEVBQUVULElBQUksQ0FBQ1MsT0FBTCxJQUFlLEVBTmY7QUFPVEMsUUFBQUEsUUFBUSxFQUFFVixJQUFJLENBQUNVLFFBQUwsSUFBaUIsRUFQbEI7QUFRVEMsUUFBQUEsTUFBTSxFQUFFWCxJQUFJLENBQUNXLE1BQUwsSUFBZTtBQVJkLE9BQWhCO0FBVUEsV0FBS2IsS0FBTCxDQUFXYyxJQUFYLENBQWdCUixRQUFoQjtBQUNBLGFBQU9BLFFBQVA7QUFDQTs7O2tDQUNjO0FBQ2YsYUFBTyxLQUFLTixLQUFaO0FBQ0Q7OztvQ0FDa0JRLFUsRUFBVztBQUMxQixhQUFPLEtBQUtSLEtBQUwsQ0FBV2UsSUFBWCxDQUFnQixVQUFBQyxJQUFJO0FBQUEsZUFBSUEsSUFBSSxDQUFDUixVQUFMLEtBQW9CQSxVQUF4QjtBQUFBLE9BQXBCLENBQVA7QUFDQTs7O2dDQUNXRCxLLEVBQU07QUFDakIsYUFBTyxLQUFLUCxLQUFMLENBQVdlLElBQVgsQ0FBZ0IsVUFBQUMsSUFBSTtBQUFBLGVBQUlBLElBQUksQ0FBQ1QsS0FBTCxLQUFlQSxLQUFuQjtBQUFBLE9BQXBCLENBQVA7QUFDQTs7OzRCQUNPSixFLEVBQUc7QUFDVixhQUFPLEtBQUtILEtBQUwsQ0FBV2UsSUFBWCxDQUFnQixVQUFBQyxJQUFJO0FBQUEsZUFBSUEsSUFBSSxDQUFDYixFQUFMLEtBQWFBLEVBQWpCO0FBQUEsT0FBcEIsQ0FBUDtBQUNBOzs7K0JBQ1VjLFEsRUFBUztBQUNuQixVQUFNQyxHQUFHLEdBQUcsS0FBS2xCLEtBQUwsQ0FBV21CLE9BQVgsQ0FBbUJGLFFBQW5CLENBQVo7QUFDQSxXQUFLakIsS0FBTCxDQUFXb0IsTUFBWCxDQUFrQkYsR0FBbEIsRUFBdUIsQ0FBdkI7QUFDQUQsTUFBQUEsUUFBUSxDQUFDSixNQUFULEdBQWtCLFNBQWxCO0FBRUEsYUFBT0ksUUFBUDtBQUNBOzs7OEJBQ1NkLEUsRUFBRztBQUNaLFVBQU1rQixPQUFPLEdBQUcsS0FBS3JCLEtBQUwsQ0FBV3NCLE1BQVgsQ0FBa0IsVUFBQU4sSUFBSTtBQUFBLGVBQUlaLFFBQVEsQ0FBQ1ksSUFBSSxDQUFDYixFQUFOLEVBQVUsRUFBVixDQUFSLEtBQTJCQyxRQUFRLENBQUNELEVBQUQsRUFBSyxFQUFMLENBQXZDO0FBQUEsT0FBdEIsQ0FBaEI7QUFDRGtCLE1BQUFBLE9BQU8sQ0FBQ1IsTUFBUixHQUFrQixVQUFsQjtBQUNDLGFBQU9RLE9BQVA7QUFFQTs7Ozs7O2VBR1MsSUFBSXRCLElBQUosRSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEVyaWMgSWJ1XFxkZXNrdG9wXFxhdXRvbWFydFxcc2VydmVyXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlcnNEYXRhIGZyb20gJy4uL3Rlc3QvbW9ja19kYi91c2Vycyc7XHJcblxyXG5jbGFzcyBVc2Vye1xyXG5cdGNvbnN0cnVjdG9yKCl7XHJcblx0XHR0aGlzLnVzZXJzID0gdXNlcnNEYXRhO1xyXG5cdH1cclxuICAgIGNyZWF0ZVVzZXIoZGF0YSl7XHJcbiAgICBcdGNvbnN0IGlkID0gcGFyc2VJbnQodGhpcy51c2Vycy5sZW5ndGggKyAxLCAxMCk7XHJcbiAgICBcdGNvbnN0IHVzZXJEYXRhID17XHJcbiAgICBcdFx0aWQsXHJcbiAgICAgICAgICAgIGVtYWlsOiBkYXRhLmVtYWlsIHx8ICcnLFxyXG4gICAgICAgICAgICBmaXJzdF9uYW1lOiBkYXRhLmZpcnN0X25hbWUgfHwgJycsXHJcbiAgICAgICAgICAgIGxhc3RfbmFtZTogZGF0YS5sYXN0X25hbWUgfHwgJycsXHJcbiAgICAgICAgICAgIHBhc3N3b3JkOiBkYXRhLnBhc3N3b3JkIHx8ICcnLFxyXG4gICAgICAgICAgICBhZGRyZXNzOiBkYXRhLmFkZHJlc3N8fCAnJyxcclxuICAgICAgICAgICAgaXNfYWRtaW46IGRhdGEuaXNfYWRtaW4gfHwgJycsXHJcbiAgICAgICAgICAgIHN0YXR1czogZGF0YS5zdGF0dXMgfHwgJydcclxuICAgIFx0fVxyXG4gICAgXHR0aGlzLnVzZXJzLnB1c2godXNlckRhdGEpO1xyXG4gICAgXHRyZXR1cm4gdXNlckRhdGE7XHJcbiAgICB9XHJcbiAgICAgZ2V0QWxsVXNlcnMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy51c2VycztcclxuICB9XHJcbiAgICAgZmluZEJ5Rmlyc3ROYW1lKGZpcnN0X25hbWUpe1xyXG4gICAgIFx0cmV0dXJuIHRoaXMudXNlcnMuZmluZCh1c2VyID0+IHVzZXIuZmlyc3RfbmFtZSA9PT0gZmlyc3RfbmFtZSApO1xyXG4gICAgIH1cclxuICAgICBmaW5kQnlFbWFpbChlbWFpbCl7XHJcbiAgICAgXHRyZXR1cm4gdGhpcy51c2Vycy5maW5kKHVzZXIgPT4gdXNlci5lbWFpbCA9PT0gZW1haWwgKTtcclxuICAgICB9XHJcbiAgICAgZ2V0VXNlcihpZCl7XHJcbiAgICAgXHRyZXR1cm4gdGhpcy51c2Vycy5maW5kKHVzZXIgPT4gdXNlci5pZCAgPT09IGlkICk7XHJcbiAgICAgfVxyXG4gICAgIGRlbGV0ZVVzZXIodXNlcmRhdGEpe1xyXG4gICAgIFx0Y29uc3QgaWR4ID0gdGhpcy51c2Vycy5pbmRleE9mKHVzZXJkYXRhKTtcclxuICAgICBcdHRoaXMudXNlcnMuc3BsaWNlKGlkeCwgMSk7XHJcbiAgICAgXHR1c2VyZGF0YS5zdGF0dXMgPSAnZGVsZXRlZCc7XHJcblxyXG4gICAgIFx0cmV0dXJuIHVzZXJkYXRhO1xyXG4gICAgIH1cclxuICAgICBsb2dpblVzZXIoaWQpe1xyXG4gICAgIFx0Y29uc3QgbG9nVXNlciA9IHRoaXMudXNlcnMuZmlsdGVyKHVzZXIgPT4gcGFyc2VJbnQodXNlci5pZCwgMTApICA9PT0gcGFyc2VJbnQoaWQsIDEwKSApO1xyXG4gICBcdFx0bG9nVXNlci5zdGF0dXMgID0gJ2xvZ2dlZEluJztcclxuICAgICBcdHJldHVybiBsb2dVc2VyO1xyXG5cclxuICAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBVc2VyKCk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "User",
        "users",
        "usersData",
        "data",
        "id",
        "parseInt",
        "length",
        "userData",
        "email",
        "first_name",
        "last_name",
        "password",
        "address",
        "is_admin",
        "status",
        "push",
        "find",
        "user",
        "userdata",
        "idx",
        "indexOf",
        "splice",
        "logUser",
        "filter"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,I;;;AACL,kBAAa;AAAA;;AACZ,SAAKC,KAAL,GAAaC,iBAAb;AACA;;;;+BACaC,I,EAAK;AACf,UAAMC,EAAE,GAAGC,QAAQ,CAAC,KAAKJ,KAAL,CAAWK,MAAX,GAAoB,CAArB,EAAwB,EAAxB,CAAnB;AACA,UAAMC,QAAQ,GAAE;AACfH,QAAAA,EAAE,EAAFA,EADe;AAETI,QAAAA,KAAK,EAAEL,IAAI,CAACK,KAAL,IAAc,EAFZ;AAGTC,QAAAA,UAAU,EAAEN,IAAI,CAACM,UAAL,IAAmB,EAHtB;AAITC,QAAAA,SAAS,EAAEP,IAAI,CAACO,SAAL,IAAkB,EAJpB;AAKTC,QAAAA,QAAQ,EAAER,IAAI,CAACQ,QAAL,IAAiB,EALlB;AAMTC,QAAAA,OAAO,EAAET,IAAI,CAACS,OAAL,IAAe,EANf;AAOTC,QAAAA,QAAQ,EAAEV,IAAI,CAACU,QAAL,IAAiB,EAPlB;AAQTC,QAAAA,MAAM,EAAEX,IAAI,CAACW,MAAL,IAAe;AARd,OAAhB;AAUA,WAAKb,KAAL,CAAWc,IAAX,CAAgBR,QAAhB;AACA,aAAOA,QAAP;AACA;;;kCACc;AACf,aAAO,KAAKN,KAAZ;AACD;;;oCACkBQ,U,EAAW;AAC1B,aAAO,KAAKR,KAAL,CAAWe,IAAX,CAAgB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACR,UAAL,KAAoBA,UAAxB;AAAA,OAApB,CAAP;AACA;;;gCACWD,K,EAAM;AACjB,aAAO,KAAKP,KAAL,CAAWe,IAAX,CAAgB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACT,KAAL,KAAeA,KAAnB;AAAA,OAApB,CAAP;AACA;;;4BACOJ,E,EAAG;AACV,aAAO,KAAKH,KAAL,CAAWe,IAAX,CAAgB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACb,EAAL,KAAaA,EAAjB;AAAA,OAApB,CAAP;AACA;;;+BACUc,Q,EAAS;AACnB,UAAMC,GAAG,GAAG,KAAKlB,KAAL,CAAWmB,OAAX,CAAmBF,QAAnB,CAAZ;AACA,WAAKjB,KAAL,CAAWoB,MAAX,CAAkBF,GAAlB,EAAuB,CAAvB;AACAD,MAAAA,QAAQ,CAACJ,MAAT,GAAkB,SAAlB;AAEA,aAAOI,QAAP;AACA;;;8BACSd,E,EAAG;AACZ,UAAMkB,OAAO,GAAG,KAAKrB,KAAL,CAAWsB,MAAX,CAAkB,UAAAN,IAAI;AAAA,eAAIZ,QAAQ,CAACY,IAAI,CAACb,EAAN,EAAU,EAAV,CAAR,KAA2BC,QAAQ,CAACD,EAAD,EAAK,EAAL,CAAvC;AAAA,OAAtB,CAAhB;AACDkB,MAAAA,OAAO,CAACR,MAAR,GAAkB,UAAlB;AACC,aAAOQ,OAAP;AAEA;;;;;;eAGS,IAAItB,IAAJ,E",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "sourcesContent": [
        "import usersData from '../test/mock_db/users';\r\n\r\nclass User{\r\n\tconstructor(){\r\n\t\tthis.users = usersData;\r\n\t}\r\n    createUser(data){\r\n    \tconst id = parseInt(this.users.length + 1, 10);\r\n    \tconst userData ={\r\n    \t\tid,\r\n            email: data.email || '',\r\n            first_name: data.first_name || '',\r\n            last_name: data.last_name || '',\r\n            password: data.password || '',\r\n            address: data.address|| '',\r\n            is_admin: data.is_admin || '',\r\n            status: data.status || ''\r\n    \t}\r\n    \tthis.users.push(userData);\r\n    \treturn userData;\r\n    }\r\n     getAllUsers() {\r\n    return this.users;\r\n  }\r\n     findByFirstName(first_name){\r\n     \treturn this.users.find(user => user.first_name === first_name );\r\n     }\r\n     findByEmail(email){\r\n     \treturn this.users.find(user => user.email === email );\r\n     }\r\n     getUser(id){\r\n     \treturn this.users.find(user => user.id  === id );\r\n     }\r\n     deleteUser(userdata){\r\n     \tconst idx = this.users.indexOf(userdata);\r\n     \tthis.users.splice(idx, 1);\r\n     \tuserdata.status = 'deleted';\r\n\r\n     \treturn userdata;\r\n     }\r\n     loginUser(id){\r\n     \tconst logUser = this.users.filter(user => parseInt(user.id, 10)  === parseInt(id, 10) );\r\n   \t\tlogUser.status  = 'loggedIn';\r\n     \treturn logUser;\r\n\r\n     }\r\n}\r\n\r\nexport default new User();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561997525924
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\flag-spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\flag-spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\flag-spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\flag-spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "flag-spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _flags = _interopRequireDefault(require(\"./mock_db/flags\"));\n\nvar _flag = _interopRequireDefault(require(\"../models/flag\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndescribe('Test Flag Endpoint', function () {\n  describe('Create Flag Endpoint', function () {\n    it('should create a flag', function () {\n      var flagData = {\n        id: 1,\n        car_id: 2,\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake advert',\n        status: 'pending'\n      };\n\n      var newFlag = _flag[\"default\"].createFlag(flagData);\n\n      (0, _chai.expect)(newFlag).to.have.property('id');\n      (0, _chai.expect)(newFlag).to.have.property('car_id');\n      (0, _chai.expect)(newFlag).to.have.property('reason');\n      (0, _chai.expect)(newFlag).to.have.property('description');\n      (0, _chai.expect)(_flags[\"default\"][0].id).to.equal(flagData.id);\n      (0, _chai.expect)(newFlag.car_id).to.be.a('number');\n      (0, _chai.expect)(newFlag.reason).to.be.a('string');\n      (0, _chai.expect)(newFlag.description).to.be.a('string');\n\n      _chai.assert.isNumber(newFlag.id, 'ID is not a number');\n\n      _chai.assert.isNumber(newFlag.car_id, 'Car ID is not a number');\n\n      _chai.assert.isString(newFlag.reason, 'Reason is not a string');\n\n      _chai.assert.isString(newFlag.description, 'Description is not a string');\n    });\n  });\n  describe('car_id must be  a number', function () {\n    it('should return error if a car_id is not a number', function () {\n      var badFlag = {\n        id: 8,\n        car_id: 60,\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake advert',\n        status: 'pending'\n      };\n\n      var wrongFlag = _flag[\"default\"].createFlag(badFlag);\n\n      _chai.assert.isNumber(wrongFlag.car_id, 'Car Id must be a number');\n    });\n    it('should return error if a car_id is empty', function () {\n      var badFlag = {\n        id: 8,\n        car_id: '7',\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake advert',\n        status: 'pending'\n      };\n\n      var wrongFlag = _flag[\"default\"].createFlag(badFlag);\n\n      _chai.assert.isNotEmpty(wrongFlag.car_id, 'Car Id must not be empty');\n    });\n  });\n  describe('reason must not be empty', function () {\n    it('Should return an error message if reason is empty', function () {\n      var flagData = {\n        id: 1,\n        car_id: 2,\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake advert',\n        status: 'pending'\n      };\n\n      _chai.assert.isNotEmpty(flagData.reason, 'Reason must not be empty');\n    });\n  });\n  describe('description must not be empty', function () {\n    it('Should return an error message if description is empty', function () {\n      var flagData = {\n        id: 1,\n        car_id: 2,\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake',\n        status: 'pending'\n      };\n\n      _chai.assert.isNotEmpty(flagData.description, 'description must not be empty');\n    });\n  });\n  describe('Update a flag status', function () {\n    it('should update a given flag status to resolved', function () {\n      _flags[\"default\"][0].status = 'pending';\n      _flag[\"default\"].flags = _flags[\"default\"];\n      var flagId = _flags[\"default\"][0].id;\n\n      var flagstatus = _flag[\"default\"].updateFlagStatus(flagId);\n\n      (0, _chai.expect)(flagstatus).to.have.property('id').eq(_flags[\"default\"][0].id);\n      (0, _chai.expect)(flagstatus).to.have.property('car_id').eq(_flags[\"default\"][0].car_id);\n      (0, _chai.expect)(flagstatus).to.have.property('status').eq('resolved');\n    });\n  });\n  describe('Deletes a flag', function () {\n    it('should delete a given flag', function () {\n      _flag[\"default\"].flags = _flags[\"default\"];\n      var length = _flags[\"default\"].length;\n      var flagdata = _flags[\"default\"][0];\n\n      _flag[\"default\"].deleteFlag(flagdata);\n\n      var res = _flag[\"default\"].findFlag(_flags[\"default\"].id);\n\n      (0, _chai.expect)(res).to.eq(undefined);\n      (0, _chai.expect)(_flags[\"default\"].length).to.eq(length - 1);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZsYWctc3BlYy5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiZmxhZ0RhdGEiLCJpZCIsImNhcl9pZCIsImNyZWF0ZWRfb24iLCJyZWFzb24iLCJkZXNjcmlwdGlvbiIsInN0YXR1cyIsIm5ld0ZsYWciLCJGbGFnIiwiY3JlYXRlRmxhZyIsInRvIiwiaGF2ZSIsInByb3BlcnR5IiwiZmxhZyIsImVxdWFsIiwiYmUiLCJhIiwiYXNzZXJ0IiwiaXNOdW1iZXIiLCJpc1N0cmluZyIsImJhZEZsYWciLCJ3cm9uZ0ZsYWciLCJpc05vdEVtcHR5IiwiZmxhZ3MiLCJmbGFnSWQiLCJmbGFnc3RhdHVzIiwidXBkYXRlRmxhZ1N0YXR1cyIsImVxIiwibGVuZ3RoIiwiZmxhZ2RhdGEiLCJkZWxldGVGbGFnIiwicmVzIiwiZmluZEZsYWciLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEsUUFBUSxDQUFDLG9CQUFELEVBQXVCLFlBQU07QUFDbkNBLEVBQUFBLFFBQVEsQ0FBQyxzQkFBRCxFQUF5QixZQUFNO0FBQ3JDQyxJQUFBQSxFQUFFLENBQUMsc0JBQUQsRUFBeUIsWUFBTTtBQUMvQixVQUFNQyxRQUFRLEdBQUc7QUFDZkMsUUFBQUEsRUFBRSxFQUFFLENBRFc7QUFFZkMsUUFBQUEsTUFBTSxFQUFFLENBRk87QUFHZkMsUUFBQUEsVUFBVSxFQUFFLFlBSEc7QUFJZkMsUUFBQUEsTUFBTSxFQUFFLFlBSk87QUFLZkMsUUFBQUEsV0FBVyxFQUFFLGFBTEU7QUFNZkMsUUFBQUEsTUFBTSxFQUFFO0FBTk8sT0FBakI7O0FBUUEsVUFBTUMsT0FBTyxHQUFHQyxpQkFBS0MsVUFBTCxDQUFnQlQsUUFBaEIsQ0FBaEI7O0FBQ0Esd0JBQU9PLE9BQVAsRUFBZ0JHLEVBQWhCLENBQW1CQyxJQUFuQixDQUF3QkMsUUFBeEIsQ0FBaUMsSUFBakM7QUFDQSx3QkFBT0wsT0FBUCxFQUFnQkcsRUFBaEIsQ0FBbUJDLElBQW5CLENBQXdCQyxRQUF4QixDQUFpQyxRQUFqQztBQUNBLHdCQUFPTCxPQUFQLEVBQWdCRyxFQUFoQixDQUFtQkMsSUFBbkIsQ0FBd0JDLFFBQXhCLENBQWlDLFFBQWpDO0FBQ0Esd0JBQU9MLE9BQVAsRUFBZ0JHLEVBQWhCLENBQW1CQyxJQUFuQixDQUF3QkMsUUFBeEIsQ0FBaUMsYUFBakM7QUFDQSx3QkFBT0Msa0JBQUssQ0FBTCxFQUFRWixFQUFmLEVBQW1CUyxFQUFuQixDQUFzQkksS0FBdEIsQ0FBNEJkLFFBQVEsQ0FBQ0MsRUFBckM7QUFDQSx3QkFBT00sT0FBTyxDQUFDTCxNQUFmLEVBQXVCUSxFQUF2QixDQUEwQkssRUFBMUIsQ0FBNkJDLENBQTdCLENBQStCLFFBQS9CO0FBQ0Esd0JBQU9ULE9BQU8sQ0FBQ0gsTUFBZixFQUF1Qk0sRUFBdkIsQ0FBMEJLLEVBQTFCLENBQTZCQyxDQUE3QixDQUErQixRQUEvQjtBQUNBLHdCQUFPVCxPQUFPLENBQUNGLFdBQWYsRUFBNEJLLEVBQTVCLENBQStCSyxFQUEvQixDQUFrQ0MsQ0FBbEMsQ0FBb0MsUUFBcEM7O0FBQ0FDLG1CQUFPQyxRQUFQLENBQWdCWCxPQUFPLENBQUNOLEVBQXhCLEVBQTRCLG9CQUE1Qjs7QUFDQWdCLG1CQUFPQyxRQUFQLENBQWdCWCxPQUFPLENBQUNMLE1BQXhCLEVBQWdDLHdCQUFoQzs7QUFDQWUsbUJBQU9FLFFBQVAsQ0FBZ0JaLE9BQU8sQ0FBQ0gsTUFBeEIsRUFBZ0Msd0JBQWhDOztBQUNBYSxtQkFBT0UsUUFBUCxDQUFnQlosT0FBTyxDQUFDRixXQUF4QixFQUFxQyw2QkFBckM7QUFDRCxLQXRCQyxDQUFGO0FBdUJELEdBeEJPLENBQVI7QUEwQkFQLEVBQUFBLFFBQVEsQ0FBQywwQkFBRCxFQUE2QixZQUFNO0FBQ3pDQyxJQUFBQSxFQUFFLENBQUMsaURBQUQsRUFBb0QsWUFBTTtBQUMxRCxVQUFNcUIsT0FBTyxHQUFHO0FBQ2RuQixRQUFBQSxFQUFFLEVBQUUsQ0FEVTtBQUVkQyxRQUFBQSxNQUFNLEVBQUUsRUFGTTtBQUdkQyxRQUFBQSxVQUFVLEVBQUUsWUFIRTtBQUlkQyxRQUFBQSxNQUFNLEVBQUUsWUFKTTtBQUtkQyxRQUFBQSxXQUFXLEVBQUUsYUFMQztBQU1kQyxRQUFBQSxNQUFNLEVBQUU7QUFOTSxPQUFoQjs7QUFRQSxVQUFNZSxTQUFTLEdBQUdiLGlCQUFLQyxVQUFMLENBQWdCVyxPQUFoQixDQUFsQjs7QUFDQUgsbUJBQU9DLFFBQVAsQ0FBZ0JHLFNBQVMsQ0FBQ25CLE1BQTFCLEVBQWtDLHlCQUFsQztBQUNELEtBWEMsQ0FBRjtBQVlBSCxJQUFBQSxFQUFFLENBQUMsMENBQUQsRUFBNkMsWUFBTTtBQUNuRCxVQUFNcUIsT0FBTyxHQUFHO0FBQ2RuQixRQUFBQSxFQUFFLEVBQUUsQ0FEVTtBQUVkQyxRQUFBQSxNQUFNLEVBQUUsR0FGTTtBQUdkQyxRQUFBQSxVQUFVLEVBQUUsWUFIRTtBQUlkQyxRQUFBQSxNQUFNLEVBQUUsWUFKTTtBQUtkQyxRQUFBQSxXQUFXLEVBQUUsYUFMQztBQU1kQyxRQUFBQSxNQUFNLEVBQUU7QUFOTSxPQUFoQjs7QUFRQSxVQUFNZSxTQUFTLEdBQUdiLGlCQUFLQyxVQUFMLENBQWdCVyxPQUFoQixDQUFsQjs7QUFDQUgsbUJBQU9LLFVBQVAsQ0FBa0JELFNBQVMsQ0FBQ25CLE1BQTVCLEVBQW9DLDBCQUFwQztBQUNELEtBWEMsQ0FBRjtBQVlELEdBekJPLENBQVI7QUEwQkFKLEVBQUFBLFFBQVEsQ0FBQywwQkFBRCxFQUE2QixZQUFNO0FBQ3pDQyxJQUFBQSxFQUFFLENBQUMsbURBQUQsRUFBc0QsWUFBTTtBQUM1RCxVQUFNQyxRQUFRLEdBQUc7QUFDZkMsUUFBQUEsRUFBRSxFQUFFLENBRFc7QUFFZkMsUUFBQUEsTUFBTSxFQUFFLENBRk87QUFHZkMsUUFBQUEsVUFBVSxFQUFFLFlBSEc7QUFJZkMsUUFBQUEsTUFBTSxFQUFFLFlBSk87QUFLZkMsUUFBQUEsV0FBVyxFQUFFLGFBTEU7QUFNZkMsUUFBQUEsTUFBTSxFQUFFO0FBTk8sT0FBakI7O0FBUUFXLG1CQUFPSyxVQUFQLENBQWtCdEIsUUFBUSxDQUFDSSxNQUEzQixFQUFtQywwQkFBbkM7QUFDRCxLQVZDLENBQUY7QUFXRCxHQVpPLENBQVI7QUFhQU4sRUFBQUEsUUFBUSxDQUFDLCtCQUFELEVBQWtDLFlBQU07QUFDOUNDLElBQUFBLEVBQUUsQ0FBQyx3REFBRCxFQUEyRCxZQUFNO0FBQ2pFLFVBQU1DLFFBQVEsR0FBRztBQUNmQyxRQUFBQSxFQUFFLEVBQUUsQ0FEVztBQUVmQyxRQUFBQSxNQUFNLEVBQUUsQ0FGTztBQUdmQyxRQUFBQSxVQUFVLEVBQUUsWUFIRztBQUlmQyxRQUFBQSxNQUFNLEVBQUUsWUFKTztBQUtmQyxRQUFBQSxXQUFXLEVBQUUsTUFMRTtBQU1mQyxRQUFBQSxNQUFNLEVBQUU7QUFOTyxPQUFqQjs7QUFRQVcsbUJBQU9LLFVBQVAsQ0FBa0J0QixRQUFRLENBQUNLLFdBQTNCLEVBQXdDLCtCQUF4QztBQUNELEtBVkMsQ0FBRjtBQVdELEdBWk8sQ0FBUjtBQWNBUCxFQUFBQSxRQUFRLENBQUMsc0JBQUQsRUFBeUIsWUFBTTtBQUNyQ0MsSUFBQUEsRUFBRSxDQUFDLCtDQUFELEVBQWtELFlBQU07QUFDeERjLHdCQUFLLENBQUwsRUFBUVAsTUFBUixHQUFpQixTQUFqQjtBQUNBRSx1QkFBS2UsS0FBTCxHQUFhVixpQkFBYjtBQUNBLFVBQU1XLE1BQU0sR0FBR1gsa0JBQUssQ0FBTCxFQUFRWixFQUF2Qjs7QUFFQSxVQUFNd0IsVUFBVSxHQUFHakIsaUJBQUtrQixnQkFBTCxDQUFzQkYsTUFBdEIsQ0FBbkI7O0FBQ0Esd0JBQU9DLFVBQVAsRUFBbUJmLEVBQW5CLENBQXNCQyxJQUF0QixDQUEyQkMsUUFBM0IsQ0FBb0MsSUFBcEMsRUFBMENlLEVBQTFDLENBQTZDZCxrQkFBSyxDQUFMLEVBQVFaLEVBQXJEO0FBQ0Esd0JBQU93QixVQUFQLEVBQW1CZixFQUFuQixDQUFzQkMsSUFBdEIsQ0FBMkJDLFFBQTNCLENBQW9DLFFBQXBDLEVBQThDZSxFQUE5QyxDQUFpRGQsa0JBQUssQ0FBTCxFQUFRWCxNQUF6RDtBQUNBLHdCQUFPdUIsVUFBUCxFQUFtQmYsRUFBbkIsQ0FBc0JDLElBQXRCLENBQTJCQyxRQUEzQixDQUFvQyxRQUFwQyxFQUE4Q2UsRUFBOUMsQ0FBaUQsVUFBakQ7QUFDRCxLQVRDLENBQUY7QUFVRCxHQVhPLENBQVI7QUFZQTdCLEVBQUFBLFFBQVEsQ0FBQyxnQkFBRCxFQUFtQixZQUFNO0FBQy9CQyxJQUFBQSxFQUFFLENBQUMsNEJBQUQsRUFBK0IsWUFBTTtBQUNyQ1MsdUJBQUtlLEtBQUwsR0FBYVYsaUJBQWI7QUFEcUMsVUFFN0JlLE1BRjZCLEdBRWxCZixpQkFGa0IsQ0FFN0JlLE1BRjZCO0FBR3JDLFVBQU1DLFFBQVEsR0FBR2hCLGtCQUFLLENBQUwsQ0FBakI7O0FBRUFMLHVCQUFLc0IsVUFBTCxDQUFnQkQsUUFBaEI7O0FBQ0EsVUFBTUUsR0FBRyxHQUFHdkIsaUJBQUt3QixRQUFMLENBQWNuQixrQkFBS1osRUFBbkIsQ0FBWjs7QUFDQSx3QkFBTzhCLEdBQVAsRUFBWXJCLEVBQVosQ0FBZWlCLEVBQWYsQ0FBa0JNLFNBQWxCO0FBQ0Esd0JBQU9wQixrQkFBS2UsTUFBWixFQUFvQmxCLEVBQXBCLENBQXVCaUIsRUFBdkIsQ0FBMEJDLE1BQU0sR0FBRyxDQUFuQztBQUNELEtBVEMsQ0FBRjtBQVVELEdBWE8sQ0FBUjtBQVlELENBeEdPLENBQVIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxFcmljIElidVxcZGVza3RvcFxcYXV0b21hcnRcXHNlcnZlclxcdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4cGVjdCwgYXNzZXJ0IH0gZnJvbSAnY2hhaSc7XG5pbXBvcnQgZmxhZyBmcm9tICcuL21vY2tfZGIvZmxhZ3MnO1xuaW1wb3J0IEZsYWcgZnJvbSAnLi4vbW9kZWxzL2ZsYWcnO1xuXG5kZXNjcmliZSgnVGVzdCBGbGFnIEVuZHBvaW50JywgKCkgPT4ge1xuICBkZXNjcmliZSgnQ3JlYXRlIEZsYWcgRW5kcG9pbnQnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBjcmVhdGUgYSBmbGFnJywgKCkgPT4ge1xuICAgICAgY29uc3QgZmxhZ0RhdGEgPSB7XG4gICAgICAgIGlkOiAxLFxuICAgICAgICBjYXJfaWQ6IDIsXG4gICAgICAgIGNyZWF0ZWRfb246ICcxMC8xMC8yMDE4JyxcbiAgICAgICAgcmVhc29uOiAnZnJhdWR1bGVudCcsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnZmFrZSBhZHZlcnQnLFxuICAgICAgICBzdGF0dXM6ICdwZW5kaW5nJyxcbiAgICAgIH07XG4gICAgICBjb25zdCBuZXdGbGFnID0gRmxhZy5jcmVhdGVGbGFnKGZsYWdEYXRhKTtcbiAgICAgIGV4cGVjdChuZXdGbGFnKS50by5oYXZlLnByb3BlcnR5KCdpZCcpO1xuICAgICAgZXhwZWN0KG5ld0ZsYWcpLnRvLmhhdmUucHJvcGVydHkoJ2Nhcl9pZCcpO1xuICAgICAgZXhwZWN0KG5ld0ZsYWcpLnRvLmhhdmUucHJvcGVydHkoJ3JlYXNvbicpO1xuICAgICAgZXhwZWN0KG5ld0ZsYWcpLnRvLmhhdmUucHJvcGVydHkoJ2Rlc2NyaXB0aW9uJyk7XG4gICAgICBleHBlY3QoZmxhZ1swXS5pZCkudG8uZXF1YWwoZmxhZ0RhdGEuaWQpO1xuICAgICAgZXhwZWN0KG5ld0ZsYWcuY2FyX2lkKS50by5iZS5hKCdudW1iZXInKTtcbiAgICAgIGV4cGVjdChuZXdGbGFnLnJlYXNvbikudG8uYmUuYSgnc3RyaW5nJyk7XG4gICAgICBleHBlY3QobmV3RmxhZy5kZXNjcmlwdGlvbikudG8uYmUuYSgnc3RyaW5nJyk7XG4gICAgICBhc3NlcnQuaXNOdW1iZXIobmV3RmxhZy5pZCwgJ0lEIGlzIG5vdCBhIG51bWJlcicpO1xuICAgICAgYXNzZXJ0LmlzTnVtYmVyKG5ld0ZsYWcuY2FyX2lkLCAnQ2FyIElEIGlzIG5vdCBhIG51bWJlcicpO1xuICAgICAgYXNzZXJ0LmlzU3RyaW5nKG5ld0ZsYWcucmVhc29uLCAnUmVhc29uIGlzIG5vdCBhIHN0cmluZycpO1xuICAgICAgYXNzZXJ0LmlzU3RyaW5nKG5ld0ZsYWcuZGVzY3JpcHRpb24sICdEZXNjcmlwdGlvbiBpcyBub3QgYSBzdHJpbmcnKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ2Nhcl9pZCBtdXN0IGJlICBhIG51bWJlcicsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiBlcnJvciBpZiBhIGNhcl9pZCBpcyBub3QgYSBudW1iZXInLCAoKSA9PiB7XG4gICAgICBjb25zdCBiYWRGbGFnID0ge1xuICAgICAgICBpZDogOCxcbiAgICAgICAgY2FyX2lkOiA2MCxcbiAgICAgICAgY3JlYXRlZF9vbjogJzEwLzEwLzIwMTgnLFxuICAgICAgICByZWFzb246ICdmcmF1ZHVsZW50JyxcbiAgICAgICAgZGVzY3JpcHRpb246ICdmYWtlIGFkdmVydCcsXG4gICAgICAgIHN0YXR1czogJ3BlbmRpbmcnLFxuICAgICAgfTtcbiAgICAgIGNvbnN0IHdyb25nRmxhZyA9IEZsYWcuY3JlYXRlRmxhZyhiYWRGbGFnKTtcbiAgICAgIGFzc2VydC5pc051bWJlcih3cm9uZ0ZsYWcuY2FyX2lkLCAnQ2FyIElkIG11c3QgYmUgYSBudW1iZXInKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHJldHVybiBlcnJvciBpZiBhIGNhcl9pZCBpcyBlbXB0eScsICgpID0+IHtcbiAgICAgIGNvbnN0IGJhZEZsYWcgPSB7XG4gICAgICAgIGlkOiA4LFxuICAgICAgICBjYXJfaWQ6ICc3JyxcbiAgICAgICAgY3JlYXRlZF9vbjogJzEwLzEwLzIwMTgnLFxuICAgICAgICByZWFzb246ICdmcmF1ZHVsZW50JyxcbiAgICAgICAgZGVzY3JpcHRpb246ICdmYWtlIGFkdmVydCcsXG4gICAgICAgIHN0YXR1czogJ3BlbmRpbmcnLFxuICAgICAgfTtcbiAgICAgIGNvbnN0IHdyb25nRmxhZyA9IEZsYWcuY3JlYXRlRmxhZyhiYWRGbGFnKTtcbiAgICAgIGFzc2VydC5pc05vdEVtcHR5KHdyb25nRmxhZy5jYXJfaWQsICdDYXIgSWQgbXVzdCBub3QgYmUgZW1wdHknKTtcbiAgICB9KTtcbiAgfSk7XG4gIGRlc2NyaWJlKCdyZWFzb24gbXVzdCBub3QgYmUgZW1wdHknLCAoKSA9PiB7XG4gICAgaXQoJ1Nob3VsZCByZXR1cm4gYW4gZXJyb3IgbWVzc2FnZSBpZiByZWFzb24gaXMgZW1wdHknLCAoKSA9PiB7XG4gICAgICBjb25zdCBmbGFnRGF0YSA9IHtcbiAgICAgICAgaWQ6IDEsXG4gICAgICAgIGNhcl9pZDogMixcbiAgICAgICAgY3JlYXRlZF9vbjogJzEwLzEwLzIwMTgnLFxuICAgICAgICByZWFzb246ICdmcmF1ZHVsZW50JyxcbiAgICAgICAgZGVzY3JpcHRpb246ICdmYWtlIGFkdmVydCcsXG4gICAgICAgIHN0YXR1czogJ3BlbmRpbmcnLFxuICAgICAgfTtcbiAgICAgIGFzc2VydC5pc05vdEVtcHR5KGZsYWdEYXRhLnJlYXNvbiwgJ1JlYXNvbiBtdXN0IG5vdCBiZSBlbXB0eScpO1xuICAgIH0pO1xuICB9KTtcbiAgZGVzY3JpYmUoJ2Rlc2NyaXB0aW9uIG11c3Qgbm90IGJlIGVtcHR5JywgKCkgPT4ge1xuICAgIGl0KCdTaG91bGQgcmV0dXJuIGFuIGVycm9yIG1lc3NhZ2UgaWYgZGVzY3JpcHRpb24gaXMgZW1wdHknLCAoKSA9PiB7XG4gICAgICBjb25zdCBmbGFnRGF0YSA9IHtcbiAgICAgICAgaWQ6IDEsXG4gICAgICAgIGNhcl9pZDogMixcbiAgICAgICAgY3JlYXRlZF9vbjogJzEwLzEwLzIwMTgnLFxuICAgICAgICByZWFzb246ICdmcmF1ZHVsZW50JyxcbiAgICAgICAgZGVzY3JpcHRpb246ICdmYWtlJyxcbiAgICAgICAgc3RhdHVzOiAncGVuZGluZycsXG4gICAgICB9O1xuICAgICAgYXNzZXJ0LmlzTm90RW1wdHkoZmxhZ0RhdGEuZGVzY3JpcHRpb24sICdkZXNjcmlwdGlvbiBtdXN0IG5vdCBiZSBlbXB0eScpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnVXBkYXRlIGEgZmxhZyBzdGF0dXMnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCB1cGRhdGUgYSBnaXZlbiBmbGFnIHN0YXR1cyB0byByZXNvbHZlZCcsICgpID0+IHtcbiAgICAgIGZsYWdbMF0uc3RhdHVzID0gJ3BlbmRpbmcnO1xuICAgICAgRmxhZy5mbGFncyA9IGZsYWc7XG4gICAgICBjb25zdCBmbGFnSWQgPSBmbGFnWzBdLmlkO1xuXG4gICAgICBjb25zdCBmbGFnc3RhdHVzID0gRmxhZy51cGRhdGVGbGFnU3RhdHVzKGZsYWdJZCk7XG4gICAgICBleHBlY3QoZmxhZ3N0YXR1cykudG8uaGF2ZS5wcm9wZXJ0eSgnaWQnKS5lcShmbGFnWzBdLmlkKTtcbiAgICAgIGV4cGVjdChmbGFnc3RhdHVzKS50by5oYXZlLnByb3BlcnR5KCdjYXJfaWQnKS5lcShmbGFnWzBdLmNhcl9pZCk7XG4gICAgICBleHBlY3QoZmxhZ3N0YXR1cykudG8uaGF2ZS5wcm9wZXJ0eSgnc3RhdHVzJykuZXEoJ3Jlc29sdmVkJyk7XG4gICAgfSk7XG4gIH0pO1xuICBkZXNjcmliZSgnRGVsZXRlcyBhIGZsYWcnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBkZWxldGUgYSBnaXZlbiBmbGFnJywgKCkgPT4ge1xuICAgICAgRmxhZy5mbGFncyA9IGZsYWc7XG4gICAgICBjb25zdCB7IGxlbmd0aCB9ID0gZmxhZztcbiAgICAgIGNvbnN0IGZsYWdkYXRhID0gZmxhZ1swXTtcblxuICAgICAgRmxhZy5kZWxldGVGbGFnKGZsYWdkYXRhKTtcbiAgICAgIGNvbnN0IHJlcyA9IEZsYWcuZmluZEZsYWcoZmxhZy5pZCk7XG4gICAgICBleHBlY3QocmVzKS50by5lcSh1bmRlZmluZWQpO1xuICAgICAgZXhwZWN0KGZsYWcubGVuZ3RoKS50by5lcShsZW5ndGggLSAxKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "flag-spec.js"
      ],
      "names": [
        "describe",
        "it",
        "flagData",
        "id",
        "car_id",
        "created_on",
        "reason",
        "description",
        "status",
        "newFlag",
        "Flag",
        "createFlag",
        "to",
        "have",
        "property",
        "flag",
        "equal",
        "be",
        "a",
        "assert",
        "isNumber",
        "isString",
        "badFlag",
        "wrongFlag",
        "isNotEmpty",
        "flags",
        "flagId",
        "flagstatus",
        "updateFlagStatus",
        "eq",
        "length",
        "flagdata",
        "deleteFlag",
        "res",
        "findFlag",
        "undefined"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACnCA,EAAAA,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCC,IAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAM;AAC/B,UAAMC,QAAQ,GAAG;AACfC,QAAAA,EAAE,EAAE,CADW;AAEfC,QAAAA,MAAM,EAAE,CAFO;AAGfC,QAAAA,UAAU,EAAE,YAHG;AAIfC,QAAAA,MAAM,EAAE,YAJO;AAKfC,QAAAA,WAAW,EAAE,aALE;AAMfC,QAAAA,MAAM,EAAE;AANO,OAAjB;;AAQA,UAAMC,OAAO,GAAGC,iBAAKC,UAAL,CAAgBT,QAAhB,CAAhB;;AACA,wBAAOO,OAAP,EAAgBG,EAAhB,CAAmBC,IAAnB,CAAwBC,QAAxB,CAAiC,IAAjC;AACA,wBAAOL,OAAP,EAAgBG,EAAhB,CAAmBC,IAAnB,CAAwBC,QAAxB,CAAiC,QAAjC;AACA,wBAAOL,OAAP,EAAgBG,EAAhB,CAAmBC,IAAnB,CAAwBC,QAAxB,CAAiC,QAAjC;AACA,wBAAOL,OAAP,EAAgBG,EAAhB,CAAmBC,IAAnB,CAAwBC,QAAxB,CAAiC,aAAjC;AACA,wBAAOC,kBAAK,CAAL,EAAQZ,EAAf,EAAmBS,EAAnB,CAAsBI,KAAtB,CAA4Bd,QAAQ,CAACC,EAArC;AACA,wBAAOM,OAAO,CAACL,MAAf,EAAuBQ,EAAvB,CAA0BK,EAA1B,CAA6BC,CAA7B,CAA+B,QAA/B;AACA,wBAAOT,OAAO,CAACH,MAAf,EAAuBM,EAAvB,CAA0BK,EAA1B,CAA6BC,CAA7B,CAA+B,QAA/B;AACA,wBAAOT,OAAO,CAACF,WAAf,EAA4BK,EAA5B,CAA+BK,EAA/B,CAAkCC,CAAlC,CAAoC,QAApC;;AACAC,mBAAOC,QAAP,CAAgBX,OAAO,CAACN,EAAxB,EAA4B,oBAA5B;;AACAgB,mBAAOC,QAAP,CAAgBX,OAAO,CAACL,MAAxB,EAAgC,wBAAhC;;AACAe,mBAAOE,QAAP,CAAgBZ,OAAO,CAACH,MAAxB,EAAgC,wBAAhC;;AACAa,mBAAOE,QAAP,CAAgBZ,OAAO,CAACF,WAAxB,EAAqC,6BAArC;AACD,KAtBC,CAAF;AAuBD,GAxBO,CAAR;AA0BAP,EAAAA,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACzCC,IAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAM;AAC1D,UAAMqB,OAAO,GAAG;AACdnB,QAAAA,EAAE,EAAE,CADU;AAEdC,QAAAA,MAAM,EAAE,EAFM;AAGdC,QAAAA,UAAU,EAAE,YAHE;AAIdC,QAAAA,MAAM,EAAE,YAJM;AAKdC,QAAAA,WAAW,EAAE,aALC;AAMdC,QAAAA,MAAM,EAAE;AANM,OAAhB;;AAQA,UAAMe,SAAS,GAAGb,iBAAKC,UAAL,CAAgBW,OAAhB,CAAlB;;AACAH,mBAAOC,QAAP,CAAgBG,SAAS,CAACnB,MAA1B,EAAkC,yBAAlC;AACD,KAXC,CAAF;AAYAH,IAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AACnD,UAAMqB,OAAO,GAAG;AACdnB,QAAAA,EAAE,EAAE,CADU;AAEdC,QAAAA,MAAM,EAAE,GAFM;AAGdC,QAAAA,UAAU,EAAE,YAHE;AAIdC,QAAAA,MAAM,EAAE,YAJM;AAKdC,QAAAA,WAAW,EAAE,aALC;AAMdC,QAAAA,MAAM,EAAE;AANM,OAAhB;;AAQA,UAAMe,SAAS,GAAGb,iBAAKC,UAAL,CAAgBW,OAAhB,CAAlB;;AACAH,mBAAOK,UAAP,CAAkBD,SAAS,CAACnB,MAA5B,EAAoC,0BAApC;AACD,KAXC,CAAF;AAYD,GAzBO,CAAR;AA0BAJ,EAAAA,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACzCC,IAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5D,UAAMC,QAAQ,GAAG;AACfC,QAAAA,EAAE,EAAE,CADW;AAEfC,QAAAA,MAAM,EAAE,CAFO;AAGfC,QAAAA,UAAU,EAAE,YAHG;AAIfC,QAAAA,MAAM,EAAE,YAJO;AAKfC,QAAAA,WAAW,EAAE,aALE;AAMfC,QAAAA,MAAM,EAAE;AANO,OAAjB;;AAQAW,mBAAOK,UAAP,CAAkBtB,QAAQ,CAACI,MAA3B,EAAmC,0BAAnC;AACD,KAVC,CAAF;AAWD,GAZO,CAAR;AAaAN,EAAAA,QAAQ,CAAC,+BAAD,EAAkC,YAAM;AAC9CC,IAAAA,EAAE,CAAC,wDAAD,EAA2D,YAAM;AACjE,UAAMC,QAAQ,GAAG;AACfC,QAAAA,EAAE,EAAE,CADW;AAEfC,QAAAA,MAAM,EAAE,CAFO;AAGfC,QAAAA,UAAU,EAAE,YAHG;AAIfC,QAAAA,MAAM,EAAE,YAJO;AAKfC,QAAAA,WAAW,EAAE,MALE;AAMfC,QAAAA,MAAM,EAAE;AANO,OAAjB;;AAQAW,mBAAOK,UAAP,CAAkBtB,QAAQ,CAACK,WAA3B,EAAwC,+BAAxC;AACD,KAVC,CAAF;AAWD,GAZO,CAAR;AAcAP,EAAAA,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCC,IAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACxDc,wBAAK,CAAL,EAAQP,MAAR,GAAiB,SAAjB;AACAE,uBAAKe,KAAL,GAAaV,iBAAb;AACA,UAAMW,MAAM,GAAGX,kBAAK,CAAL,EAAQZ,EAAvB;;AAEA,UAAMwB,UAAU,GAAGjB,iBAAKkB,gBAAL,CAAsBF,MAAtB,CAAnB;;AACA,wBAAOC,UAAP,EAAmBf,EAAnB,CAAsBC,IAAtB,CAA2BC,QAA3B,CAAoC,IAApC,EAA0Ce,EAA1C,CAA6Cd,kBAAK,CAAL,EAAQZ,EAArD;AACA,wBAAOwB,UAAP,EAAmBf,EAAnB,CAAsBC,IAAtB,CAA2BC,QAA3B,CAAoC,QAApC,EAA8Ce,EAA9C,CAAiDd,kBAAK,CAAL,EAAQX,MAAzD;AACA,wBAAOuB,UAAP,EAAmBf,EAAnB,CAAsBC,IAAtB,CAA2BC,QAA3B,CAAoC,QAApC,EAA8Ce,EAA9C,CAAiD,UAAjD;AACD,KATC,CAAF;AAUD,GAXO,CAAR;AAYA7B,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,IAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACrCS,uBAAKe,KAAL,GAAaV,iBAAb;AADqC,UAE7Be,MAF6B,GAElBf,iBAFkB,CAE7Be,MAF6B;AAGrC,UAAMC,QAAQ,GAAGhB,kBAAK,CAAL,CAAjB;;AAEAL,uBAAKsB,UAAL,CAAgBD,QAAhB;;AACA,UAAME,GAAG,GAAGvB,iBAAKwB,QAAL,CAAcnB,kBAAKZ,EAAnB,CAAZ;;AACA,wBAAO8B,GAAP,EAAYrB,EAAZ,CAAeiB,EAAf,CAAkBM,SAAlB;AACA,wBAAOpB,kBAAKe,MAAZ,EAAoBlB,EAApB,CAAuBiB,EAAvB,CAA0BC,MAAM,GAAG,CAAnC;AACD,KATC,CAAF;AAUD,GAXO,CAAR;AAYD,CAxGO,CAAR",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "import { expect, assert } from 'chai';\nimport flag from './mock_db/flags';\nimport Flag from '../models/flag';\n\ndescribe('Test Flag Endpoint', () => {\n  describe('Create Flag Endpoint', () => {\n    it('should create a flag', () => {\n      const flagData = {\n        id: 1,\n        car_id: 2,\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake advert',\n        status: 'pending',\n      };\n      const newFlag = Flag.createFlag(flagData);\n      expect(newFlag).to.have.property('id');\n      expect(newFlag).to.have.property('car_id');\n      expect(newFlag).to.have.property('reason');\n      expect(newFlag).to.have.property('description');\n      expect(flag[0].id).to.equal(flagData.id);\n      expect(newFlag.car_id).to.be.a('number');\n      expect(newFlag.reason).to.be.a('string');\n      expect(newFlag.description).to.be.a('string');\n      assert.isNumber(newFlag.id, 'ID is not a number');\n      assert.isNumber(newFlag.car_id, 'Car ID is not a number');\n      assert.isString(newFlag.reason, 'Reason is not a string');\n      assert.isString(newFlag.description, 'Description is not a string');\n    });\n  });\n\n  describe('car_id must be  a number', () => {\n    it('should return error if a car_id is not a number', () => {\n      const badFlag = {\n        id: 8,\n        car_id: 60,\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake advert',\n        status: 'pending',\n      };\n      const wrongFlag = Flag.createFlag(badFlag);\n      assert.isNumber(wrongFlag.car_id, 'Car Id must be a number');\n    });\n    it('should return error if a car_id is empty', () => {\n      const badFlag = {\n        id: 8,\n        car_id: '7',\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake advert',\n        status: 'pending',\n      };\n      const wrongFlag = Flag.createFlag(badFlag);\n      assert.isNotEmpty(wrongFlag.car_id, 'Car Id must not be empty');\n    });\n  });\n  describe('reason must not be empty', () => {\n    it('Should return an error message if reason is empty', () => {\n      const flagData = {\n        id: 1,\n        car_id: 2,\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake advert',\n        status: 'pending',\n      };\n      assert.isNotEmpty(flagData.reason, 'Reason must not be empty');\n    });\n  });\n  describe('description must not be empty', () => {\n    it('Should return an error message if description is empty', () => {\n      const flagData = {\n        id: 1,\n        car_id: 2,\n        created_on: '10/10/2018',\n        reason: 'fraudulent',\n        description: 'fake',\n        status: 'pending',\n      };\n      assert.isNotEmpty(flagData.description, 'description must not be empty');\n    });\n  });\n\n  describe('Update a flag status', () => {\n    it('should update a given flag status to resolved', () => {\n      flag[0].status = 'pending';\n      Flag.flags = flag;\n      const flagId = flag[0].id;\n\n      const flagstatus = Flag.updateFlagStatus(flagId);\n      expect(flagstatus).to.have.property('id').eq(flag[0].id);\n      expect(flagstatus).to.have.property('car_id').eq(flag[0].car_id);\n      expect(flagstatus).to.have.property('status').eq('resolved');\n    });\n  });\n  describe('Deletes a flag', () => {\n    it('should delete a given flag', () => {\n      Flag.flags = flag;\n      const { length } = flag;\n      const flagdata = flag[0];\n\n      Flag.deleteFlag(flagdata);\n      const res = Flag.findFlag(flag.id);\n      expect(res).to.eq(undefined);\n      expect(flag.length).to.eq(length - 1);\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562013668446
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\\\\flags.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\flags.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\flags.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\flags.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
        "sourceFileName": "flags.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar flag = [{\n  id: 1,\n  car_id: 2,\n  created_on: '10/10/2018',\n  reason: 'fraudulent',\n  description: 'fake advert',\n  status: 'pending'\n}, {\n  id: 2,\n  car_id: 3,\n  created_on: '11/12/2018',\n  reason: 'fraudulent',\n  description: 'damaged vehicle',\n  status: 'pending'\n}, {\n  id: 3,\n  car_id: 8,\n  created_on: '11/12/2018',\n  reason: 'fraudulent',\n  description: 'damaged vehicle',\n  status: 'pending'\n}, {\n  id: 4,\n  car_id: 9,\n  created_on: '11/12/2018',\n  reason: 'fraudulent',\n  description: 'fake advert',\n  status: 'pending'\n}];\nvar _default = flag;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZsYWdzLmpzIl0sIm5hbWVzIjpbImZsYWciLCJpZCIsImNhcl9pZCIsImNyZWF0ZWRfb24iLCJyZWFzb24iLCJkZXNjcmlwdGlvbiIsInN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsSUFBSSxHQUFHLENBRVg7QUFDRUMsRUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsRUFBQUEsTUFBTSxFQUFFLENBRlY7QUFHRUMsRUFBQUEsVUFBVSxFQUFFLFlBSGQ7QUFJRUMsRUFBQUEsTUFBTSxFQUFFLFlBSlY7QUFLRUMsRUFBQUEsV0FBVyxFQUFFLGFBTGY7QUFNRUMsRUFBQUEsTUFBTSxFQUFFO0FBTlYsQ0FGVyxFQVdYO0FBQ0VMLEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLE1BQU0sRUFBRSxDQUZWO0FBR0VDLEVBQUFBLFVBQVUsRUFBRSxZQUhkO0FBSUVDLEVBQUFBLE1BQU0sRUFBRSxZQUpWO0FBS0VDLEVBQUFBLFdBQVcsRUFBRSxpQkFMZjtBQU1FQyxFQUFBQSxNQUFNLEVBQUU7QUFOVixDQVhXLEVBb0JYO0FBQ0VMLEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLE1BQU0sRUFBRSxDQUZWO0FBR0VDLEVBQUFBLFVBQVUsRUFBRSxZQUhkO0FBSUVDLEVBQUFBLE1BQU0sRUFBRSxZQUpWO0FBS0VDLEVBQUFBLFdBQVcsRUFBRSxpQkFMZjtBQU1FQyxFQUFBQSxNQUFNLEVBQUU7QUFOVixDQXBCVyxFQTZCWDtBQUNFTCxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxFQUFBQSxNQUFNLEVBQUUsQ0FGVjtBQUdFQyxFQUFBQSxVQUFVLEVBQUUsWUFIZDtBQUlFQyxFQUFBQSxNQUFNLEVBQUUsWUFKVjtBQUtFQyxFQUFBQSxXQUFXLEVBQUUsYUFMZjtBQU1FQyxFQUFBQSxNQUFNLEVBQUU7QUFOVixDQTdCVyxDQUFiO2VBdUNlTixJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0XFxzZXJ2ZXJcXHRlc3RcXG1vY2tfZGIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmbGFnID0gW1xyXG4gIFxyXG4gIHtcclxuICAgIGlkOiAxLFxyXG4gICAgY2FyX2lkOiAyLCBcclxuICAgIGNyZWF0ZWRfb246ICcxMC8xMC8yMDE4JyxcclxuICAgIHJlYXNvbjogJ2ZyYXVkdWxlbnQnLFxyXG4gICAgZGVzY3JpcHRpb246ICdmYWtlIGFkdmVydCcsXHJcbiAgICBzdGF0dXM6ICdwZW5kaW5nJ1xyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgIGlkOiAyLFxyXG4gICAgY2FyX2lkOiAzLFxyXG4gICAgY3JlYXRlZF9vbjogJzExLzEyLzIwMTgnLFxyXG4gICAgcmVhc29uOiAnZnJhdWR1bGVudCcsXHJcbiAgICBkZXNjcmlwdGlvbjogJ2RhbWFnZWQgdmVoaWNsZScsXHJcbiAgICBzdGF0dXM6ICdwZW5kaW5nJyxcclxuICB9LFxyXG5cclxuICB7XHJcbiAgICBpZDogMyxcclxuICAgIGNhcl9pZDogOCxcclxuICAgIGNyZWF0ZWRfb246ICcxMS8xMi8yMDE4JyxcclxuICAgIHJlYXNvbjogJ2ZyYXVkdWxlbnQnLFxyXG4gICAgZGVzY3JpcHRpb246ICdkYW1hZ2VkIHZlaGljbGUnLFxyXG4gICAgc3RhdHVzOiAncGVuZGluZycsXHJcbiAgfSxcclxuXHJcbiAge1xyXG4gICAgaWQ6IDQsXHJcbiAgICBjYXJfaWQ6IDksXHJcbiAgICBjcmVhdGVkX29uOiAnMTEvMTIvMjAxOCcsXHJcbiAgICByZWFzb246ICdmcmF1ZHVsZW50JyxcclxuICAgIGRlc2NyaXB0aW9uOiAnZmFrZSBhZHZlcnQnLFxyXG4gICAgc3RhdHVzOiAncGVuZGluZycsXHJcbiAgfVxyXG5dXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmbGFnOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "flags.js"
      ],
      "names": [
        "flag",
        "id",
        "car_id",
        "created_on",
        "reason",
        "description",
        "status"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,IAAI,GAAG,CAEX;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,MAAM,EAAE,CAFV;AAGEC,EAAAA,UAAU,EAAE,YAHd;AAIEC,EAAAA,MAAM,EAAE,YAJV;AAKEC,EAAAA,WAAW,EAAE,aALf;AAMEC,EAAAA,MAAM,EAAE;AANV,CAFW,EAWX;AACEL,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,MAAM,EAAE,CAFV;AAGEC,EAAAA,UAAU,EAAE,YAHd;AAIEC,EAAAA,MAAM,EAAE,YAJV;AAKEC,EAAAA,WAAW,EAAE,iBALf;AAMEC,EAAAA,MAAM,EAAE;AANV,CAXW,EAoBX;AACEL,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,MAAM,EAAE,CAFV;AAGEC,EAAAA,UAAU,EAAE,YAHd;AAIEC,EAAAA,MAAM,EAAE,YAJV;AAKEC,EAAAA,WAAW,EAAE,iBALf;AAMEC,EAAAA,MAAM,EAAE;AANV,CApBW,EA6BX;AACEL,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,MAAM,EAAE,CAFV;AAGEC,EAAAA,UAAU,EAAE,YAHd;AAIEC,EAAAA,MAAM,EAAE,YAJV;AAKEC,EAAAA,WAAW,EAAE,aALf;AAMEC,EAAAA,MAAM,EAAE;AANV,CA7BW,CAAb;eAuCeN,I",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "sourcesContent": [
        "const flag = [\r\n  \r\n  {\r\n    id: 1,\r\n    car_id: 2, \r\n    created_on: '10/10/2018',\r\n    reason: 'fraudulent',\r\n    description: 'fake advert',\r\n    status: 'pending'\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    car_id: 3,\r\n    created_on: '11/12/2018',\r\n    reason: 'fraudulent',\r\n    description: 'damaged vehicle',\r\n    status: 'pending',\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    car_id: 8,\r\n    created_on: '11/12/2018',\r\n    reason: 'fraudulent',\r\n    description: 'damaged vehicle',\r\n    status: 'pending',\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    car_id: 9,\r\n    created_on: '11/12/2018',\r\n    reason: 'fraudulent',\r\n    description: 'fake advert',\r\n    status: 'pending',\r\n  }\r\n]\r\n\r\nexport default flag;"
      ]
    },
    "sourceType": "script",
    "mtime": 1562007485160
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\\\\flag.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\flag.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\flag.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\flag.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
        "sourceFileName": "flag.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _flags = _interopRequireDefault(require(\"../test/mock_db/flags\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Flag =\n/*#__PURE__*/\nfunction () {\n  function Flag() {\n    _classCallCheck(this, Flag);\n\n    this.flags = _flags[\"default\"];\n  }\n\n  _createClass(Flag, [{\n    key: \"createFlag\",\n    value: function createFlag(data) {\n      var flagdata = {\n        id: parseInt(this.flags.length + 1, 10),\n        car_id: data.car_id,\n        created_on: new Date().toLocaleString(),\n        reason: data.reason,\n        description: data.description,\n        status: data.status || 'pending'\n      };\n\n      _flags[\"default\"].push(flagdata);\n\n      return flagdata;\n    }\n  }, {\n    key: \"getAllFlags\",\n    value: function getAllFlags() {\n      return this.flags;\n    }\n  }, {\n    key: \"findFlag\",\n    value: function findFlag(id) {\n      return this.flags.find(function (flag) {\n        return parseInt(flag.id, 10) === parseInt(id, 10);\n      });\n    }\n  }, {\n    key: \"updateFlagStatus\",\n    value: function updateFlagStatus(flagId) {\n      var flagref = this.flags.find(function (flag) {\n        return parseInt(flag.id, 10) === parseInt(flagId, 10);\n      });\n      flagref.status = 'resolved';\n      return flagref;\n    }\n  }, {\n    key: \"deleteFlag\",\n    value: function deleteFlag(flagId) {\n      var idx = this.flags.indexOf(flagId);\n      var deletedFlag = this.flags.splice(idx, 1);\n      deletedFlag.status = 'deleted';\n      return deletedFlag;\n    }\n  }]);\n\n  return Flag;\n}();\n\nvar _default = new Flag();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZsYWcuanMiXSwibmFtZXMiOlsiRmxhZyIsImZsYWdzIiwiZmxhZ2RiIiwiZGF0YSIsImZsYWdkYXRhIiwiaWQiLCJwYXJzZUludCIsImxlbmd0aCIsImNhcl9pZCIsImNyZWF0ZWRfb24iLCJEYXRlIiwidG9Mb2NhbGVTdHJpbmciLCJyZWFzb24iLCJkZXNjcmlwdGlvbiIsInN0YXR1cyIsInB1c2giLCJmaW5kIiwiZmxhZyIsImZsYWdJZCIsImZsYWdyZWYiLCJpZHgiLCJpbmRleE9mIiwiZGVsZXRlZEZsYWciLCJzcGxpY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUVNQSxJOzs7QUFDTCxrQkFBYTtBQUFBOztBQUNaLFNBQUtDLEtBQUwsR0FBYUMsaUJBQWI7QUFDQTs7OzsrQkFFVUMsSSxFQUFLO0FBQ2YsVUFBTUMsUUFBUSxHQUFHO0FBQ1hDLFFBQUFBLEVBQUUsRUFBRUMsUUFBUSxDQUFDLEtBQUtMLEtBQUwsQ0FBV00sTUFBWCxHQUFvQixDQUFyQixFQUF3QixFQUF4QixDQUREO0FBRVhDLFFBQUFBLE1BQU0sRUFBRUwsSUFBSSxDQUFDSyxNQUZGO0FBR1hDLFFBQUFBLFVBQVUsRUFBRSxJQUFJQyxJQUFKLEdBQVdDLGNBQVgsRUFIRDtBQUlYQyxRQUFBQSxNQUFNLEVBQUVULElBQUksQ0FBQ1MsTUFKRjtBQUtYQyxRQUFBQSxXQUFXLEVBQUVWLElBQUksQ0FBQ1UsV0FMUDtBQU1YQyxRQUFBQSxNQUFNLEVBQUVYLElBQUksQ0FBQ1csTUFBTCxJQUFlO0FBTlosT0FBakI7O0FBU0FaLHdCQUFPYSxJQUFQLENBQVlYLFFBQVo7O0FBQ0EsYUFBT0EsUUFBUDtBQUNBOzs7a0NBRVk7QUFDWixhQUFPLEtBQUtILEtBQVo7QUFDQTs7OzZCQUVRSSxFLEVBQUc7QUFDWCxhQUFPLEtBQUtKLEtBQUwsQ0FBV2UsSUFBWCxDQUFnQixVQUFBQyxJQUFJO0FBQUEsZUFBSVgsUUFBUSxDQUFDVyxJQUFJLENBQUNaLEVBQU4sRUFBVSxFQUFWLENBQVIsS0FBMEJDLFFBQVEsQ0FBQ0QsRUFBRCxFQUFLLEVBQUwsQ0FBdEM7QUFBQSxPQUFwQixDQUFQO0FBQ0E7OztxQ0FFZ0JhLE0sRUFBTztBQUN2QixVQUFNQyxPQUFPLEdBQUcsS0FBS2xCLEtBQUwsQ0FBV2UsSUFBWCxDQUFnQixVQUFBQyxJQUFJO0FBQUEsZUFBSVgsUUFBUSxDQUFDVyxJQUFJLENBQUNaLEVBQU4sRUFBVSxFQUFWLENBQVIsS0FBMEJDLFFBQVEsQ0FBQ1ksTUFBRCxFQUFTLEVBQVQsQ0FBdEM7QUFBQSxPQUFwQixDQUFoQjtBQUNBQyxNQUFBQSxPQUFPLENBQUNMLE1BQVIsR0FBZ0IsVUFBaEI7QUFDQSxhQUFPSyxPQUFQO0FBQ0E7OzsrQkFFVUQsTSxFQUFPO0FBQ2pCLFVBQU1FLEdBQUcsR0FBRyxLQUFLbkIsS0FBTCxDQUFXb0IsT0FBWCxDQUFtQkgsTUFBbkIsQ0FBWjtBQUNBLFVBQU1JLFdBQVcsR0FBRyxLQUFLckIsS0FBTCxDQUFXc0IsTUFBWCxDQUFrQkgsR0FBbEIsRUFBdUIsQ0FBdkIsQ0FBcEI7QUFDQUUsTUFBQUEsV0FBVyxDQUFDUixNQUFaLEdBQXFCLFNBQXJCO0FBQ0EsYUFBT1EsV0FBUDtBQUNBOzs7Ozs7ZUFFYSxJQUFJdEIsSUFBSixFIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0XFxzZXJ2ZXJcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmbGFnZGIgZnJvbSAnLi4vdGVzdC9tb2NrX2RiL2ZsYWdzJztcclxuXHJcbmNsYXNzIEZsYWd7XHJcblx0Y29uc3RydWN0b3IoKXtcclxuXHRcdHRoaXMuZmxhZ3MgPSBmbGFnZGI7XHJcblx0fVxyXG5cclxuXHRjcmVhdGVGbGFnKGRhdGEpe1xyXG5cdFx0Y29uc3QgZmxhZ2RhdGEgPSB7XHJcbiAgICAgICAgaWQ6IHBhcnNlSW50KHRoaXMuZmxhZ3MubGVuZ3RoICsgMSwgMTApLFxyXG4gICAgICAgIGNhcl9pZDogZGF0YS5jYXJfaWQsIFxyXG4gICAgICAgIGNyZWF0ZWRfb246IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKSxcclxuICAgICAgICByZWFzb246IGRhdGEucmVhc29uLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiBkYXRhLmRlc2NyaXB0aW9uLFxyXG4gICAgICAgIHN0YXR1czogZGF0YS5zdGF0dXMgfHwgJ3BlbmRpbmcnXHJcblx0XHR9O1xyXG5cclxuXHRcdGZsYWdkYi5wdXNoKGZsYWdkYXRhKTtcclxuXHRcdHJldHVybiBmbGFnZGF0YTtcclxuXHR9XHJcblxyXG5cdGdldEFsbEZsYWdzKCl7XHJcblx0XHRyZXR1cm4gdGhpcy5mbGFncztcclxuXHR9XHJcblxyXG5cdGZpbmRGbGFnKGlkKXtcclxuXHRcdHJldHVybiB0aGlzLmZsYWdzLmZpbmQoZmxhZyA9PiBwYXJzZUludChmbGFnLmlkLCAxMCkgPT09IHBhcnNlSW50KGlkLCAxMCkpO1xyXG5cdH1cclxuXHJcblx0dXBkYXRlRmxhZ1N0YXR1cyhmbGFnSWQpe1xyXG5cdFx0Y29uc3QgZmxhZ3JlZiA9IHRoaXMuZmxhZ3MuZmluZChmbGFnID0+IHBhcnNlSW50KGZsYWcuaWQsIDEwKSA9PT0gcGFyc2VJbnQoZmxhZ0lkLCAxMCkpO1xyXG5cdFx0ZmxhZ3JlZi5zdGF0dXMgPSdyZXNvbHZlZCc7XHJcblx0XHRyZXR1cm4gZmxhZ3JlZjtcclxuXHR9XHJcblxyXG5cdGRlbGV0ZUZsYWcoZmxhZ0lkKXtcclxuXHRcdGNvbnN0IGlkeCA9IHRoaXMuZmxhZ3MuaW5kZXhPZihmbGFnSWQpO1xyXG5cdFx0Y29uc3QgZGVsZXRlZEZsYWcgPSB0aGlzLmZsYWdzLnNwbGljZShpZHgsIDEpO1xyXG5cdFx0ZGVsZXRlZEZsYWcuc3RhdHVzID0gJ2RlbGV0ZWQnO1xyXG5cdFx0cmV0dXJuIGRlbGV0ZWRGbGFnO1xyXG5cdH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBuZXcgRmxhZygpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "flag.js"
      ],
      "names": [
        "Flag",
        "flags",
        "flagdb",
        "data",
        "flagdata",
        "id",
        "parseInt",
        "length",
        "car_id",
        "created_on",
        "Date",
        "toLocaleString",
        "reason",
        "description",
        "status",
        "push",
        "find",
        "flag",
        "flagId",
        "flagref",
        "idx",
        "indexOf",
        "deletedFlag",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEMA,I;;;AACL,kBAAa;AAAA;;AACZ,SAAKC,KAAL,GAAaC,iBAAb;AACA;;;;+BAEUC,I,EAAK;AACf,UAAMC,QAAQ,GAAG;AACXC,QAAAA,EAAE,EAAEC,QAAQ,CAAC,KAAKL,KAAL,CAAWM,MAAX,GAAoB,CAArB,EAAwB,EAAxB,CADD;AAEXC,QAAAA,MAAM,EAAEL,IAAI,CAACK,MAFF;AAGXC,QAAAA,UAAU,EAAE,IAAIC,IAAJ,GAAWC,cAAX,EAHD;AAIXC,QAAAA,MAAM,EAAET,IAAI,CAACS,MAJF;AAKXC,QAAAA,WAAW,EAAEV,IAAI,CAACU,WALP;AAMXC,QAAAA,MAAM,EAAEX,IAAI,CAACW,MAAL,IAAe;AANZ,OAAjB;;AASAZ,wBAAOa,IAAP,CAAYX,QAAZ;;AACA,aAAOA,QAAP;AACA;;;kCAEY;AACZ,aAAO,KAAKH,KAAZ;AACA;;;6BAEQI,E,EAAG;AACX,aAAO,KAAKJ,KAAL,CAAWe,IAAX,CAAgB,UAAAC,IAAI;AAAA,eAAIX,QAAQ,CAACW,IAAI,CAACZ,EAAN,EAAU,EAAV,CAAR,KAA0BC,QAAQ,CAACD,EAAD,EAAK,EAAL,CAAtC;AAAA,OAApB,CAAP;AACA;;;qCAEgBa,M,EAAO;AACvB,UAAMC,OAAO,GAAG,KAAKlB,KAAL,CAAWe,IAAX,CAAgB,UAAAC,IAAI;AAAA,eAAIX,QAAQ,CAACW,IAAI,CAACZ,EAAN,EAAU,EAAV,CAAR,KAA0BC,QAAQ,CAACY,MAAD,EAAS,EAAT,CAAtC;AAAA,OAApB,CAAhB;AACAC,MAAAA,OAAO,CAACL,MAAR,GAAgB,UAAhB;AACA,aAAOK,OAAP;AACA;;;+BAEUD,M,EAAO;AACjB,UAAME,GAAG,GAAG,KAAKnB,KAAL,CAAWoB,OAAX,CAAmBH,MAAnB,CAAZ;AACA,UAAMI,WAAW,GAAG,KAAKrB,KAAL,CAAWsB,MAAX,CAAkBH,GAAlB,EAAuB,CAAvB,CAApB;AACAE,MAAAA,WAAW,CAACR,MAAZ,GAAqB,SAArB;AACA,aAAOQ,WAAP;AACA;;;;;;eAEa,IAAItB,IAAJ,E",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "sourcesContent": [
        "import flagdb from '../test/mock_db/flags';\r\n\r\nclass Flag{\r\n\tconstructor(){\r\n\t\tthis.flags = flagdb;\r\n\t}\r\n\r\n\tcreateFlag(data){\r\n\t\tconst flagdata = {\r\n        id: parseInt(this.flags.length + 1, 10),\r\n        car_id: data.car_id, \r\n        created_on: new Date().toLocaleString(),\r\n        reason: data.reason,\r\n        description: data.description,\r\n        status: data.status || 'pending'\r\n\t\t};\r\n\r\n\t\tflagdb.push(flagdata);\r\n\t\treturn flagdata;\r\n\t}\r\n\r\n\tgetAllFlags(){\r\n\t\treturn this.flags;\r\n\t}\r\n\r\n\tfindFlag(id){\r\n\t\treturn this.flags.find(flag => parseInt(flag.id, 10) === parseInt(id, 10));\r\n\t}\r\n\r\n\tupdateFlagStatus(flagId){\r\n\t\tconst flagref = this.flags.find(flag => parseInt(flag.id, 10) === parseInt(flagId, 10));\r\n\t\tflagref.status ='resolved';\r\n\t\treturn flagref;\r\n\t}\r\n\r\n\tdeleteFlag(flagId){\r\n\t\tconst idx = this.flags.indexOf(flagId);\r\n\t\tconst deletedFlag = this.flags.splice(idx, 1);\r\n\t\tdeletedFlag.status = 'deleted';\r\n\t\treturn deletedFlag;\r\n\t}\r\n}\r\nexport default new Flag();"
      ]
    },
    "sourceType": "script",
    "mtime": 1562013080835
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\order-spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\order-spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\order-spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\order-spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "order-spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _orders = _interopRequireDefault(require(\"./mock_db/orders\"));\n\nvar _order = _interopRequireDefault(require(\"../models/order\"));\n\nvar _users = _interopRequireDefault(require(\"./mock_db/users\"));\n\nvar _cars = _interopRequireDefault(require(\"./mock_db/cars\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndescribe('Test Order Endpoint', function () {\n  describe('Create a car order', function () {\n    it('should create a car purchase order', function () {\n      var buyerId = _users[\"default\"][2].id;\n      var ownerId = _cars[\"default\"][0].owner;\n      var newOrder = {\n        id: parseInt(_orders[\"default\"].length + 1, 10),\n        car_id: 12354,\n        buyer_id: buyerId,\n        owner_id: ownerId,\n        email: 'jason@gmail.com',\n        createdOn: '5/15/2018',\n        manufacturer: 'Honda',\n        price: 4500000,\n        status: 'available',\n        state: 'used',\n        body_type: 'Saloon',\n        priceOffered: 3500000\n      };\n\n      var order = _order[\"default\"].createOrder(newOrder);\n\n      (0, _chai.expect)(order).to.have.property('createdOn');\n      (0, _chai.expect)(order).to.have.property('priceOffered').eq(price);\n      (0, _chai.expect)(order.owner_id).to.eq(_cars[\"default\"][0].owner);\n      (0, _chai.expect)(order.buyer_id).to.eq(_users[\"default\"][2].id);\n    });\n  });\n  describe('Get all orders', function () {\n    it('should return all orders', function () {\n      _order[\"default\"].orders = _orders[\"default\"];\n\n      var allOrders = _order[\"default\"].getAllOrders();\n\n      (0, _chai.expect)(allOrders).to.be.an('Array');\n      (0, _chai.expect)(allOrders[0].id).to.eq(_orders[\"default\"][0].id);\n    });\n  });\n  describe('Get a single order', function () {\n    it('should return a specific order', function () {\n      _order[\"default\"].orders = _orders[\"default\"];\n\n      var getOrder = _order[\"default\"].getAnOrder(id);\n\n      (0, _chai.expect)(getAnOrder).to.be.an('object');\n      (0, _chai.expect)(getAnOrder[0].id).to.equal(_orders[\"default\"][0].id);\n    });\n  });\n  describe('Update an order', function () {\n    it('should update the status of an order', function () {\n      _orders[\"default\"][0].status = 'pending';\n      _order[\"default\"].orders = _orders[\"default\"];\n\n      var updatedOrder = _order[\"default\"].updateOrder(_orders[\"default\"][0].id, 'accepted');\n\n      (0, _chai.expect)(updatedOrder.status).to.eq('accepted');\n      (0, _chai.expect)(updatedOrder.id).to.eq(ordersdata[0].id);\n    });\n  });\n  describe('Delete an order', function () {\n    it('should delete an order', function () {\n      _order[\"default\"].orders = _orders[\"default\"];\n      var length = _orders[\"default\"].length;\n      var order = _orders[\"default\"][0];\n\n      _order[\"default\"].deleteOrder(order);\n\n      var res = _order[\"default\"].getAnOrder(order.id);\n\n      (0, _chai.expect)(res).to.eq(undefined);\n      (0, _chai.expect)(ordersdata.length).to.eq(length - 1);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "order-spec.js"
      ],
      "names": [
        "describe",
        "it",
        "buyerId",
        "user",
        "id",
        "ownerId",
        "carsData",
        "owner",
        "newOrder",
        "parseInt",
        "orderData",
        "length",
        "car_id",
        "buyer_id",
        "owner_id",
        "email",
        "createdOn",
        "manufacturer",
        "price",
        "status",
        "state",
        "body_type",
        "priceOffered",
        "order",
        "Order",
        "createOrder",
        "to",
        "have",
        "property",
        "eq",
        "orders",
        "allOrders",
        "getAllOrders",
        "be",
        "an",
        "getOrder",
        "getAnOrder",
        "equal",
        "updatedOrder",
        "updateOrder",
        "ordersdata",
        "deleteOrder",
        "res",
        "undefined"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAGAA,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACrCA,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACpCC,IAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC9C,UAAMC,OAAO,GAAIC,kBAAK,CAAL,EAAQC,EAAzB;AACA,UAAMC,OAAO,GAAIC,iBAAS,CAAT,EAAYC,KAA7B;AACS,UAAMC,QAAQ,GAAG;AAChBJ,QAAAA,EAAE,EAAEK,QAAQ,CAACC,mBAAUC,MAAV,GAAmB,CAApB,EAAuB,EAAvB,CADI;AAEbC,QAAAA,MAAM,EAAE,KAFK;AAGbC,QAAAA,QAAQ,EAAEX,OAHG;AAIbY,QAAAA,QAAQ,EAAET,OAJG;AAKhBU,QAAAA,KAAK,EAAE,iBALS;AAMbC,QAAAA,SAAS,EAAE,WANE;AAObC,QAAAA,YAAY,EAAE,OAPD;AAQbC,QAAAA,KAAK,EAAE,OARM;AASbC,QAAAA,MAAM,EAAE,WATK;AAUbC,QAAAA,KAAK,EAAE,MAVM;AAWbC,QAAAA,SAAS,EAAE,QAXE;AAYbC,QAAAA,YAAY,EAAE;AAZD,OAAjB;;AAcA,UAAMC,KAAK,GAAGC,kBAAMC,WAAN,CAAkBjB,QAAlB,CAAd;;AACA,wBAAOe,KAAP,EAAcG,EAAd,CAAiBC,IAAjB,CAAsBC,QAAtB,CAA+B,WAA/B;AACA,wBAAOL,KAAP,EAAcG,EAAd,CAAiBC,IAAjB,CAAsBC,QAAtB,CAA+B,cAA/B,EAA+CC,EAA/C,CAAkDX,KAAlD;AACA,wBAAOK,KAAK,CAACT,QAAb,EAAuBY,EAAvB,CAA0BG,EAA1B,CAA6BvB,iBAAS,CAAT,EAAYC,KAAzC;AACA,wBAAOgB,KAAK,CAACV,QAAb,EAAuBa,EAAvB,CAA0BG,EAA1B,CAA6B1B,kBAAK,CAAL,EAAQC,EAArC;AACT,KAtBC,CAAF;AAwBA,GAzBO,CAAR;AA2BAJ,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAChCC,IAAAA,EAAE,CAAC,0BAAD,EAA6B,YAAM;AACpCuB,wBAAMM,MAAN,GAAepB,kBAAf;;AACS,UAAMqB,SAAS,GAAGP,kBAAMQ,YAAN,EAAlB;;AACA,wBAAOD,SAAP,EAAkBL,EAAlB,CAAqBO,EAArB,CAAwBC,EAAxB,CAA2B,OAA3B;AACA,wBAAOH,SAAS,CAAC,CAAD,CAAT,CAAa3B,EAApB,EAAwBsB,EAAxB,CAA2BG,EAA3B,CAA8BnB,mBAAU,CAAV,EAAaN,EAA3C;AACT,KALC,CAAF;AAMA,GAPO,CAAR;AAQAJ,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACpCC,IAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAM;AACzCuB,wBAAMM,MAAN,GAAepB,kBAAf;;AACA,UAAMyB,QAAQ,GAAGX,kBAAMY,UAAN,CAAiBhC,EAAjB,CAAjB;;AACA,wBAAOgC,UAAP,EAAmBV,EAAnB,CAAsBO,EAAtB,CAAyBC,EAAzB,CAA4B,QAA5B;AACA,wBAAOE,UAAU,CAAC,CAAD,CAAV,CAAchC,EAArB,EAAyBsB,EAAzB,CAA4BW,KAA5B,CAAkC3B,mBAAU,CAAV,EAAaN,EAA/C;AAED,KANC,CAAF;AAOA,GARO,CAAR;AASAJ,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAC3BC,IAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC5CS,yBAAU,CAAV,EAAaS,MAAb,GAAsB,SAAtB;AACAK,wBAAMM,MAAN,GAAepB,kBAAf;;AACA,UAAM4B,YAAY,GAAGd,kBAAMe,WAAN,CAAkB7B,mBAAU,CAAV,EAAaN,EAA/B,EAAmC,UAAnC,CAArB;;AACA,wBAAOkC,YAAY,CAACnB,MAApB,EAA4BO,EAA5B,CAA+BG,EAA/B,CAAkC,UAAlC;AACA,wBAAOS,YAAY,CAAClC,EAApB,EAAwBsB,EAAxB,CAA2BG,EAA3B,CAA8BW,UAAU,CAAC,CAAD,CAAV,CAAcpC,EAA5C;AACR,KANK,CAAF;AAOL,GARM,CAAR;AASCJ,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAC5BC,IAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAM;AAC9BuB,wBAAMM,MAAN,GAAepB,kBAAf;AAD8B,UAEtBC,MAFsB,GAEXD,kBAFW,CAEtBC,MAFsB;AAG9B,UAAMY,KAAK,GAAGb,mBAAU,CAAV,CAAd;;AAEAc,wBAAMiB,WAAN,CAAkBlB,KAAlB;;AACA,UAAMmB,GAAG,GAAGlB,kBAAMY,UAAN,CAAiBb,KAAK,CAACnB,EAAvB,CAAZ;;AACA,wBAAOsC,GAAP,EAAYhB,EAAZ,CAAeG,EAAf,CAAkBc,SAAlB;AACA,wBAAOH,UAAU,CAAC7B,MAAlB,EAA0Be,EAA1B,CAA6BG,EAA7B,CAAgClB,MAAM,GAAG,CAAzC;AACR,KATK,CAAF;AAUL,GAXO,CAAR;AAYD,CAlEO,CAAR",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "import {assert, expect} from 'chai';\r\nimport orderData from './mock_db/orders';\r\nimport Order from '../models/order';\r\nimport user from './mock_db/users';\r\nimport carsData from './mock_db/cars';\r\n\r\n\r\ndescribe('Test Order Endpoint', () => {\r\n\tdescribe('Create a car order', () => {\r\n\t\tit('should create a car purchase order', () => {\r\n\t\t\tconst buyerId =  user[2].id;\r\n\t\t\tconst ownerId =  carsData[0].owner;\r\n            const newOrder = {\r\n            \tid: parseInt(orderData.length + 1, 10),\r\n                car_id: 12354,\r\n                buyer_id: buyerId,\r\n                owner_id: ownerId,\r\n\t            email: 'jason@gmail.com',\r\n                createdOn: '5/15/2018',\r\n                manufacturer: 'Honda',\r\n                price: 4500000, \r\n                status: 'available',\r\n                state: 'used',\r\n                body_type: 'Saloon',\r\n                priceOffered: 3500000\r\n            };\r\n            const order = Order.createOrder(newOrder);\r\n            expect(order).to.have.property('createdOn');\r\n            expect(order).to.have.property('priceOffered').eq(price);\r\n            expect(order.owner_id).to.eq(carsData[0].owner);\r\n            expect(order.buyer_id).to.eq(user[2].id);\r\n\t\t});\r\n\r\n\t});\r\n\r\n\tdescribe('Get all orders', () => {\r\n\t\tit('should return all orders', () => {\r\n\t\t\tOrder.orders = orderData;\r\n            const allOrders = Order.getAllOrders();\r\n            expect(allOrders).to.be.an('Array');\r\n            expect(allOrders[0].id).to.eq(orderData[0].id);\r\n\t\t});\r\n\t});\r\n\tdescribe('Get a single order', () => {\r\n\t\tit('should return a specific order', () => {\r\n\t\t\t Order.orders = orderData;\r\n\t\t\t const getOrder = Order.getAnOrder(id);\r\n\t\t\t expect(getAnOrder).to.be.an('object');\r\n\t\t\t expect(getAnOrder[0].id).to.equal(orderData[0].id);\r\n\r\n\t\t});\r\n\t});\t\t\r\n\tdescribe('Update an order', () => {\r\n        it('should update the status of an order', () => {\r\n             orderData[0].status = 'pending';\r\n             Order.orders = orderData;\r\n             const updatedOrder = Order.updateOrder(orderData[0].id, 'accepted');\r\n             expect(updatedOrder.status).to.eq('accepted');\r\n             expect(updatedOrder.id).to.eq(ordersdata[0].id);\r\n    });\r\n  });\r\n  describe('Delete an order', () => {\r\n        it('should delete an order', () => {\r\n             Order.orders = orderData;\r\n             const { length } = orderData;\r\n             const order = orderData[0];\r\n\r\n             Order.deleteOrder(order);\r\n             const res = Order.getAnOrder(order.id);\r\n             expect(res).to.eq(undefined);\r\n             expect(ordersdata.length).to.eq(length - 1);\r\n    });\r\n  });\r\n});\t\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562032774284
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\\\\orders.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\orders.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\orders.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\orders.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
        "sourceFileName": "orders.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar order = [{\n  id: 1,\n  car_id: 12354,\n  buyer_id: 6,\n  owner_id: 14,\n  email: 'jason@gmail.com',\n  createdOn: '5/15/2018',\n  manufacturer: 'Honda',\n  price: 4500000,\n  status: 'available',\n  state: 'used',\n  body_type: 'Saloon',\n  priceOffered: 3500000\n}, {\n  id: 2,\n  car_id: 12354,\n  buyer_id: 9,\n  owner_id: 23,\n  email: 'philip@gmail.com',\n  createdOn: '5/15/2018',\n  manufacturer: 'Honda',\n  price: 4500000,\n  status: 'available',\n  state: 'used',\n  body_type: 'Saloon',\n  priceOffered: 4000000\n}, {\n  id: 3,\n  car_id: 12354,\n  buyer_id: 33,\n  owner_id: 8,\n  email: 'sammy@gmail.com',\n  createdOn: '5/15/2018',\n  manufacturer: 'Honda',\n  model: 'Accord',\n  price: 4500000,\n  status: 'available',\n  state: 'new',\n  body_type: 'Saloon',\n  priceOffered: 3500000\n}, {\n  id: 4,\n  car_id: 12354,\n  buyer_id: 10,\n  owner_id: 4,\n  email: 'jackson@gmail.com',\n  createdOn: '5/15/2018',\n  manufacturer: 'Honda',\n  model: 'Civic',\n  price: 5500000,\n  status: 'available',\n  state: 'used',\n  body_type: 'Sedan',\n  priceOffered: 3000000\n}];\nvar _default = order;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVycy5qcyJdLCJuYW1lcyI6WyJvcmRlciIsImlkIiwiY2FyX2lkIiwiYnV5ZXJfaWQiLCJvd25lcl9pZCIsImVtYWlsIiwiY3JlYXRlZE9uIiwibWFudWZhY3R1cmVyIiwicHJpY2UiLCJzdGF0dXMiLCJzdGF0ZSIsImJvZHlfdHlwZSIsInByaWNlT2ZmZXJlZCIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxLQUFLLEdBQUcsQ0FDYjtBQUNBQyxFQUFBQSxFQUFFLEVBQUUsQ0FESjtBQUVHQyxFQUFBQSxNQUFNLEVBQUUsS0FGWDtBQUdHQyxFQUFBQSxRQUFRLEVBQUUsQ0FIYjtBQUlHQyxFQUFBQSxRQUFRLEVBQUUsRUFKYjtBQUtHQyxFQUFBQSxLQUFLLEVBQUUsaUJBTFY7QUFNR0MsRUFBQUEsU0FBUyxFQUFFLFdBTmQ7QUFPR0MsRUFBQUEsWUFBWSxFQUFFLE9BUGpCO0FBUUdDLEVBQUFBLEtBQUssRUFBRSxPQVJWO0FBU0dDLEVBQUFBLE1BQU0sRUFBRSxXQVRYO0FBVUdDLEVBQUFBLEtBQUssRUFBRSxNQVZWO0FBV0dDLEVBQUFBLFNBQVMsRUFBRSxRQVhkO0FBWUdDLEVBQUFBLFlBQVksRUFBRTtBQVpqQixDQURhLEVBZ0JiO0FBQ0FYLEVBQUFBLEVBQUUsRUFBRSxDQURKO0FBRUdDLEVBQUFBLE1BQU0sRUFBRSxLQUZYO0FBR0dDLEVBQUFBLFFBQVEsRUFBRSxDQUhiO0FBSUdDLEVBQUFBLFFBQVEsRUFBRSxFQUpiO0FBS0FDLEVBQUFBLEtBQUssRUFBRSxrQkFMUDtBQU1HQyxFQUFBQSxTQUFTLEVBQUUsV0FOZDtBQU9HQyxFQUFBQSxZQUFZLEVBQUUsT0FQakI7QUFRR0MsRUFBQUEsS0FBSyxFQUFFLE9BUlY7QUFTR0MsRUFBQUEsTUFBTSxFQUFFLFdBVFg7QUFVR0MsRUFBQUEsS0FBSyxFQUFFLE1BVlY7QUFXR0MsRUFBQUEsU0FBUyxFQUFFLFFBWGQ7QUFZQUMsRUFBQUEsWUFBWSxFQUFFO0FBWmQsQ0FoQmEsRUErQmI7QUFDQVgsRUFBQUEsRUFBRSxFQUFFLENBREo7QUFFR0MsRUFBQUEsTUFBTSxFQUFFLEtBRlg7QUFHR0MsRUFBQUEsUUFBUSxFQUFFLEVBSGI7QUFJR0MsRUFBQUEsUUFBUSxFQUFFLENBSmI7QUFLQUMsRUFBQUEsS0FBSyxFQUFFLGlCQUxQO0FBTUdDLEVBQUFBLFNBQVMsRUFBRSxXQU5kO0FBT0dDLEVBQUFBLFlBQVksRUFBRSxPQVBqQjtBQVFHTSxFQUFBQSxLQUFLLEVBQUUsUUFSVjtBQVNHTCxFQUFBQSxLQUFLLEVBQUUsT0FUVjtBQVVHQyxFQUFBQSxNQUFNLEVBQUUsV0FWWDtBQVdHQyxFQUFBQSxLQUFLLEVBQUUsS0FYVjtBQVlHQyxFQUFBQSxTQUFTLEVBQUUsUUFaZDtBQWFHQyxFQUFBQSxZQUFZLEVBQUU7QUFiakIsQ0EvQmEsRUErQ2I7QUFDQVgsRUFBQUEsRUFBRSxFQUFFLENBREo7QUFFR0MsRUFBQUEsTUFBTSxFQUFFLEtBRlg7QUFHR0MsRUFBQUEsUUFBUSxFQUFFLEVBSGI7QUFJR0MsRUFBQUEsUUFBUSxFQUFFLENBSmI7QUFLR0MsRUFBQUEsS0FBSyxFQUFFLG1CQUxWO0FBTUdDLEVBQUFBLFNBQVMsRUFBRSxXQU5kO0FBT0dDLEVBQUFBLFlBQVksRUFBRSxPQVBqQjtBQVFHTSxFQUFBQSxLQUFLLEVBQUUsT0FSVjtBQVNHTCxFQUFBQSxLQUFLLEVBQUUsT0FUVjtBQVVHQyxFQUFBQSxNQUFNLEVBQUUsV0FWWDtBQVdHQyxFQUFBQSxLQUFLLEVBQUUsTUFYVjtBQVlHQyxFQUFBQSxTQUFTLEVBQUUsT0FaZDtBQWFBQyxFQUFBQSxZQUFZLEVBQUU7QUFiZCxDQS9DYSxDQUFkO2VBZ0VlWixLIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0XFxzZXJ2ZXJcXHRlc3RcXG1vY2tfZGIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBvcmRlciA9IFtcclxuXHR7XHJcblx0aWQ6IDEsXHJcbiAgICBjYXJfaWQ6IDEyMzU0LFxyXG4gICAgYnV5ZXJfaWQ6IDYsXHJcbiAgICBvd25lcl9pZDogMTQsXHJcbiAgICBlbWFpbDogJ2phc29uQGdtYWlsLmNvbScsXHJcbiAgICBjcmVhdGVkT246ICc1LzE1LzIwMTgnLFxyXG4gICAgbWFudWZhY3R1cmVyOiAnSG9uZGEnLFxyXG4gICAgcHJpY2U6IDQ1MDAwMDAsIFxyXG4gICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcclxuICAgIHN0YXRlOiAndXNlZCcsXHJcbiAgICBib2R5X3R5cGU6ICdTYWxvb24nLFxyXG4gICAgcHJpY2VPZmZlcmVkOiAzNTAwMDAwXHJcblx0fSxcclxuXHJcblx0e1xyXG5cdGlkOiAyLFxyXG4gICAgY2FyX2lkOiAxMjM1NCxcclxuICAgIGJ1eWVyX2lkOiA5LFxyXG4gICAgb3duZXJfaWQ6IDIzLFxyXG5cdGVtYWlsOiAncGhpbGlwQGdtYWlsLmNvbScsXHJcbiAgICBjcmVhdGVkT246ICc1LzE1LzIwMTgnLFxyXG4gICAgbWFudWZhY3R1cmVyOiAnSG9uZGEnLFxyXG4gICAgcHJpY2U6IDQ1MDAwMDAsIFxyXG4gICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcclxuICAgIHN0YXRlOiAndXNlZCcsXHJcbiAgICBib2R5X3R5cGU6ICdTYWxvb24nLFxyXG5cdHByaWNlT2ZmZXJlZDogNDAwMDAwMFxyXG5cdH0sXHJcblxyXG5cdHtcclxuXHRpZDogMyxcclxuICAgIGNhcl9pZDogMTIzNTQsXHJcbiAgICBidXllcl9pZDogMzMsXHJcbiAgICBvd25lcl9pZDogOCxcclxuXHRlbWFpbDogJ3NhbW15QGdtYWlsLmNvbScsXHJcbiAgICBjcmVhdGVkT246ICc1LzE1LzIwMTgnLFxyXG4gICAgbWFudWZhY3R1cmVyOiAnSG9uZGEnLFxyXG4gICAgbW9kZWw6ICdBY2NvcmQnLFxyXG4gICAgcHJpY2U6IDQ1MDAwMDAsIFxyXG4gICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcclxuICAgIHN0YXRlOiAnbmV3JyxcclxuICAgIGJvZHlfdHlwZTogJ1NhbG9vbicsXHJcbiAgICBwcmljZU9mZmVyZWQ6IDM1MDAwMDBcclxuXHR9LFxyXG5cclxuXHR7XHJcblx0aWQ6IDQsXHJcbiAgICBjYXJfaWQ6IDEyMzU0LFxyXG4gICAgYnV5ZXJfaWQ6IDEwLFxyXG4gICAgb3duZXJfaWQ6IDQsXHJcbiAgICBlbWFpbDogJ2phY2tzb25AZ21haWwuY29tJyxcclxuICAgIGNyZWF0ZWRPbjogJzUvMTUvMjAxOCcsXHJcbiAgICBtYW51ZmFjdHVyZXI6ICdIb25kYScsXHJcbiAgICBtb2RlbDogJ0NpdmljJyxcclxuICAgIHByaWNlOiA1NTAwMDAwLCBcclxuICAgIHN0YXR1czogJ2F2YWlsYWJsZScsXHJcbiAgICBzdGF0ZTogJ3VzZWQnLFxyXG4gICAgYm9keV90eXBlOiAnU2VkYW4nLFxyXG5cdHByaWNlT2ZmZXJlZDogMzAwMDAwMFxyXG5cdH1cclxuXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG9yZGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "orders.js"
      ],
      "names": [
        "order",
        "id",
        "car_id",
        "buyer_id",
        "owner_id",
        "email",
        "createdOn",
        "manufacturer",
        "price",
        "status",
        "state",
        "body_type",
        "priceOffered",
        "model"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,KAAK,GAAG,CACb;AACAC,EAAAA,EAAE,EAAE,CADJ;AAEGC,EAAAA,MAAM,EAAE,KAFX;AAGGC,EAAAA,QAAQ,EAAE,CAHb;AAIGC,EAAAA,QAAQ,EAAE,EAJb;AAKGC,EAAAA,KAAK,EAAE,iBALV;AAMGC,EAAAA,SAAS,EAAE,WANd;AAOGC,EAAAA,YAAY,EAAE,OAPjB;AAQGC,EAAAA,KAAK,EAAE,OARV;AASGC,EAAAA,MAAM,EAAE,WATX;AAUGC,EAAAA,KAAK,EAAE,MAVV;AAWGC,EAAAA,SAAS,EAAE,QAXd;AAYGC,EAAAA,YAAY,EAAE;AAZjB,CADa,EAgBb;AACAX,EAAAA,EAAE,EAAE,CADJ;AAEGC,EAAAA,MAAM,EAAE,KAFX;AAGGC,EAAAA,QAAQ,EAAE,CAHb;AAIGC,EAAAA,QAAQ,EAAE,EAJb;AAKAC,EAAAA,KAAK,EAAE,kBALP;AAMGC,EAAAA,SAAS,EAAE,WANd;AAOGC,EAAAA,YAAY,EAAE,OAPjB;AAQGC,EAAAA,KAAK,EAAE,OARV;AASGC,EAAAA,MAAM,EAAE,WATX;AAUGC,EAAAA,KAAK,EAAE,MAVV;AAWGC,EAAAA,SAAS,EAAE,QAXd;AAYAC,EAAAA,YAAY,EAAE;AAZd,CAhBa,EA+Bb;AACAX,EAAAA,EAAE,EAAE,CADJ;AAEGC,EAAAA,MAAM,EAAE,KAFX;AAGGC,EAAAA,QAAQ,EAAE,EAHb;AAIGC,EAAAA,QAAQ,EAAE,CAJb;AAKAC,EAAAA,KAAK,EAAE,iBALP;AAMGC,EAAAA,SAAS,EAAE,WANd;AAOGC,EAAAA,YAAY,EAAE,OAPjB;AAQGM,EAAAA,KAAK,EAAE,QARV;AASGL,EAAAA,KAAK,EAAE,OATV;AAUGC,EAAAA,MAAM,EAAE,WAVX;AAWGC,EAAAA,KAAK,EAAE,KAXV;AAYGC,EAAAA,SAAS,EAAE,QAZd;AAaGC,EAAAA,YAAY,EAAE;AAbjB,CA/Ba,EA+Cb;AACAX,EAAAA,EAAE,EAAE,CADJ;AAEGC,EAAAA,MAAM,EAAE,KAFX;AAGGC,EAAAA,QAAQ,EAAE,EAHb;AAIGC,EAAAA,QAAQ,EAAE,CAJb;AAKGC,EAAAA,KAAK,EAAE,mBALV;AAMGC,EAAAA,SAAS,EAAE,WANd;AAOGC,EAAAA,YAAY,EAAE,OAPjB;AAQGM,EAAAA,KAAK,EAAE,OARV;AASGL,EAAAA,KAAK,EAAE,OATV;AAUGC,EAAAA,MAAM,EAAE,WAVX;AAWGC,EAAAA,KAAK,EAAE,MAXV;AAYGC,EAAAA,SAAS,EAAE,OAZd;AAaAC,EAAAA,YAAY,EAAE;AAbd,CA/Ca,CAAd;eAgEeZ,K",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "sourcesContent": [
        "const order = [\r\n\t{\r\n\tid: 1,\r\n    car_id: 12354,\r\n    buyer_id: 6,\r\n    owner_id: 14,\r\n    email: 'jason@gmail.com',\r\n    createdOn: '5/15/2018',\r\n    manufacturer: 'Honda',\r\n    price: 4500000, \r\n    status: 'available',\r\n    state: 'used',\r\n    body_type: 'Saloon',\r\n    priceOffered: 3500000\r\n\t},\r\n\r\n\t{\r\n\tid: 2,\r\n    car_id: 12354,\r\n    buyer_id: 9,\r\n    owner_id: 23,\r\n\temail: 'philip@gmail.com',\r\n    createdOn: '5/15/2018',\r\n    manufacturer: 'Honda',\r\n    price: 4500000, \r\n    status: 'available',\r\n    state: 'used',\r\n    body_type: 'Saloon',\r\n\tpriceOffered: 4000000\r\n\t},\r\n\r\n\t{\r\n\tid: 3,\r\n    car_id: 12354,\r\n    buyer_id: 33,\r\n    owner_id: 8,\r\n\temail: 'sammy@gmail.com',\r\n    createdOn: '5/15/2018',\r\n    manufacturer: 'Honda',\r\n    model: 'Accord',\r\n    price: 4500000, \r\n    status: 'available',\r\n    state: 'new',\r\n    body_type: 'Saloon',\r\n    priceOffered: 3500000\r\n\t},\r\n\r\n\t{\r\n\tid: 4,\r\n    car_id: 12354,\r\n    buyer_id: 10,\r\n    owner_id: 4,\r\n    email: 'jackson@gmail.com',\r\n    createdOn: '5/15/2018',\r\n    manufacturer: 'Honda',\r\n    model: 'Civic',\r\n    price: 5500000, \r\n    status: 'available',\r\n    state: 'used',\r\n    body_type: 'Sedan',\r\n\tpriceOffered: 3000000\r\n\t}\r\n];\r\n\r\nexport default order;"
      ]
    },
    "sourceType": "script",
    "mtime": 1562032565480
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\\\\order.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\order.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\order.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\order.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
        "sourceFileName": "order.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEVyaWMgSWJ1XFxkZXNrdG9wXFxhdXRvbWFydFxcc2VydmVyXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6W119",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1562032568422
  }
}