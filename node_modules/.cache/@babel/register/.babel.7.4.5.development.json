{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\login-test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login-test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login-test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login-test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
        "sourceFileName": "login-test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireWildcard(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n(0, _chai.use)(_chaiHttp[\"default\"]); //const API_PREFIX = '/api/v1';\n\ndescribe('user can login', function (done) {\n  it('should get username and password then return successful', function (done) {\n    loggedInUser.request(_app[\"default\"]).post('app/v1/auth/login').set({\n      'Content-Type': 'application/json'\n    }).send({\n      username: 'martini',\n      password: 'xxxfff546tg'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body.status).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n\n      _chai.assert.strictEqual(res.body, 200, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.statusCode, 200, 'should return 200 status code');\n\n      _chai.assert.isString(res.body.data.username, 'username should be a string');\n\n      _chai.assert.isNotNull(res.body.data, 'password should not be null');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('should return error message if username and password is incorrect', function (done) {\n    loggedInUser.request(_app[\"default\"]).post('app/v1/auth/login').set({\n      'Content-Type': 'application/json'\n    }).send({\n      username: 'martini',\n      password: 'xxxfff546tg'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.equal('username or password is incorrect');\n\n      _chai.assert.strictEqual(res.body, 400, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.body.error, incorrect, 'unexpected error', 'should return error');\n\n      _chai.assert.isNotObject(res.body.data, 'expected an object');\n\n      _chai.assert.isNull(res.body.data, 'username or password should not be null');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLXRlc3QuanMiXSwibmFtZXMiOlsiY2hhaUhUVFAiLCJkZXNjcmliZSIsImRvbmUiLCJpdCIsImxvZ2dlZEluVXNlciIsInJlcXVlc3QiLCJhcHAiLCJwb3N0Iiwic2V0Iiwic2VuZCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJlbmQiLCJlcnIiLCJyZXMiLCJzdGF0dXNDb2RlIiwidG8iLCJlcXVhbCIsImJvZHkiLCJzdGF0dXMiLCJiZSIsImFuIiwiYXNzZXJ0Iiwic3RyaWN0RXF1YWwiLCJpc1N0cmluZyIsImRhdGEiLCJpc05vdE51bGwiLCJlcnJvciIsImluY29ycmVjdCIsImlzTm90T2JqZWN0IiwiaXNOdWxsIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUdBOztBQUNBOzs7Ozs7QUFHQSxlQUFJQSxvQkFBSixFLENBRUE7O0FBRUFDLFFBQVEsQ0FBQyxnQkFBRCxFQUFtQixVQUFDQyxJQUFELEVBQVU7QUFDbkNDLEVBQUFBLEVBQUUsQ0FBQyx5REFBRCxFQUE0RCxVQUFDRCxJQUFELEVBQVU7QUFDdEVFLElBQUFBLFlBQVksQ0FBQ0MsT0FBYixDQUFxQkMsZUFBckIsRUFDR0MsSUFESCxDQUNRLG1CQURSLEVBRUdDLEdBRkgsQ0FFTztBQUNILHNCQUFnQjtBQURiLEtBRlAsRUFLR0MsSUFMSCxDQUtRO0FBQ0pDLE1BQUFBLFFBQVEsRUFBRSxTQUROO0FBRUpDLE1BQUFBLFFBQVEsRUFBRTtBQUZOLEtBTFIsRUFTR0MsR0FUSCxDQVNPLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pCLHdCQUFPQSxHQUFHLENBQUNDLFVBQVgsRUFBdUJDLEVBQXZCLENBQTBCQyxLQUExQixDQUFnQyxHQUFoQztBQUNBLHdCQUFPSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsTUFBaEIsRUFBd0JILEVBQXhCLENBQTJCQyxLQUEzQixDQUFpQyxHQUFqQztBQUNBLHdCQUFPSCxHQUFHLENBQUNJLElBQVgsRUFBaUJGLEVBQWpCLENBQW9CSSxFQUFwQixDQUF1QkMsRUFBdkIsQ0FBMEIsUUFBMUI7O0FBQ0FDLG1CQUFPQyxXQUFQLENBQW1CVCxHQUFHLENBQUNJLElBQXZCLEVBQTZCLEdBQTdCLEVBQWtDLCtCQUFsQzs7QUFDQUksbUJBQU9DLFdBQVAsQ0FBbUJULEdBQUcsQ0FBQ0MsVUFBdkIsRUFBbUMsR0FBbkMsRUFBd0MsK0JBQXhDOztBQUNBTyxtQkFBT0UsUUFBUCxDQUFnQlYsR0FBRyxDQUFDSSxJQUFKLENBQVNPLElBQVQsQ0FBY2YsUUFBOUIsRUFBd0MsNkJBQXhDOztBQUNBWSxtQkFBT0ksU0FBUCxDQUFpQlosR0FBRyxDQUFDSSxJQUFKLENBQVNPLElBQTFCLEVBQWdDLDZCQUFoQzs7QUFDQUgsbUJBQU9JLFNBQVAsQ0FBaUJiLEdBQWpCLEVBQXNCLGtCQUF0Qjs7QUFDQVgsTUFBQUEsSUFBSTtBQUNMLEtBbkJIO0FBb0JELEdBckJDLENBQUY7QUF1QkFDLEVBQUFBLEVBQUUsQ0FBQyxtRUFBRCxFQUFzRSxVQUFDRCxJQUFELEVBQVU7QUFDaEZFLElBQUFBLFlBQVksQ0FBQ0MsT0FBYixDQUFxQkMsZUFBckIsRUFDR0MsSUFESCxDQUNRLG1CQURSLEVBRUdDLEdBRkgsQ0FFTztBQUNILHNCQUFnQjtBQURiLEtBRlAsRUFLR0MsSUFMSCxDQUtRO0FBQ0pDLE1BQUFBLFFBQVEsRUFBRSxTQUROO0FBRUpDLE1BQUFBLFFBQVEsRUFBRTtBQUZOLEtBTFIsRUFTR0MsR0FUSCxDQVNPLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pCLHdCQUFPQSxHQUFHLENBQUNDLFVBQVgsRUFBdUJDLEVBQXZCLENBQTBCQyxLQUExQixDQUFnQyxHQUFoQztBQUNBLHdCQUFPSCxHQUFHLENBQUNJLElBQUosQ0FBU0MsTUFBaEIsRUFBd0JILEVBQXhCLENBQTJCQyxLQUEzQixDQUFpQyxHQUFqQztBQUNBLHdCQUFPSCxHQUFHLENBQUNJLElBQVgsRUFBaUJGLEVBQWpCLENBQW9CSSxFQUFwQixDQUF1QkMsRUFBdkIsQ0FBMEIsUUFBMUI7QUFDQSx3QkFBT1AsR0FBRyxDQUFDSSxJQUFKLENBQVNTLEtBQWhCLEVBQXVCWCxFQUF2QixDQUEwQkMsS0FBMUIsQ0FBZ0MsbUNBQWhDOztBQUNBSyxtQkFBT0MsV0FBUCxDQUFtQlQsR0FBRyxDQUFDSSxJQUF2QixFQUE2QixHQUE3QixFQUFrQywrQkFBbEM7O0FBQ0FJLG1CQUFPQyxXQUFQLENBQW1CVCxHQUFHLENBQUNDLFVBQXZCLEVBQW1DLEdBQW5DLEVBQXdDLCtCQUF4Qzs7QUFDQU8sbUJBQU9DLFdBQVAsQ0FBbUJULEdBQUcsQ0FBQ0ksSUFBSixDQUFTUyxLQUE1QixFQUFtQ0MsU0FBbkMsRUFBOEMsa0JBQTlDLEVBQWtFLHFCQUFsRTs7QUFDQU4sbUJBQU9PLFdBQVAsQ0FBbUJmLEdBQUcsQ0FBQ0ksSUFBSixDQUFTTyxJQUE1QixFQUFrQyxvQkFBbEM7O0FBQ0FILG1CQUFPUSxNQUFQLENBQWNoQixHQUFHLENBQUNJLElBQUosQ0FBU08sSUFBdkIsRUFBNkIseUNBQTdCOztBQUNBSCxtQkFBT0ksU0FBUCxDQUFpQmIsR0FBakIsRUFBc0Isa0JBQXRCOztBQUNBWCxNQUFBQSxJQUFJO0FBQ0wsS0FyQkg7QUFzQkQsR0F2QkMsQ0FBRjtBQXdCRCxDQWhETyxDQUFSIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0LmdpdGh1Yi5pby1naC1wYWdlc1xcYXBpXFxzZXJ2ZXJcXHRlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSwge1xuICB1c2UsIGV4cGVjdCwgYXNzZXJ0LFxufSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpSFRUUCBmcm9tICdjaGFpLWh0dHAnO1xuaW1wb3J0IGFwcCBmcm9tICcuLi9hcHAnO1xuXG5cbnVzZShjaGFpSFRUUCk7XG5cbi8vY29uc3QgQVBJX1BSRUZJWCA9ICcvYXBpL3YxJztcblxuZGVzY3JpYmUoJ3VzZXIgY2FuIGxvZ2luJywgKGRvbmUpID0+IHtcbiAgaXQoJ3Nob3VsZCBnZXQgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIHRoZW4gcmV0dXJuIHN1Y2Nlc3NmdWwnLCAoZG9uZSkgPT4ge1xuICAgIGxvZ2dlZEluVXNlci5yZXF1ZXN0KGFwcClcbiAgICAgIC5wb3N0KCdhcHAvdjEvYXV0aC9sb2dpbicpXG4gICAgICAuc2V0KHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIFx0fSlcbiAgICAgIC5zZW5kKHtcbiAgICAgICAgdXNlcm5hbWU6ICdtYXJ0aW5pJyxcbiAgICAgICAgcGFzc3dvcmQ6ICd4eHhmZmY1NDZ0ZycsXG4gICAgICB9KVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgZXhwZWN0KHJlcy5zdGF0dXNDb2RlKS50by5lcXVhbCgyMDApO1xuICAgICAgICBleHBlY3QocmVzLmJvZHkuc3RhdHVzKS50by5lcXVhbCgyMDApO1xuICAgICAgICBleHBlY3QocmVzLmJvZHkpLnRvLmJlLmFuKCdvYmplY3QnKTtcbiAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJlcy5ib2R5LCAyMDAsICdzaG91bGQgcmV0dXJuIDIwMCBzdGF0dXMgY29kZScpO1xuICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocmVzLnN0YXR1c0NvZGUsIDIwMCwgJ3Nob3VsZCByZXR1cm4gMjAwIHN0YXR1cyBjb2RlJyk7XG4gICAgICAgIGFzc2VydC5pc1N0cmluZyhyZXMuYm9keS5kYXRhLnVzZXJuYW1lLCAndXNlcm5hbWUgc2hvdWxkIGJlIGEgc3RyaW5nJyk7XG4gICAgICAgIGFzc2VydC5pc05vdE51bGwocmVzLmJvZHkuZGF0YSwgJ3Bhc3N3b3JkIHNob3VsZCBub3QgYmUgbnVsbCcpO1xuICAgICAgICBhc3NlcnQuaXNOb3ROdWxsKGVyciwgJ3VuZXhwZWN0ZWQgZXJyb3InKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmV0dXJuIGVycm9yIG1lc3NhZ2UgaWYgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIGlzIGluY29ycmVjdCcsIChkb25lKSA9PiB7XG4gICAgbG9nZ2VkSW5Vc2VyLnJlcXVlc3QoYXBwKVxuICAgICAgLnBvc3QoJ2FwcC92MS9hdXRoL2xvZ2luJylcbiAgICAgIC5zZXQoe1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSlcbiAgICAgIC5zZW5kKHtcbiAgICAgICAgdXNlcm5hbWU6ICdtYXJ0aW5pJyxcbiAgICAgICAgcGFzc3dvcmQ6ICd4eHhmZmY1NDZ0ZycsXG4gICAgICB9KVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgZXhwZWN0KHJlcy5zdGF0dXNDb2RlKS50by5lcXVhbCg0MDApO1xuICAgICAgICBleHBlY3QocmVzLmJvZHkuc3RhdHVzKS50by5lcXVhbCg0MDApO1xuICAgICAgICBleHBlY3QocmVzLmJvZHkpLnRvLmJlLmFuKCdvYmplY3QnKTtcbiAgICAgICAgZXhwZWN0KHJlcy5ib2R5LmVycm9yKS50by5lcXVhbCgndXNlcm5hbWUgb3IgcGFzc3dvcmQgaXMgaW5jb3JyZWN0Jyk7XG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXMuYm9keSwgNDAwLCAnc2hvdWxkIHJldHVybiAyMDAgc3RhdHVzIGNvZGUnKTtcbiAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJlcy5zdGF0dXNDb2RlLCA0MDAsICdzaG91bGQgcmV0dXJuIDIwMCBzdGF0dXMgY29kZScpO1xuICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocmVzLmJvZHkuZXJyb3IsIGluY29ycmVjdCwgJ3VuZXhwZWN0ZWQgZXJyb3InLCAnc2hvdWxkIHJldHVybiBlcnJvcicpO1xuICAgICAgICBhc3NlcnQuaXNOb3RPYmplY3QocmVzLmJvZHkuZGF0YSwgJ2V4cGVjdGVkIGFuIG9iamVjdCcpO1xuICAgICAgICBhc3NlcnQuaXNOdWxsKHJlcy5ib2R5LmRhdGEsICd1c2VybmFtZSBvciBwYXNzd29yZCBzaG91bGQgbm90IGJlIG51bGwnKTtcbiAgICAgICAgYXNzZXJ0LmlzTm90TnVsbChlcnIsICd1bmV4cGVjdGVkIGVycm9yJyk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "login-test.js"
      ],
      "names": [
        "chaiHTTP",
        "describe",
        "done",
        "it",
        "loggedInUser",
        "request",
        "app",
        "post",
        "set",
        "send",
        "username",
        "password",
        "end",
        "err",
        "res",
        "statusCode",
        "to",
        "equal",
        "body",
        "status",
        "be",
        "an",
        "assert",
        "strictEqual",
        "isString",
        "data",
        "isNotNull",
        "error",
        "incorrect",
        "isNotObject",
        "isNull"
      ],
      "mappings": ";;AAAA;;AAGA;;AACA;;;;;;AAGA,eAAIA,oBAAJ,E,CAEA;;AAEAC,QAAQ,CAAC,gBAAD,EAAmB,UAACC,IAAD,EAAU;AACnCC,EAAAA,EAAE,CAAC,yDAAD,EAA4D,UAACD,IAAD,EAAU;AACtEE,IAAAA,YAAY,CAACC,OAAb,CAAqBC,eAArB,EACGC,IADH,CACQ,mBADR,EAEGC,GAFH,CAEO;AACH,sBAAgB;AADb,KAFP,EAKGC,IALH,CAKQ;AACJC,MAAAA,QAAQ,EAAE,SADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KALR,EASGC,GATH,CASO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,wBAAOA,GAAG,CAACC,UAAX,EAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,GAAhC;AACA,wBAAOH,GAAG,CAACI,IAAJ,CAASC,MAAhB,EAAwBH,EAAxB,CAA2BC,KAA3B,CAAiC,GAAjC;AACA,wBAAOH,GAAG,CAACI,IAAX,EAAiBF,EAAjB,CAAoBI,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;;AACAC,mBAAOC,WAAP,CAAmBT,GAAG,CAACI,IAAvB,EAA6B,GAA7B,EAAkC,+BAAlC;;AACAI,mBAAOC,WAAP,CAAmBT,GAAG,CAACC,UAAvB,EAAmC,GAAnC,EAAwC,+BAAxC;;AACAO,mBAAOE,QAAP,CAAgBV,GAAG,CAACI,IAAJ,CAASO,IAAT,CAAcf,QAA9B,EAAwC,6BAAxC;;AACAY,mBAAOI,SAAP,CAAiBZ,GAAG,CAACI,IAAJ,CAASO,IAA1B,EAAgC,6BAAhC;;AACAH,mBAAOI,SAAP,CAAiBb,GAAjB,EAAsB,kBAAtB;;AACAX,MAAAA,IAAI;AACL,KAnBH;AAoBD,GArBC,CAAF;AAuBAC,EAAAA,EAAE,CAAC,mEAAD,EAAsE,UAACD,IAAD,EAAU;AAChFE,IAAAA,YAAY,CAACC,OAAb,CAAqBC,eAArB,EACGC,IADH,CACQ,mBADR,EAEGC,GAFH,CAEO;AACH,sBAAgB;AADb,KAFP,EAKGC,IALH,CAKQ;AACJC,MAAAA,QAAQ,EAAE,SADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KALR,EASGC,GATH,CASO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,wBAAOA,GAAG,CAACC,UAAX,EAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,GAAhC;AACA,wBAAOH,GAAG,CAACI,IAAJ,CAASC,MAAhB,EAAwBH,EAAxB,CAA2BC,KAA3B,CAAiC,GAAjC;AACA,wBAAOH,GAAG,CAACI,IAAX,EAAiBF,EAAjB,CAAoBI,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACA,wBAAOP,GAAG,CAACI,IAAJ,CAASS,KAAhB,EAAuBX,EAAvB,CAA0BC,KAA1B,CAAgC,mCAAhC;;AACAK,mBAAOC,WAAP,CAAmBT,GAAG,CAACI,IAAvB,EAA6B,GAA7B,EAAkC,+BAAlC;;AACAI,mBAAOC,WAAP,CAAmBT,GAAG,CAACC,UAAvB,EAAmC,GAAnC,EAAwC,+BAAxC;;AACAO,mBAAOC,WAAP,CAAmBT,GAAG,CAACI,IAAJ,CAASS,KAA5B,EAAmCC,SAAnC,EAA8C,kBAA9C,EAAkE,qBAAlE;;AACAN,mBAAOO,WAAP,CAAmBf,GAAG,CAACI,IAAJ,CAASO,IAA5B,EAAkC,oBAAlC;;AACAH,mBAAOQ,MAAP,CAAchB,GAAG,CAACI,IAAJ,CAASO,IAAvB,EAA6B,yCAA7B;;AACAH,mBAAOI,SAAP,CAAiBb,GAAjB,EAAsB,kBAAtB;;AACAX,MAAAA,IAAI;AACL,KArBH;AAsBD,GAvBC,CAAF;AAwBD,CAhDO,CAAR",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
      "sourcesContent": [
        "import chai, {\n  use, expect, assert,\n} from 'chai';\nimport chaiHTTP from 'chai-http';\nimport app from '../app';\n\n\nuse(chaiHTTP);\n\n//const API_PREFIX = '/api/v1';\n\ndescribe('user can login', (done) => {\n  it('should get username and password then return successful', (done) => {\n    loggedInUser.request(app)\n      .post('app/v1/auth/login')\n      .set({\n        'Content-Type': 'application/json',\n      \t})\n      .send({\n        username: 'martini',\n        password: 'xxxfff546tg',\n      })\n      .end((err, res) => {\n        expect(res.statusCode).to.equal(200);\n        expect(res.body.status).to.equal(200);\n        expect(res.body).to.be.an('object');\n        assert.strictEqual(res.body, 200, 'should return 200 status code');\n        assert.strictEqual(res.statusCode, 200, 'should return 200 status code');\n        assert.isString(res.body.data.username, 'username should be a string');\n        assert.isNotNull(res.body.data, 'password should not be null');\n        assert.isNotNull(err, 'unexpected error');\n        done();\n      });\n  });\n\n  it('should return error message if username and password is incorrect', (done) => {\n    loggedInUser.request(app)\n      .post('app/v1/auth/login')\n      .set({\n        'Content-Type': 'application/json',\n      })\n      .send({\n        username: 'martini',\n        password: 'xxxfff546tg',\n      })\n      .end((err, res) => {\n        expect(res.statusCode).to.equal(400);\n        expect(res.body.status).to.equal(400);\n        expect(res.body).to.be.an('object');\n        expect(res.body.error).to.equal('username or password is incorrect');\n        assert.strictEqual(res.body, 400, 'should return 200 status code');\n        assert.strictEqual(res.statusCode, 400, 'should return 200 status code');\n        assert.strictEqual(res.body.error, incorrect, 'unexpected error', 'should return error');\n        assert.isNotObject(res.body.data, 'expected an object');\n        assert.isNull(res.body.data, 'username or password should not be null');\n        assert.isNotNull(err, 'unexpected error');\n        done();\n      });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560019258374
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = app;\nexports[\"default\"] = _default;\n\nvar logger = require('morgan');\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser'); // import config from 'config';\n\n\nvar app = express();\nvar port = parseInt(process.env.PORT, 10) || 5000;\napp.use(logger('dev'));\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\napp.get('/api/v1', function (req, res) {\n  console.log(res.status(200).send({\n    Success: 'connected successfully',\n    Message: 'welcome to Automart app.'\n  }));\n});\napp.listen(port, function () {\n  return console.log(\"Automart server is running on port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJsb2dnZXIiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJwb3J0IiwicGFyc2VJbnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwic2VuZCIsIlN1Y2Nlc3MiLCJNZXNzYWdlIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQzs7Ozs7O2VBRWNBLEc7OztBQUVmLElBQU1DLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTFCLEMsQ0FDQTs7O0FBRUEsSUFBTUYsR0FBRyxHQUFHRyxPQUFPLEVBQW5CO0FBRUEsSUFBTUUsSUFBSSxHQUFHQyxRQUFRLENBQUNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFiLEVBQW1CLEVBQW5CLENBQVIsSUFBa0MsSUFBL0M7QUFDQVQsR0FBRyxDQUFDVSxHQUFKLENBQVFULE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFFQUQsR0FBRyxDQUFDVSxHQUFKLENBQVFOLFVBQVUsQ0FBQ08sVUFBWCxDQUFzQjtBQUM1QkMsRUFBQUEsUUFBUSxFQUFFO0FBRGtCLENBQXRCLENBQVI7QUFJQVosR0FBRyxDQUFDVSxHQUFKLENBQVFOLFVBQVUsQ0FBQ1MsSUFBWCxFQUFSO0FBRUFiLEdBQUcsQ0FBQ2MsR0FBSixDQUFRLFNBQVIsRUFBbUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDL0JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMvQkMsSUFBQUEsT0FBTyxFQUFFLHdCQURzQjtBQUUvQkMsSUFBQUEsT0FBTyxFQUFFO0FBRnNCLEdBQXJCLENBQVo7QUFLRCxDQU5EO0FBUUF0QixHQUFHLENBQUN1QixNQUFKLENBQVdsQixJQUFYLEVBQWlCO0FBQUEsU0FBTVksT0FBTyxDQUFDQyxHQUFSLDhDQUFrRGIsSUFBbEQsRUFBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0LmdpdGh1Yi5pby1naC1wYWdlc1xcYXBpXFxzZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyIgJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG5cbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuLy8gaW1wb3J0IGNvbmZpZyBmcm9tICdjb25maWcnO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmNvbnN0IHBvcnQgPSBwYXJzZUludChwcm9jZXNzLmVudi5QT1JULCAxMCkgfHwgNTAwMDtcbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XG5cbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtcbiAgZXh0ZW5kZWQ6IGZhbHNlLFxufSkpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuYXBwLmdldCgnL2FwaS92MScsIChyZXEsIHJlcykgPT4ge1xuICBjb25zb2xlLmxvZyhyZXMuc3RhdHVzKDIwMCkuc2VuZCh7XG4gICAgU3VjY2VzczogJ2Nvbm5lY3RlZCBzdWNjZXNzZnVsbHknLFxuICAgIE1lc3NhZ2U6ICd3ZWxjb21lIHRvIEF1dG9tYXJ0IGFwcC4nLFxuXG4gIH0pKTtcbn0pO1xuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IGNvbnNvbGUubG9nKGBBdXRvbWFydCBzZXJ2ZXIgaXMgcnVubmluZyBvbiBwb3J0ICR7cG9ydH1gKSk7XG5cbiBcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "logger",
        "require",
        "express",
        "bodyParser",
        "port",
        "parseInt",
        "process",
        "env",
        "PORT",
        "use",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "console",
        "log",
        "status",
        "send",
        "Success",
        "Message",
        "listen"
      ],
      "mappings": "AAAC;;;;;;eAEcA,G;;;AAEf,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B,C,CACA;;;AAEA,IAAMF,GAAG,GAAGG,OAAO,EAAnB;AAEA,IAAME,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAb,EAAmB,EAAnB,CAAR,IAAkC,IAA/C;AACAT,GAAG,CAACU,GAAJ,CAAQT,MAAM,CAAC,KAAD,CAAd;AAEAD,GAAG,CAACU,GAAJ,CAAQN,UAAU,CAACO,UAAX,CAAsB;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAtB,CAAR;AAIAZ,GAAG,CAACU,GAAJ,CAAQN,UAAU,CAACS,IAAX,EAAR;AAEAb,GAAG,CAACc,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC/BC,IAAAA,OAAO,EAAE,wBADsB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAArB,CAAZ;AAKD,CAND;AAQAtB,GAAG,CAACuB,MAAJ,CAAWlB,IAAX,EAAiB;AAAA,SAAMY,OAAO,CAACC,GAAR,8CAAkDb,IAAlD,EAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourcesContent": [
        " 'use strict';\n\nexport default app;\n\nconst logger = require('morgan');\nconst express = require('express');\nconst bodyParser = require('body-parser');\n// import config from 'config';\n\nconst app = express();\n\nconst port = parseInt(process.env.PORT, 10) || 5000;\napp.use(logger('dev'));\n\napp.use(bodyParser.urlencoded({\n  extended: false,\n}));\n\napp.use(bodyParser.json());\n\napp.get('/api/v1', (req, res) => {\n  console.log(res.status(200).send({\n    Success: 'connected successfully',\n    Message: 'welcome to Automart app.',\n\n  }));\n});\n\napp.listen(port, () => console.log(`Automart server is running on port ${port}`));\n\n \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560042084083
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//'use strict';\nvar logger = require('morgan');\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser'); //import config from 'config';\n\n\nvar app = express();\nvar port = parseInt(process.env.PORT, 10) || 5000;\napp.use(logger('dev'));\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\nvar path = '/api/v1';\napp.use(bodyParser.json());\napp.get('path', function (req, res) {\n  console.log(res.status(200).send(\"Automart app is running on port :\".concat(port, \" \")));\n});\napp.listen(port, function () {\n  return console.log(\"Automart server is running on port \".concat(port));\n}); //export default app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJsb2dnZXIiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJhcHAiLCJwb3J0IiwicGFyc2VJbnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInBhdGgiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsInNlbmQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsYUFBRCxDQUExQixDLENBQ0M7OztBQUVELElBQU1HLEdBQUcsR0FBR0YsT0FBTyxFQUFuQjtBQUVBLElBQU1HLElBQUksR0FBR0MsUUFBUSxDQUFDQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBYixFQUFrQixFQUFsQixDQUFSLElBQWlDLElBQTlDO0FBQ0FMLEdBQUcsQ0FBQ00sR0FBSixDQUFRVixNQUFNLENBQUMsS0FBRCxDQUFkO0FBR0FJLEdBQUcsQ0FBQ00sR0FBSixDQUFRUCxVQUFVLENBQUNRLFVBQVgsQ0FBc0I7QUFDN0JDLEVBQUFBLFFBQVEsRUFBRTtBQURtQixDQUF0QixDQUFSO0FBSUEsSUFBTUMsSUFBSSxHQUFHLFNBQWI7QUFFQVQsR0FBRyxDQUFDTSxHQUFKLENBQVFQLFVBQVUsQ0FBQ1csSUFBWCxFQUFSO0FBRUFWLEdBQUcsQ0FBQ1csR0FBSixDQUFRLE1BQVIsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWE7QUFDNUJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQiw0Q0FBeURoQixJQUF6RCxPQUFaO0FBQ0EsQ0FGRDtBQUlBRCxHQUFHLENBQUNrQixNQUFKLENBQVdqQixJQUFYLEVBQWlCO0FBQUEsU0FBTWEsT0FBTyxDQUFDQyxHQUFSLDhDQUFrRGQsSUFBbEQsRUFBTjtBQUFBLENBQWpCLEUsQ0FFQSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEVyaWMgSWJ1XFxkZXNrdG9wXFxhdXRvbWFydC5naXRodWIuaW8tZ2gtcGFnZXNcXGFwaVxcc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiLy8ndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBsb2dnZXIgPSByZXF1aXJlKCdtb3JnYW4nKTtcclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XHJcbiAvL2ltcG9ydCBjb25maWcgZnJvbSAnY29uZmlnJztcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbmNvbnN0IHBvcnQgPSBwYXJzZUludChwcm9jZXNzLmVudi5QT1JULDEwKSB8fCA1MDAwO1xyXG5hcHAudXNlKGxvZ2dlcignZGV2JykpO1xyXG5cclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtcclxuXHRleHRlbmRlZDogZmFsc2VcclxufSkpO1xyXG5cclxuY29uc3QgcGF0aCA9ICcvYXBpL3YxJztcclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5cclxuYXBwLmdldCgncGF0aCcsIChyZXEsIHJlcykgPT57XHJcblx0Y29uc29sZS5sb2cocmVzLnN0YXR1cygyMDApLnNlbmQoYEF1dG9tYXJ0IGFwcCBpcyBydW5uaW5nIG9uIHBvcnQgOiR7cG9ydH0gYCkpO1xyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coYEF1dG9tYXJ0IHNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApKTsgXHRcdFxyXG5cclxuLy9leHBvcnQgZGVmYXVsdCBhcHA7XHRcdFx0XHRcdFx0Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "logger",
        "require",
        "express",
        "bodyParser",
        "app",
        "port",
        "parseInt",
        "process",
        "env",
        "PORT",
        "use",
        "urlencoded",
        "extended",
        "path",
        "json",
        "get",
        "req",
        "res",
        "console",
        "log",
        "status",
        "send",
        "listen"
      ],
      "mappings": ";;AAAA;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B,C,CACC;;;AAED,IAAMG,GAAG,GAAGF,OAAO,EAAnB;AAEA,IAAMG,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAb,EAAkB,EAAlB,CAAR,IAAiC,IAA9C;AACAL,GAAG,CAACM,GAAJ,CAAQV,MAAM,CAAC,KAAD,CAAd;AAGAI,GAAG,CAACM,GAAJ,CAAQP,UAAU,CAACQ,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAR;AAIA,IAAMC,IAAI,GAAG,SAAb;AAEAT,GAAG,CAACM,GAAJ,CAAQP,UAAU,CAACW,IAAX,EAAR;AAEAV,GAAG,CAACW,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAa;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,4CAAyDhB,IAAzD,OAAZ;AACA,CAFD;AAIAD,GAAG,CAACkB,MAAJ,CAAWjB,IAAX,EAAiB;AAAA,SAAMa,OAAO,CAACC,GAAR,8CAAkDd,IAAlD,EAAN;AAAA,CAAjB,E,CAEA",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourcesContent": [
        "//'use strict';\r\n\r\nconst logger = require('morgan');\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\n //import config from 'config';\r\n\r\nconst app = express();\r\n\r\nconst port = parseInt(process.env.PORT,10) || 5000;\r\napp.use(logger('dev'));\r\n\r\n\r\napp.use(bodyParser.urlencoded({\r\n\textended: false\r\n}));\r\n\r\nconst path = '/api/v1';\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.get('path', (req, res) =>{\r\n\tconsole.log(res.status(200).send(`Automart app is running on port :${port} `));\r\n});\r\n\r\napp.listen(port, () => console.log(`Automart server is running on port ${port}`)); \t\t\r\n\r\n//export default app;\t\t\t\t\t\t"
      ]
    },
    "sourceType": "script",
    "mtime": 1560003485684
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\\\\test\\\\login.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart.github.io-gh-pages\\\\api\\\\server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test\\login.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
        "sourceFileName": "login.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireWildcard(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n(0, _chai.use)(_chaiHttp[\"default\"]);\nvar API_PREFIX = '/api/v1';\ndescribe('user can login', function (done) {\n  it('should get username and password then return successful', function (done) {\n    loggedInUser.request(_app[\"default\"]).post('app/v1/auth/login').set({\n      'Content-Type': 'application/json'\n    }).send({\n      username: 'martini',\n      password: 'xxxfff546tg'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(200);\n      (0, _chai.expect)(res.body.status).to.equal(200);\n      (0, _chai.expect)(res.body).to.be.an('object');\n\n      _chai.assert.strictEqual(res.body, 200, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.statusCode, 200, 'should return 200 status code');\n\n      _chai.assert.isString(res.body.data.username, 'username should be a string');\n\n      _chai.assert.isNotNull(res.body.data, 'password should not be null');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n  it('should return error message if username and password is incorrect', function (done) {\n    loggedInUser.request(_app[\"default\"]).post('app/v1/auth/login').set({\n      'Content-Type': 'application/json'\n    }).send({\n      username: 'martini',\n      password: 'xxxfff546tg'\n    }).end(function (err, res) {\n      (0, _chai.expect)(res.statusCode).to.equal(400);\n      (0, _chai.expect)(res.body.status).to.equal(400);\n      (0, _chai.expect)(res.body).to.be.an('object');\n      (0, _chai.expect)(res.body.error).to.equal('username or password is incorrect');\n\n      _chai.assert.strictEqual(res.body, 400, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.statusCode, 400, 'should return 200 status code');\n\n      _chai.assert.strictEqual(res.body.error, incorrect, 'unexpected error', 'should return error');\n\n      _chai.assert.isNotObject(res.body.data, 'expected an object');\n\n      _chai.assert.isNull(res.body.data, 'username or password should not be null');\n\n      _chai.assert.isNotNull(err, 'unexpected error');\n\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLnRlc3QuanMiXSwibmFtZXMiOlsiY2hhaUhUVFAiLCJBUElfUFJFRklYIiwiZGVzY3JpYmUiLCJkb25lIiwiaXQiLCJsb2dnZWRJblVzZXIiLCJyZXF1ZXN0IiwiYXBwIiwicG9zdCIsInNldCIsInNlbmQiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiZW5kIiwiZXJyIiwicmVzIiwic3RhdHVzQ29kZSIsInRvIiwiZXF1YWwiLCJib2R5Iiwic3RhdHVzIiwiYmUiLCJhbiIsImFzc2VydCIsInN0cmljdEVxdWFsIiwiaXNTdHJpbmciLCJkYXRhIiwiaXNOb3ROdWxsIiwiZXJyb3IiLCJpbmNvcnJlY3QiLCJpc05vdE9iamVjdCIsImlzTnVsbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFHQTs7QUFDQTs7Ozs7O0FBR0EsZUFBSUEsb0JBQUo7QUFFQSxJQUFNQyxVQUFVLEdBQUcsU0FBbkI7QUFFQUMsUUFBUSxDQUFDLGdCQUFELEVBQW1CLFVBQUNDLElBQUQsRUFBVTtBQUNuQ0MsRUFBQUEsRUFBRSxDQUFDLHlEQUFELEVBQTRELFVBQUNELElBQUQsRUFBVTtBQUN0RUUsSUFBQUEsWUFBWSxDQUFDQyxPQUFiLENBQXFCQyxlQUFyQixFQUNHQyxJQURILENBQ1EsbUJBRFIsRUFFR0MsR0FGSCxDQUVPO0FBQ0gsc0JBQWdCO0FBRGIsS0FGUCxFQUtHQyxJQUxILENBS1E7QUFDSkMsTUFBQUEsUUFBUSxFQUFFLFNBRE47QUFFSkMsTUFBQUEsUUFBUSxFQUFFO0FBRk4sS0FMUixFQVNHQyxHQVRILENBU08sVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakIsd0JBQU9BLEdBQUcsQ0FBQ0MsVUFBWCxFQUF1QkMsRUFBdkIsQ0FBMEJDLEtBQTFCLENBQWdDLEdBQWhDO0FBQ0Esd0JBQU9ILEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxNQUFoQixFQUF3QkgsRUFBeEIsQ0FBMkJDLEtBQTNCLENBQWlDLEdBQWpDO0FBQ0Esd0JBQU9ILEdBQUcsQ0FBQ0ksSUFBWCxFQUFpQkYsRUFBakIsQ0FBb0JJLEVBQXBCLENBQXVCQyxFQUF2QixDQUEwQixRQUExQjs7QUFDQUMsbUJBQU9DLFdBQVAsQ0FBbUJULEdBQUcsQ0FBQ0ksSUFBdkIsRUFBNkIsR0FBN0IsRUFBa0MsK0JBQWxDOztBQUNBSSxtQkFBT0MsV0FBUCxDQUFtQlQsR0FBRyxDQUFDQyxVQUF2QixFQUFtQyxHQUFuQyxFQUF3QywrQkFBeEM7O0FBQ0FPLG1CQUFPRSxRQUFQLENBQWdCVixHQUFHLENBQUNJLElBQUosQ0FBU08sSUFBVCxDQUFjZixRQUE5QixFQUF3Qyw2QkFBeEM7O0FBQ0FZLG1CQUFPSSxTQUFQLENBQWlCWixHQUFHLENBQUNJLElBQUosQ0FBU08sSUFBMUIsRUFBZ0MsNkJBQWhDOztBQUNBSCxtQkFBT0ksU0FBUCxDQUFpQmIsR0FBakIsRUFBc0Isa0JBQXRCOztBQUNBWCxNQUFBQSxJQUFJO0FBQ0wsS0FuQkg7QUFvQkQsR0FyQkMsQ0FBRjtBQXVCQUMsRUFBQUEsRUFBRSxDQUFDLG1FQUFELEVBQXNFLFVBQUNELElBQUQsRUFBVTtBQUNoRkUsSUFBQUEsWUFBWSxDQUFDQyxPQUFiLENBQXFCQyxlQUFyQixFQUNHQyxJQURILENBQ1EsbUJBRFIsRUFFR0MsR0FGSCxDQUVPO0FBQ0gsc0JBQWdCO0FBRGIsS0FGUCxFQUtHQyxJQUxILENBS1E7QUFDSkMsTUFBQUEsUUFBUSxFQUFFLFNBRE47QUFFSkMsTUFBQUEsUUFBUSxFQUFFO0FBRk4sS0FMUixFQVNHQyxHQVRILENBU08sVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakIsd0JBQU9BLEdBQUcsQ0FBQ0MsVUFBWCxFQUF1QkMsRUFBdkIsQ0FBMEJDLEtBQTFCLENBQWdDLEdBQWhDO0FBQ0Esd0JBQU9ILEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxNQUFoQixFQUF3QkgsRUFBeEIsQ0FBMkJDLEtBQTNCLENBQWlDLEdBQWpDO0FBQ0Esd0JBQU9ILEdBQUcsQ0FBQ0ksSUFBWCxFQUFpQkYsRUFBakIsQ0FBb0JJLEVBQXBCLENBQXVCQyxFQUF2QixDQUEwQixRQUExQjtBQUNBLHdCQUFPUCxHQUFHLENBQUNJLElBQUosQ0FBU1MsS0FBaEIsRUFBdUJYLEVBQXZCLENBQTBCQyxLQUExQixDQUFnQyxtQ0FBaEM7O0FBQ0FLLG1CQUFPQyxXQUFQLENBQW1CVCxHQUFHLENBQUNJLElBQXZCLEVBQTZCLEdBQTdCLEVBQWtDLCtCQUFsQzs7QUFDQUksbUJBQU9DLFdBQVAsQ0FBbUJULEdBQUcsQ0FBQ0MsVUFBdkIsRUFBbUMsR0FBbkMsRUFBd0MsK0JBQXhDOztBQUNBTyxtQkFBT0MsV0FBUCxDQUFtQlQsR0FBRyxDQUFDSSxJQUFKLENBQVNTLEtBQTVCLEVBQW1DQyxTQUFuQyxFQUE4QyxrQkFBOUMsRUFBa0UscUJBQWxFOztBQUNBTixtQkFBT08sV0FBUCxDQUFtQmYsR0FBRyxDQUFDSSxJQUFKLENBQVNPLElBQTVCLEVBQWtDLG9CQUFsQzs7QUFDQUgsbUJBQU9RLE1BQVAsQ0FBY2hCLEdBQUcsQ0FBQ0ksSUFBSixDQUFTTyxJQUF2QixFQUE2Qix5Q0FBN0I7O0FBQ0FILG1CQUFPSSxTQUFQLENBQWlCYixHQUFqQixFQUFzQixrQkFBdEI7O0FBQ0FYLE1BQUFBLElBQUk7QUFDTCxLQXJCSDtBQXNCRCxHQXZCQyxDQUFGO0FBd0JELENBaERPLENBQVIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxFcmljIElidVxcZGVza3RvcFxcYXV0b21hcnQuZ2l0aHViLmlvLWdoLXBhZ2VzXFxhcGlcXHNlcnZlclxcdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpLCB7XG4gIHVzZSwgZXhwZWN0LCByZXF1aXJlLCBhc3NlcnQsXG59IGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlIVFRQIGZyb20gJ2NoYWktaHR0cCc7XG5pbXBvcnQgYXBwIGZyb20gJy4uL2FwcCc7XG5cblxudXNlKGNoYWlIVFRQKTtcblxuY29uc3QgQVBJX1BSRUZJWCA9ICcvYXBpL3YxJztcblxuZGVzY3JpYmUoJ3VzZXIgY2FuIGxvZ2luJywgKGRvbmUpID0+IHtcbiAgaXQoJ3Nob3VsZCBnZXQgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIHRoZW4gcmV0dXJuIHN1Y2Nlc3NmdWwnLCAoZG9uZSkgPT4ge1xuICAgIGxvZ2dlZEluVXNlci5yZXF1ZXN0KGFwcClcbiAgICAgIC5wb3N0KCdhcHAvdjEvYXV0aC9sb2dpbicpXG4gICAgICAuc2V0KHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIFx0fSlcbiAgICAgIC5zZW5kKHtcbiAgICAgICAgdXNlcm5hbWU6ICdtYXJ0aW5pJyxcbiAgICAgICAgcGFzc3dvcmQ6ICd4eHhmZmY1NDZ0ZycsXG4gICAgICB9KVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgZXhwZWN0KHJlcy5zdGF0dXNDb2RlKS50by5lcXVhbCgyMDApO1xuICAgICAgICBleHBlY3QocmVzLmJvZHkuc3RhdHVzKS50by5lcXVhbCgyMDApO1xuICAgICAgICBleHBlY3QocmVzLmJvZHkpLnRvLmJlLmFuKCdvYmplY3QnKTtcbiAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJlcy5ib2R5LCAyMDAsICdzaG91bGQgcmV0dXJuIDIwMCBzdGF0dXMgY29kZScpO1xuICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocmVzLnN0YXR1c0NvZGUsIDIwMCwgJ3Nob3VsZCByZXR1cm4gMjAwIHN0YXR1cyBjb2RlJyk7XG4gICAgICAgIGFzc2VydC5pc1N0cmluZyhyZXMuYm9keS5kYXRhLnVzZXJuYW1lLCAndXNlcm5hbWUgc2hvdWxkIGJlIGEgc3RyaW5nJyk7XG4gICAgICAgIGFzc2VydC5pc05vdE51bGwocmVzLmJvZHkuZGF0YSwgJ3Bhc3N3b3JkIHNob3VsZCBub3QgYmUgbnVsbCcpO1xuICAgICAgICBhc3NlcnQuaXNOb3ROdWxsKGVyciwgJ3VuZXhwZWN0ZWQgZXJyb3InKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmV0dXJuIGVycm9yIG1lc3NhZ2UgaWYgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIGlzIGluY29ycmVjdCcsIChkb25lKSA9PiB7XG4gICAgbG9nZ2VkSW5Vc2VyLnJlcXVlc3QoYXBwKVxuICAgICAgLnBvc3QoJ2FwcC92MS9hdXRoL2xvZ2luJylcbiAgICAgIC5zZXQoe1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgXHR9KVxuICAgICAgLnNlbmQoe1xuICAgICAgICB1c2VybmFtZTogJ21hcnRpbmknLFxuICAgICAgICBwYXNzd29yZDogJ3h4eGZmZjU0NnRnJyxcbiAgICAgIH0pXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBleHBlY3QocmVzLnN0YXR1c0NvZGUpLnRvLmVxdWFsKDQwMCk7XG4gICAgICAgIGV4cGVjdChyZXMuYm9keS5zdGF0dXMpLnRvLmVxdWFsKDQwMCk7XG4gICAgICAgIGV4cGVjdChyZXMuYm9keSkudG8uYmUuYW4oJ29iamVjdCcpO1xuICAgICAgICBleHBlY3QocmVzLmJvZHkuZXJyb3IpLnRvLmVxdWFsKCd1c2VybmFtZSBvciBwYXNzd29yZCBpcyBpbmNvcnJlY3QnKTtcbiAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHJlcy5ib2R5LCA0MDAsICdzaG91bGQgcmV0dXJuIDIwMCBzdGF0dXMgY29kZScpO1xuICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwocmVzLnN0YXR1c0NvZGUsIDQwMCwgJ3Nob3VsZCByZXR1cm4gMjAwIHN0YXR1cyBjb2RlJyk7XG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChyZXMuYm9keS5lcnJvciwgaW5jb3JyZWN0LCAndW5leHBlY3RlZCBlcnJvcicsICdzaG91bGQgcmV0dXJuIGVycm9yJyk7XG4gICAgICAgIGFzc2VydC5pc05vdE9iamVjdChyZXMuYm9keS5kYXRhLCAnZXhwZWN0ZWQgYW4gb2JqZWN0Jyk7XG4gICAgICAgIGFzc2VydC5pc051bGwocmVzLmJvZHkuZGF0YSwgJ3VzZXJuYW1lIG9yIHBhc3N3b3JkIHNob3VsZCBub3QgYmUgbnVsbCcpO1xuICAgICAgICBhc3NlcnQuaXNOb3ROdWxsKGVyciwgJ3VuZXhwZWN0ZWQgZXJyb3InKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "login.test.js"
      ],
      "names": [
        "chaiHTTP",
        "API_PREFIX",
        "describe",
        "done",
        "it",
        "loggedInUser",
        "request",
        "app",
        "post",
        "set",
        "send",
        "username",
        "password",
        "end",
        "err",
        "res",
        "statusCode",
        "to",
        "equal",
        "body",
        "status",
        "be",
        "an",
        "assert",
        "strictEqual",
        "isString",
        "data",
        "isNotNull",
        "error",
        "incorrect",
        "isNotObject",
        "isNull"
      ],
      "mappings": ";;AAAA;;AAGA;;AACA;;;;;;AAGA,eAAIA,oBAAJ;AAEA,IAAMC,UAAU,GAAG,SAAnB;AAEAC,QAAQ,CAAC,gBAAD,EAAmB,UAACC,IAAD,EAAU;AACnCC,EAAAA,EAAE,CAAC,yDAAD,EAA4D,UAACD,IAAD,EAAU;AACtEE,IAAAA,YAAY,CAACC,OAAb,CAAqBC,eAArB,EACGC,IADH,CACQ,mBADR,EAEGC,GAFH,CAEO;AACH,sBAAgB;AADb,KAFP,EAKGC,IALH,CAKQ;AACJC,MAAAA,QAAQ,EAAE,SADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KALR,EASGC,GATH,CASO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,wBAAOA,GAAG,CAACC,UAAX,EAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,GAAhC;AACA,wBAAOH,GAAG,CAACI,IAAJ,CAASC,MAAhB,EAAwBH,EAAxB,CAA2BC,KAA3B,CAAiC,GAAjC;AACA,wBAAOH,GAAG,CAACI,IAAX,EAAiBF,EAAjB,CAAoBI,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;;AACAC,mBAAOC,WAAP,CAAmBT,GAAG,CAACI,IAAvB,EAA6B,GAA7B,EAAkC,+BAAlC;;AACAI,mBAAOC,WAAP,CAAmBT,GAAG,CAACC,UAAvB,EAAmC,GAAnC,EAAwC,+BAAxC;;AACAO,mBAAOE,QAAP,CAAgBV,GAAG,CAACI,IAAJ,CAASO,IAAT,CAAcf,QAA9B,EAAwC,6BAAxC;;AACAY,mBAAOI,SAAP,CAAiBZ,GAAG,CAACI,IAAJ,CAASO,IAA1B,EAAgC,6BAAhC;;AACAH,mBAAOI,SAAP,CAAiBb,GAAjB,EAAsB,kBAAtB;;AACAX,MAAAA,IAAI;AACL,KAnBH;AAoBD,GArBC,CAAF;AAuBAC,EAAAA,EAAE,CAAC,mEAAD,EAAsE,UAACD,IAAD,EAAU;AAChFE,IAAAA,YAAY,CAACC,OAAb,CAAqBC,eAArB,EACGC,IADH,CACQ,mBADR,EAEGC,GAFH,CAEO;AACH,sBAAgB;AADb,KAFP,EAKGC,IALH,CAKQ;AACJC,MAAAA,QAAQ,EAAE,SADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KALR,EASGC,GATH,CASO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,wBAAOA,GAAG,CAACC,UAAX,EAAuBC,EAAvB,CAA0BC,KAA1B,CAAgC,GAAhC;AACA,wBAAOH,GAAG,CAACI,IAAJ,CAASC,MAAhB,EAAwBH,EAAxB,CAA2BC,KAA3B,CAAiC,GAAjC;AACA,wBAAOH,GAAG,CAACI,IAAX,EAAiBF,EAAjB,CAAoBI,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACA,wBAAOP,GAAG,CAACI,IAAJ,CAASS,KAAhB,EAAuBX,EAAvB,CAA0BC,KAA1B,CAAgC,mCAAhC;;AACAK,mBAAOC,WAAP,CAAmBT,GAAG,CAACI,IAAvB,EAA6B,GAA7B,EAAkC,+BAAlC;;AACAI,mBAAOC,WAAP,CAAmBT,GAAG,CAACC,UAAvB,EAAmC,GAAnC,EAAwC,+BAAxC;;AACAO,mBAAOC,WAAP,CAAmBT,GAAG,CAACI,IAAJ,CAASS,KAA5B,EAAmCC,SAAnC,EAA8C,kBAA9C,EAAkE,qBAAlE;;AACAN,mBAAOO,WAAP,CAAmBf,GAAG,CAACI,IAAJ,CAASO,IAA5B,EAAkC,oBAAlC;;AACAH,mBAAOQ,MAAP,CAAchB,GAAG,CAACI,IAAJ,CAASO,IAAvB,EAA6B,yCAA7B;;AACAH,mBAAOI,SAAP,CAAiBb,GAAjB,EAAsB,kBAAtB;;AACAX,MAAAA,IAAI;AACL,KArBH;AAsBD,GAvBC,CAAF;AAwBD,CAhDO,CAAR",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart.github.io-gh-pages\\api\\server\\test",
      "sourcesContent": [
        "import chai, {\n  use, expect, require, assert,\n} from 'chai';\nimport chaiHTTP from 'chai-http';\nimport app from '../app';\n\n\nuse(chaiHTTP);\n\nconst API_PREFIX = '/api/v1';\n\ndescribe('user can login', (done) => {\n  it('should get username and password then return successful', (done) => {\n    loggedInUser.request(app)\n      .post('app/v1/auth/login')\n      .set({\n        'Content-Type': 'application/json',\n      \t})\n      .send({\n        username: 'martini',\n        password: 'xxxfff546tg',\n      })\n      .end((err, res) => {\n        expect(res.statusCode).to.equal(200);\n        expect(res.body.status).to.equal(200);\n        expect(res.body).to.be.an('object');\n        assert.strictEqual(res.body, 200, 'should return 200 status code');\n        assert.strictEqual(res.statusCode, 200, 'should return 200 status code');\n        assert.isString(res.body.data.username, 'username should be a string');\n        assert.isNotNull(res.body.data, 'password should not be null');\n        assert.isNotNull(err, 'unexpected error');\n        done();\n      });\n  });\n\n  it('should return error message if username and password is incorrect', (done) => {\n    loggedInUser.request(app)\n      .post('app/v1/auth/login')\n      .set({\n        'Content-Type': 'application/json',\n      \t})\n      .send({\n        username: 'martini',\n        password: 'xxxfff546tg',\n      })\n      .end((err, res) => {\n        expect(res.statusCode).to.equal(400);\n        expect(res.body.status).to.equal(400);\n        expect(res.body).to.be.an('object');\n        expect(res.body.error).to.equal('username or password is incorrect');\n        assert.strictEqual(res.body, 400, 'should return 200 status code');\n        assert.strictEqual(res.statusCode, 400, 'should return 200 status code');\n        assert.strictEqual(res.body.error, incorrect, 'unexpected error', 'should return error');\n        assert.isNotObject(res.body.data, 'expected an object');\n        assert.isNull(res.body.data, 'username or password should not be null');\n        assert.isNotNull(err, 'unexpected error');\n        done();\n      });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560008758684
  }
}