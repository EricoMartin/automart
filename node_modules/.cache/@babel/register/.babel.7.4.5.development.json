{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\car-spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "car-spec.js"
      }
    },
    "ast": null,
    "code": "//import chai from 'chai';\n//import car from '../models/car.js';\nconst {\n  expect,\n  assert\n} = chai;\ndescribe('Car Endpoint', () => {\n  describe('Create a car ad', () => {\n    it('should create a car sale ad', () => {\n      const newCar = car.newCarAd({\n        owner: 1,\n        manufacturer: 'Honda',\n        model: 'Accord',\n        price: 5000000,\n        state: 'New',\n        body_type: 'saloon',\n        year: '2009',\n        status: 'available'\n      });\n      expect(newCar).to.have.property('created_on');\n      expect(newCar).to.have.property('id');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhci1zcGVjLmpzIl0sIm5hbWVzIjpbImV4cGVjdCIsImFzc2VydCIsImNoYWkiLCJkZXNjcmliZSIsIml0IiwibmV3Q2FyIiwiY2FyIiwibmV3Q2FyQWQiLCJvd25lciIsIm1hbnVmYWN0dXJlciIsIm1vZGVsIiwicHJpY2UiLCJzdGF0ZSIsImJvZHlfdHlwZSIsInllYXIiLCJzdGF0dXMiLCJ0byIsImhhdmUiLCJwcm9wZXJ0eSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUVBLE1BQU07QUFBRUEsRUFBQUEsTUFBRjtBQUFVQyxFQUFBQTtBQUFWLElBQXFCQyxJQUEzQjtBQUVBQyxRQUFRLENBQUMsY0FBRCxFQUFpQixNQUFNO0FBQzdCQSxFQUFBQSxRQUFRLENBQUMsaUJBQUQsRUFBb0IsTUFBTTtBQUNoQ0MsSUFBQUEsRUFBRSxDQUFDLDZCQUFELEVBQWdDLE1BQU07QUFDdEMsWUFBTUMsTUFBTSxHQUFHQyxHQUFHLENBQUNDLFFBQUosQ0FBYTtBQUMxQkMsUUFBQUEsS0FBSyxFQUFFLENBRG1CO0FBRTFCQyxRQUFBQSxZQUFZLEVBQUUsT0FGWTtBQUcxQkMsUUFBQUEsS0FBSyxFQUFFLFFBSG1CO0FBSTFCQyxRQUFBQSxLQUFLLEVBQUUsT0FKbUI7QUFLMUJDLFFBQUFBLEtBQUssRUFBRSxLQUxtQjtBQU0xQkMsUUFBQUEsU0FBUyxFQUFFLFFBTmU7QUFPMUJDLFFBQUFBLElBQUksRUFBRSxNQVBvQjtBQVExQkMsUUFBQUEsTUFBTSxFQUFFO0FBUmtCLE9BQWIsQ0FBZjtBQVVBZixNQUFBQSxNQUFNLENBQUNLLE1BQUQsQ0FBTixDQUFlVyxFQUFmLENBQWtCQyxJQUFsQixDQUF1QkMsUUFBdkIsQ0FBZ0MsWUFBaEM7QUFDQWxCLE1BQUFBLE1BQU0sQ0FBQ0ssTUFBRCxDQUFOLENBQWVXLEVBQWYsQ0FBa0JDLElBQWxCLENBQXVCQyxRQUF2QixDQUFnQyxJQUFoQztBQUNELEtBYkMsQ0FBRjtBQWNELEdBZk8sQ0FBUjtBQWlCQyxDQWxCSyxDQUFSIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0XFxzZXJ2ZXJcXHRlc3QiLCJzb3VyY2VzQ29udGVudCI6WyIvL2ltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xyXG4vL2ltcG9ydCBjYXIgZnJvbSAnLi4vbW9kZWxzL2Nhci5qcyc7XHJcblxyXG5jb25zdCB7IGV4cGVjdCwgYXNzZXJ0IH0gPSBjaGFpO1xyXG5cclxuZGVzY3JpYmUoJ0NhciBFbmRwb2ludCcsICgpID0+IHtcclxuICBkZXNjcmliZSgnQ3JlYXRlIGEgY2FyIGFkJywgKCkgPT4ge1xyXG4gICAgaXQoJ3Nob3VsZCBjcmVhdGUgYSBjYXIgc2FsZSBhZCcsICgpID0+IHtcclxuICAgICAgY29uc3QgbmV3Q2FyID0gY2FyLm5ld0NhckFkKHtcclxuICAgICAgICBvd25lcjogMSxcclxuICAgICAgICBtYW51ZmFjdHVyZXI6ICdIb25kYScsXHJcbiAgICAgICAgbW9kZWw6ICdBY2NvcmQnLFxyXG4gICAgICAgIHByaWNlOiA1MDAwMDAwLFxyXG4gICAgICAgIHN0YXRlOiAnTmV3JyxcclxuICAgICAgICBib2R5X3R5cGU6ICdzYWxvb24nLFxyXG4gICAgICAgIHllYXI6ICcyMDA5JyxcclxuICAgICAgICBzdGF0dXM6ICdhdmFpbGFibGUnLFxyXG4gICAgICB9KTtcclxuICAgICAgZXhwZWN0KG5ld0NhcikudG8uaGF2ZS5wcm9wZXJ0eSgnY3JlYXRlZF9vbicpO1xyXG4gICAgICBleHBlY3QobmV3Q2FyKS50by5oYXZlLnByb3BlcnR5KCdpZCcpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIH0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "car-spec.js"
      ],
      "names": [
        "expect",
        "assert",
        "chai",
        "describe",
        "it",
        "newCar",
        "car",
        "newCarAd",
        "owner",
        "manufacturer",
        "model",
        "price",
        "state",
        "body_type",
        "year",
        "status",
        "to",
        "have",
        "property"
      ],
      "mappings": "AAAA;AACA;AAEA,MAAM;AAAEA,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAqBC,IAA3B;AAEAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7BA,EAAAA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCC,IAAAA,EAAE,CAAC,6BAAD,EAAgC,MAAM;AACtC,YAAMC,MAAM,GAAGC,GAAG,CAACC,QAAJ,CAAa;AAC1BC,QAAAA,KAAK,EAAE,CADmB;AAE1BC,QAAAA,YAAY,EAAE,OAFY;AAG1BC,QAAAA,KAAK,EAAE,QAHmB;AAI1BC,QAAAA,KAAK,EAAE,OAJmB;AAK1BC,QAAAA,KAAK,EAAE,KALmB;AAM1BC,QAAAA,SAAS,EAAE,QANe;AAO1BC,QAAAA,IAAI,EAAE,MAPoB;AAQ1BC,QAAAA,MAAM,EAAE;AARkB,OAAb,CAAf;AAUAf,MAAAA,MAAM,CAACK,MAAD,CAAN,CAAeW,EAAf,CAAkBC,IAAlB,CAAuBC,QAAvB,CAAgC,YAAhC;AACAlB,MAAAA,MAAM,CAACK,MAAD,CAAN,CAAeW,EAAf,CAAkBC,IAAlB,CAAuBC,QAAvB,CAAgC,IAAhC;AACD,KAbC,CAAF;AAcD,GAfO,CAAR;AAiBC,CAlBK,CAAR",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "//import chai from 'chai';\r\n//import car from '../models/car.js';\r\n\r\nconst { expect, assert } = chai;\r\n\r\ndescribe('Car Endpoint', () => {\r\n  describe('Create a car ad', () => {\r\n    it('should create a car sale ad', () => {\r\n      const newCar = car.newCarAd({\r\n        owner: 1,\r\n        manufacturer: 'Honda',\r\n        model: 'Accord',\r\n        price: 5000000,\r\n        state: 'New',\r\n        body_type: 'saloon',\r\n        year: '2009',\r\n        status: 'available',\r\n      });\r\n      expect(newCar).to.have.property('created_on');\r\n      expect(newCar).to.have.property('id');\r\n    });\r\n  });\r\n\r\n  });"
      ]
    },
    "sourceType": "module",
    "mtime": 1561755480895
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\car-spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\car-spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "car-spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _car = _interopRequireDefault(require(\"../models/car.js\"));\n\nvar _cars = _interopRequireDefault(require(\"./mock_db/cars\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar expect = _chai[\"default\"].expect,\n    assert = _chai[\"default\"].assert;\ndescribe('car Endpoint', function () {\n  describe('Create a car ad', function () {\n    it('should create a car sale ad', function () {\n      var newCar = _car[\"default\"].newCarAd({\n        owner: 1,\n        manufacturer: 'Honda',\n        model: 'Accord',\n        price: 5000000,\n        state: 'New',\n        body_type: 'saloon',\n        year: '2009',\n        status: 'available'\n      });\n\n      expect(newCar).to.be.a('object');\n      expect(newCar).to.have.property('id');\n      expect(newCar).to.have.property('owner');\n      expect(newCar).to.have.property('created_on');\n      expect(newCar).to.have.property('manufacturer');\n      expect(newCar).to.have.property('model');\n      expect(newCar).to.have.property('price');\n      expect(newCar).to.have.property('state');\n      expect(newCar).to.have.property('body_type');\n      expect(newCar).to.have.property('status');\n    });\n  });\n  describe('Find a car ad', function () {\n    it('should return a car ad', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var id = _cars[\"default\"][0].id;\n\n      var res = _car[\"default\"].findCarAd(id);\n\n      expect(res).to.be.an('array');\n    });\n    it('should return an empty array if not found', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n\n      var res = _car[\"default\"].findCarAd('0000000000787888888888');\n\n      expect(res).to.be.an('array');\n    });\n  });\n  describe('Get all ads', function () {\n    it('should return all ads', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n\n      var cars = _car[\"default\"].getAllCars();\n\n      expect(cars).to.be.an('array');\n      expect(cars[0]).to.have.property('id');\n    });\n    it('should return an empty array if there are no ads', function () {\n      var cars = _car[\"default\"].getAllCars();\n\n      expect(cars).to.be.an('array');\n    });\n  });\n  describe('Get all unsold cars', function () {\n    it('should return all usold cars', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n\n      var cars = _car[\"default\"].getAllUnsoldCars();\n\n      expect(cars).to.be.an('array');\n      expect(cars[0]).to.have.property('status');\n    });\n  });\n  describe('Get unsold cars by manufacturer', function () {\n    it('should return unsold cars by manufacturer', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var manufacturer = _cars[\"default\"][0].manufacturer;\n\n      var res = _car[\"default\"].getUnsoldCarByProp('manufacturer', manufacturer);\n\n      expect(res).to.be.an('object');\n    });\n  });\n  describe('Get unsold cars by body_type', function () {\n    it('should return unsold cars by body_type', function () {\n      _car[\"default\"].cars = _cars[\"default\"]; // eslint-disable-next-line camelcase\n\n      var body_type = _cars[\"default\"][0].body_type;\n\n      var res = _car[\"default\"].getUnsoldCarByProp('body_type', body_type);\n\n      expect(res).to.be.an('object');\n    });\n  });\n  describe('Get unsold cars by State', function () {\n    it('should return unsold cars by state', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var state = _cars[\"default\"][0].state;\n\n      var res = _car[\"default\"].getUnsoldCarByProp('state', state);\n\n      expect(res).to.be.an('object');\n    });\n  });\n  describe('Get cars by property', function () {\n    it('should return any car by property', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var _carsData$ = _cars[\"default\"][0],\n          manufacturer = _carsData$.manufacturer,\n          state = _carsData$.state,\n          body_type = _carsData$.body_type,\n          status = _carsData$.status;\n\n      var res = _car[\"default\"].getCarByProp('status', status);\n\n      expect(res).to.be.an('object');\n    });\n  });\n  describe('Update car ad', function () {\n    it('should return updated car ad', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var status = _cars[\"default\"][1].status;\n\n      var res = _car[\"default\"].getCarByProp('status', status);\n\n      expect(res).to.be.an('object');\n      expect(res.status).to.equal('sold');\n    });\n  });\n  describe('get all unsold cars withn a price range', function () {\n    it('should return all car ads within a price range', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var maxPrice = 10000000;\n      var minPrice = 3500000;\n      var price = _cars[\"default\"].price;\n\n      var res = _car[\"default\"].getCarPriceRange(maxPrice, minPrice);\n\n      expect(res).to.be.an('array');\n    });\n  });\n  describe('Delete a car ad', function () {\n    it('should delete car ad', function () {\n      _car[\"default\"].cars = _cars[\"default\"];\n      var id = _cars[\"default\"][3].id;\n\n      var res = _car[\"default\"].deleteCar(id);\n\n      expect(res).to.be.an('array');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "car-spec.js"
      ],
      "names": [
        "expect",
        "chai",
        "assert",
        "describe",
        "it",
        "newCar",
        "Car",
        "newCarAd",
        "owner",
        "manufacturer",
        "model",
        "price",
        "state",
        "body_type",
        "year",
        "status",
        "to",
        "be",
        "a",
        "have",
        "property",
        "cars",
        "carsData",
        "id",
        "res",
        "findCarAd",
        "an",
        "getAllCars",
        "getAllUnsoldCars",
        "getUnsoldCarByProp",
        "getCarByProp",
        "equal",
        "maxPrice",
        "minPrice",
        "getCarPriceRange",
        "deleteCar"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "import chai from 'chai';\r\nimport Car from '../models/car.js';\r\nimport carsData from './mock_db/cars';\r\n\r\nconst { expect, assert } = chai;\r\n\r\ndescribe('car Endpoint', () => {\r\n  describe('Create a car ad', () => {\r\n    it('should create a car sale ad', () => {\r\n      const newCar = Car.newCarAd({\r\n        owner: 1,\r\n        manufacturer: 'Honda',\r\n        model: 'Accord',\r\n        price: 5000000,\r\n        state: 'New',\r\n        body_type: 'saloon',\r\n        year: '2009',\r\n        status: 'available',\r\n      });\r\n      expect(newCar).to.be.a('object');\r\n      expect(newCar).to.have.property('id');\r\n      expect(newCar).to.have.property('owner');\r\n      expect(newCar).to.have.property('created_on');\r\n      expect(newCar).to.have.property('manufacturer');\r\n      expect(newCar).to.have.property('model');\r\n      expect(newCar).to.have.property('price');\r\n      expect(newCar).to.have.property('state');\r\n      expect(newCar).to.have.property('body_type');\r\n      expect(newCar).to.have.property('status');\r\n    });\r\n  });\r\n\r\n  describe('Find a car ad', ()=> {\r\n    it('should return a car ad', () => {\r\n     Car.cars = carsData;\r\n     const { id } = carsData[0];\r\n     const res = Car.findCarAd(id);\r\n     expect(res).to.be.an('array');\r\n    \r\n    });\r\n    it('should return an empty array if not found', () =>{\r\n     Car.cars= carsData;\r\n      const res = Car.findCarAd('0000000000787888888888');\r\n      expect(res).to.be.an('array');\r\n    });\r\n  });\r\n\r\n  describe('Get all ads', () => {\r\n    it('should return all ads', () => {\r\n      Car.cars = carsData;\r\n      const cars = Car.getAllCars();\r\n      expect(cars).to.be.an('array');\r\n      expect(cars[0]).to.have.property('id');\r\n    });\r\n    it('should return an empty array if there are no ads', () => {\r\n      const cars = Car.getAllCars();\r\n      expect(cars).to.be.an('array');\r\n    });\r\n  });\r\n\r\n  describe('Get all unsold cars', () => {\r\n    it('should return all usold cars', () => {\r\n      Car.cars = carsData;\r\n      const cars = Car.getAllUnsoldCars();\r\n      expect(cars).to.be.an('array');\r\n      expect(cars[0]).to.have.property('status');\r\n    });\r\n  });\r\n  describe('Get unsold cars by manufacturer', () => {\r\n    it('should return unsold cars by manufacturer', () => {\r\n      Car.cars = carsData;\r\n      const { manufacturer } = carsData[0];\r\n      const res = Car.getUnsoldCarByProp('manufacturer', manufacturer);\r\n      expect(res).to.be.an('object');\r\n    });\r\n  });\r\n  describe('Get unsold cars by body_type', () => {\r\n    it('should return unsold cars by body_type', () => {\r\n      Car.cars = carsData;\r\n      // eslint-disable-next-line camelcase\r\n      const { body_type } = carsData[0];\r\n      const res = Car.getUnsoldCarByProp('body_type', body_type);\r\n      expect(res).to.be.an('object');\r\n    });\r\n });\r\n    describe('Get unsold cars by State', () => {\r\n    it('should return unsold cars by state', () => {\r\n      Car.cars = carsData;\r\n      const { state } = carsData[0];\r\n      const res = Car.getUnsoldCarByProp('state', state);\r\n      expect(res).to.be.an('object');\r\n    });\r\n  });\r\n \r\n    describe('Get cars by property', () => {\r\n    it('should return any car by property', () => {\r\n      Car.cars = carsData;\r\n      const { manufacturer, state, body_type, status } = carsData[0];\r\n      const res = Car.getCarByProp('status', status);\r\n      expect(res).to.be.an('object');\r\n    });\r\n  });\r\n\r\n    describe('Update car ad', () => {\r\n    it('should return updated car ad', () => {\r\n      Car.cars = carsData;\r\n      const { status } = carsData[1];\r\n      const res = Car.getCarByProp('status', status);\r\n      expect(res).to.be.an('object');\r\n      expect(res.status).to.equal('sold');\r\n    });\r\n  });\r\n\r\n     describe('get all unsold cars withn a price range', () => {\r\n    it('should return all car ads within a price range', () => {\r\n      Car.cars = carsData;\r\n      const maxPrice = 10000000;\r\n      const minPrice = 3500000;\r\n      const { price } = carsData; \r\n      const res = Car.getCarPriceRange(maxPrice, minPrice);\r\n      expect(res).to.be.an('array'); \r\n    });\r\n  });\r\n\r\n\r\n     describe('Delete a car ad', () => {\r\n    it('should delete car ad', () => {\r\n      Car.cars = carsData;\r\n      const{ id } = carsData[3];\r\n      const res = Car.deleteCar(id);\r\n      expect(res).to.be.an('array'); \r\n      });\r\n  });\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1561857150869
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\models\\\\car.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\car.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\car.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models\\car.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
        "sourceFileName": "car.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _cars = _interopRequireDefault(require(\"../test/mock_db/cars\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Car =\n/*#__PURE__*/\nfunction () {\n  function Car() {\n    _classCallCheck(this, Car);\n\n    this.cars = _cars[\"default\"];\n  }\n\n  _createClass(Car, [{\n    key: \"newCarAd\",\n    value: function newCarAd(data) {\n      var id = parseInt(_cars[\"default\"].length + 22000, 10);\n      var cars_data = {\n        id: id,\n        owner: data.owner || '',\n        created_on: new Date().toLocaleString(),\n        state: data.state || '',\n        status: data.status || 'available',\n        price: data.price || 0,\n        manufacturer: data.manufacturer || '',\n        model: data.model || '',\n        body_type: data.body_type || ''\n      };\n      this.cars.push(cars_data);\n      return cars_data;\n    }\n  }, {\n    key: \"getAllCars\",\n    value: function getAllCars() {\n      return this.cars;\n    }\n  }, {\n    key: \"findCarAd\",\n    value: function findCarAd(id) {\n      return this.cars.filter(function (car) {\n        return parseInt(car.id, 10) === parseInt(id, 10);\n      });\n    }\n  }, {\n    key: \"getAllUnsoldCars\",\n    value: function getAllUnsoldCars() {\n      return this.cars.filter(function (car) {\n        return car.status === 'available';\n      });\n    }\n  }, {\n    key: \"getCarByProp\",\n    value: function getCarByProp(key, value) {\n      return this.cars.find(function (car) {\n        return car[key] === value;\n      });\n    }\n  }, {\n    key: \"getUnsoldCarByProp\",\n    value: function getUnsoldCarByProp(key, value) {\n      return this.cars.find(function (car) {\n        return car[key] === value && car.status === 'available';\n      });\n    }\n  }, {\n    key: \"getCarPriceRange\",\n    value: function getCarPriceRange(maxPrice, minPrice) {\n      return this.cars.filter(function (car) {\n        return car.price <= maxPrice && car.price >= minPrice;\n      });\n    }\n  }, {\n    key: \"deleteCar\",\n    value: function deleteCar(car) {\n      var idx = this.cars.indexOf(car);\n      return this.cars.splice(idx, 1);\n    }\n  }]);\n\n  return Car;\n}();\n\nvar _default = new Car();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhci5qcyJdLCJuYW1lcyI6WyJDYXIiLCJjYXJzIiwiY2Fyc0RhdGEiLCJkYXRhIiwiaWQiLCJwYXJzZUludCIsImxlbmd0aCIsImNhcnNfZGF0YSIsIm93bmVyIiwiY3JlYXRlZF9vbiIsIkRhdGUiLCJ0b0xvY2FsZVN0cmluZyIsInN0YXRlIiwic3RhdHVzIiwicHJpY2UiLCJtYW51ZmFjdHVyZXIiLCJtb2RlbCIsImJvZHlfdHlwZSIsInB1c2giLCJmaWx0ZXIiLCJjYXIiLCJrZXkiLCJ2YWx1ZSIsImZpbmQiLCJtYXhQcmljZSIsIm1pblByaWNlIiwiaWR4IiwiaW5kZXhPZiIsInNwbGljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRU9BLEc7OztBQUNOLGlCQUFhO0FBQUE7O0FBQ1osU0FBS0MsSUFBTCxHQUFZQyxnQkFBWjtBQUNBOzs7OzZCQUVRQyxJLEVBQUs7QUFDYixVQUFNQyxFQUFFLEdBQUdDLFFBQVEsQ0FBQ0gsaUJBQVNJLE1BQVQsR0FBa0IsS0FBbkIsRUFBMEIsRUFBMUIsQ0FBbkI7QUFDQSxVQUFNQyxTQUFTLEdBQUc7QUFDakJILFFBQUFBLEVBQUUsRUFBRkEsRUFEaUI7QUFFakJJLFFBQUFBLEtBQUssRUFBRUwsSUFBSSxDQUFDSyxLQUFMLElBQWMsRUFGSjtBQUdkQyxRQUFBQSxVQUFVLEVBQUUsSUFBSUMsSUFBSixHQUFXQyxjQUFYLEVBSEU7QUFJZEMsUUFBQUEsS0FBSyxFQUFFVCxJQUFJLENBQUNTLEtBQUwsSUFBYyxFQUpQO0FBS2RDLFFBQUFBLE1BQU0sRUFBRVYsSUFBSSxDQUFDVSxNQUFMLElBQWUsV0FMVDtBQU1kQyxRQUFBQSxLQUFLLEVBQUVYLElBQUksQ0FBQ1csS0FBTCxJQUFjLENBTlA7QUFPUkMsUUFBQUEsWUFBWSxFQUFFWixJQUFJLENBQUNZLFlBQUwsSUFBcUIsRUFQM0I7QUFRZEMsUUFBQUEsS0FBSyxFQUFFYixJQUFJLENBQUNhLEtBQUwsSUFBYyxFQVJQO0FBU2RDLFFBQUFBLFNBQVMsRUFBRWQsSUFBSSxDQUFDYyxTQUFMLElBQWtCO0FBVGYsT0FBbEI7QUFXQyxXQUFLaEIsSUFBTCxDQUFVaUIsSUFBVixDQUFlWCxTQUFmO0FBQ0QsYUFBT0EsU0FBUDtBQUNBOzs7aUNBR1c7QUFDWCxhQUFPLEtBQUtOLElBQVo7QUFDQTs7OzhCQUVTRyxFLEVBQUc7QUFDWixhQUFPLEtBQUtILElBQUwsQ0FBVWtCLE1BQVYsQ0FBaUIsVUFBQUMsR0FBRztBQUFBLGVBQUlmLFFBQVEsQ0FBQ2UsR0FBRyxDQUFDaEIsRUFBTCxFQUFRLEVBQVIsQ0FBUixLQUF3QkMsUUFBUSxDQUFDRCxFQUFELEVBQUssRUFBTCxDQUFwQztBQUFBLE9BQXBCLENBQVA7QUFDQTs7O3VDQUVpQjtBQUNoQixhQUFPLEtBQUtILElBQUwsQ0FBVWtCLE1BQVYsQ0FBaUIsVUFBQUMsR0FBRztBQUFBLGVBQUdBLEdBQUcsQ0FBQ1AsTUFBSixLQUFlLFdBQWxCO0FBQUEsT0FBcEIsQ0FBUDtBQUNEOzs7aUNBQ1lRLEcsRUFBS0MsSyxFQUFNO0FBQ3ZCLGFBQU8sS0FBS3JCLElBQUwsQ0FBVXNCLElBQVYsQ0FBZSxVQUFBSCxHQUFHO0FBQUEsZUFBSUEsR0FBRyxDQUFDQyxHQUFELENBQUgsS0FBYUMsS0FBakI7QUFBQSxPQUFsQixDQUFQO0FBQ0E7Ozt1Q0FDa0JELEcsRUFBS0MsSyxFQUFNO0FBQzdCLGFBQU8sS0FBS3JCLElBQUwsQ0FBVXNCLElBQVYsQ0FBZSxVQUFBSCxHQUFHO0FBQUEsZUFBSUEsR0FBRyxDQUFDQyxHQUFELENBQUgsS0FBYUMsS0FBYixJQUFzQkYsR0FBRyxDQUFDUCxNQUFKLEtBQWUsV0FBekM7QUFBQSxPQUFsQixDQUFQO0FBQ0E7OztxQ0FDZ0JXLFEsRUFBVUMsUSxFQUFTO0FBQ25DLGFBQU8sS0FBS3hCLElBQUwsQ0FBVWtCLE1BQVYsQ0FBaUIsVUFBQUMsR0FBRztBQUFBLGVBQUlBLEdBQUcsQ0FBQ04sS0FBSixJQUFhVSxRQUFiLElBQXlCSixHQUFHLENBQUNOLEtBQUosSUFBYVcsUUFBMUM7QUFBQSxPQUFwQixDQUFQO0FBQ0E7Ozs4QkFFU0wsRyxFQUFLO0FBQ1osVUFBTU0sR0FBRyxHQUFHLEtBQUt6QixJQUFMLENBQVUwQixPQUFWLENBQWtCUCxHQUFsQixDQUFaO0FBQ0EsYUFBTyxLQUFLbkIsSUFBTCxDQUFVMkIsTUFBVixDQUFpQkYsR0FBakIsRUFBc0IsQ0FBdEIsQ0FBUDtBQUNEOzs7Ozs7ZUFFWSxJQUFJMUIsR0FBSixFIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0XFxzZXJ2ZXJcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjYXJzRGF0YSBmcm9tICcuLi90ZXN0L21vY2tfZGIvY2Fycyc7XHJcblxyXG4gY2xhc3MgQ2Fye1xyXG5cdGNvbnN0cnVjdG9yKCl7XHJcblx0XHR0aGlzLmNhcnMgPSBjYXJzRGF0YTtcclxuXHR9XHJcblx0XHJcblx0bmV3Q2FyQWQoZGF0YSl7XHJcblx0XHRjb25zdCBpZCA9IHBhcnNlSW50KGNhcnNEYXRhLmxlbmd0aCArIDIyMDAwLCAxMCk7XHJcblx0XHRjb25zdCBjYXJzX2RhdGEgPSB7XHJcblx0XHRcdGlkLFxyXG5cdFx0XHRvd25lcjogZGF0YS5vd25lciB8fCAnJyxcclxuXHRcdCAgICBjcmVhdGVkX29uOiBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCksXHJcblx0XHQgICAgc3RhdGU6IGRhdGEuc3RhdGUgfHwgJycsXHJcblx0XHQgICAgc3RhdHVzOiBkYXRhLnN0YXR1cyB8fCAnYXZhaWxhYmxlJyxcclxuXHRcdCAgICBwcmljZTogZGF0YS5wcmljZSB8fCAwLFxyXG4gICAgICAgICAgICBtYW51ZmFjdHVyZXI6IGRhdGEubWFudWZhY3R1cmVyIHx8ICcnLFxyXG5cdFx0ICAgIG1vZGVsOiBkYXRhLm1vZGVsIHx8ICcnLFxyXG5cdFx0ICAgIGJvZHlfdHlwZTogZGF0YS5ib2R5X3R5cGUgfHwgJycsXHJcblx0XHR9O1xyXG5cdFx0XHR0aGlzLmNhcnMucHVzaChjYXJzX2RhdGEpO1xyXG5cdFx0cmV0dXJuIGNhcnNfZGF0YTtcclxuXHR9XHJcblxyXG5cdFxyXG5cdGdldEFsbENhcnMoKXtcclxuXHRcdHJldHVybiB0aGlzLmNhcnM7XHJcblx0fVxyXG5cclxuXHRmaW5kQ2FyQWQoaWQpe1xyXG5cdFx0cmV0dXJuIHRoaXMuY2Fycy5maWx0ZXIoY2FyID0+IHBhcnNlSW50KGNhci5pZCwxMCkgPT09IHBhcnNlSW50KGlkLCAxMCkpO1xyXG5cdH1cclxuXHJcblx0Z2V0QWxsVW5zb2xkQ2Fycygpe1xyXG5cdCBcdHJldHVybiB0aGlzLmNhcnMuZmlsdGVyKGNhcj0+IGNhci5zdGF0dXMgPT09ICdhdmFpbGFibGUnKTtcclxuXHR9XHJcblx0Z2V0Q2FyQnlQcm9wKGtleSwgdmFsdWUpe1xyXG5cdFx0cmV0dXJuIHRoaXMuY2Fycy5maW5kKGNhciA9PiBjYXJba2V5XSA9PT0gdmFsdWUpO1xyXG5cdH1cclxuXHRnZXRVbnNvbGRDYXJCeVByb3Aoa2V5LCB2YWx1ZSl7XHJcblx0XHRyZXR1cm4gdGhpcy5jYXJzLmZpbmQoY2FyID0+IGNhcltrZXldID09PSB2YWx1ZSAmJiBjYXIuc3RhdHVzID09PSAnYXZhaWxhYmxlJyk7XHJcblx0fVxyXG5cdGdldENhclByaWNlUmFuZ2UobWF4UHJpY2UsIG1pblByaWNlKXtcclxuXHRcdHJldHVybiB0aGlzLmNhcnMuZmlsdGVyKGNhciA9PiBjYXIucHJpY2UgPD0gbWF4UHJpY2UgJiYgY2FyLnByaWNlID49IG1pblByaWNlKTtcclxuXHR9XHJcblx0IFxyXG5cdGRlbGV0ZUNhcihjYXIpIHtcclxuICAgIGNvbnN0IGlkeCA9IHRoaXMuY2Fycy5pbmRleE9mKGNhcik7XHJcbiAgICByZXR1cm4gdGhpcy5jYXJzLnNwbGljZShpZHgsIDEpO1xyXG4gIH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBuZXcgQ2FyKCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "car.js"
      ],
      "names": [
        "Car",
        "cars",
        "carsData",
        "data",
        "id",
        "parseInt",
        "length",
        "cars_data",
        "owner",
        "created_on",
        "Date",
        "toLocaleString",
        "state",
        "status",
        "price",
        "manufacturer",
        "model",
        "body_type",
        "push",
        "filter",
        "car",
        "key",
        "value",
        "find",
        "maxPrice",
        "minPrice",
        "idx",
        "indexOf",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEOA,G;;;AACN,iBAAa;AAAA;;AACZ,SAAKC,IAAL,GAAYC,gBAAZ;AACA;;;;6BAEQC,I,EAAK;AACb,UAAMC,EAAE,GAAGC,QAAQ,CAACH,iBAASI,MAAT,GAAkB,KAAnB,EAA0B,EAA1B,CAAnB;AACA,UAAMC,SAAS,GAAG;AACjBH,QAAAA,EAAE,EAAFA,EADiB;AAEjBI,QAAAA,KAAK,EAAEL,IAAI,CAACK,KAAL,IAAc,EAFJ;AAGdC,QAAAA,UAAU,EAAE,IAAIC,IAAJ,GAAWC,cAAX,EAHE;AAIdC,QAAAA,KAAK,EAAET,IAAI,CAACS,KAAL,IAAc,EAJP;AAKdC,QAAAA,MAAM,EAAEV,IAAI,CAACU,MAAL,IAAe,WALT;AAMdC,QAAAA,KAAK,EAAEX,IAAI,CAACW,KAAL,IAAc,CANP;AAORC,QAAAA,YAAY,EAAEZ,IAAI,CAACY,YAAL,IAAqB,EAP3B;AAQdC,QAAAA,KAAK,EAAEb,IAAI,CAACa,KAAL,IAAc,EARP;AASdC,QAAAA,SAAS,EAAEd,IAAI,CAACc,SAAL,IAAkB;AATf,OAAlB;AAWC,WAAKhB,IAAL,CAAUiB,IAAV,CAAeX,SAAf;AACD,aAAOA,SAAP;AACA;;;iCAGW;AACX,aAAO,KAAKN,IAAZ;AACA;;;8BAESG,E,EAAG;AACZ,aAAO,KAAKH,IAAL,CAAUkB,MAAV,CAAiB,UAAAC,GAAG;AAAA,eAAIf,QAAQ,CAACe,GAAG,CAAChB,EAAL,EAAQ,EAAR,CAAR,KAAwBC,QAAQ,CAACD,EAAD,EAAK,EAAL,CAApC;AAAA,OAApB,CAAP;AACA;;;uCAEiB;AAChB,aAAO,KAAKH,IAAL,CAAUkB,MAAV,CAAiB,UAAAC,GAAG;AAAA,eAAGA,GAAG,CAACP,MAAJ,KAAe,WAAlB;AAAA,OAApB,CAAP;AACD;;;iCACYQ,G,EAAKC,K,EAAM;AACvB,aAAO,KAAKrB,IAAL,CAAUsB,IAAV,CAAe,UAAAH,GAAG;AAAA,eAAIA,GAAG,CAACC,GAAD,CAAH,KAAaC,KAAjB;AAAA,OAAlB,CAAP;AACA;;;uCACkBD,G,EAAKC,K,EAAM;AAC7B,aAAO,KAAKrB,IAAL,CAAUsB,IAAV,CAAe,UAAAH,GAAG;AAAA,eAAIA,GAAG,CAACC,GAAD,CAAH,KAAaC,KAAb,IAAsBF,GAAG,CAACP,MAAJ,KAAe,WAAzC;AAAA,OAAlB,CAAP;AACA;;;qCACgBW,Q,EAAUC,Q,EAAS;AACnC,aAAO,KAAKxB,IAAL,CAAUkB,MAAV,CAAiB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACN,KAAJ,IAAaU,QAAb,IAAyBJ,GAAG,CAACN,KAAJ,IAAaW,QAA1C;AAAA,OAApB,CAAP;AACA;;;8BAESL,G,EAAK;AACZ,UAAMM,GAAG,GAAG,KAAKzB,IAAL,CAAU0B,OAAV,CAAkBP,GAAlB,CAAZ;AACA,aAAO,KAAKnB,IAAL,CAAU2B,MAAV,CAAiBF,GAAjB,EAAsB,CAAtB,CAAP;AACD;;;;;;eAEY,IAAI1B,GAAJ,E",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\models",
      "sourcesContent": [
        "import carsData from '../test/mock_db/cars';\r\n\r\n class Car{\r\n\tconstructor(){\r\n\t\tthis.cars = carsData;\r\n\t}\r\n\t\r\n\tnewCarAd(data){\r\n\t\tconst id = parseInt(carsData.length + 22000, 10);\r\n\t\tconst cars_data = {\r\n\t\t\tid,\r\n\t\t\towner: data.owner || '',\r\n\t\t    created_on: new Date().toLocaleString(),\r\n\t\t    state: data.state || '',\r\n\t\t    status: data.status || 'available',\r\n\t\t    price: data.price || 0,\r\n            manufacturer: data.manufacturer || '',\r\n\t\t    model: data.model || '',\r\n\t\t    body_type: data.body_type || '',\r\n\t\t};\r\n\t\t\tthis.cars.push(cars_data);\r\n\t\treturn cars_data;\r\n\t}\r\n\r\n\t\r\n\tgetAllCars(){\r\n\t\treturn this.cars;\r\n\t}\r\n\r\n\tfindCarAd(id){\r\n\t\treturn this.cars.filter(car => parseInt(car.id,10) === parseInt(id, 10));\r\n\t}\r\n\r\n\tgetAllUnsoldCars(){\r\n\t \treturn this.cars.filter(car=> car.status === 'available');\r\n\t}\r\n\tgetCarByProp(key, value){\r\n\t\treturn this.cars.find(car => car[key] === value);\r\n\t}\r\n\tgetUnsoldCarByProp(key, value){\r\n\t\treturn this.cars.find(car => car[key] === value && car.status === 'available');\r\n\t}\r\n\tgetCarPriceRange(maxPrice, minPrice){\r\n\t\treturn this.cars.filter(car => car.price <= maxPrice && car.price >= minPrice);\r\n\t}\r\n\t \r\n\tdeleteCar(car) {\r\n    const idx = this.cars.indexOf(car);\r\n    return this.cars.splice(idx, 1);\r\n  }\r\n}\r\nexport default new Car();"
      ]
    },
    "sourceType": "script",
    "mtime": 1561857129183
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "mock_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar cars = [{\n  id: 1,\n  owner: 1,\n  createdOn: \"1/5/2013\",\n  manufacturer: \"Honda\",\n  model: \"Accord\",\n  price: 5000000,\n  state: \"New\",\n  bodyType: \"saloon\",\n  year: 2009,\n  status: \"available\"\n}, {\n  id: 2,\n  owner: 2,\n  createdOn: \"11/25/2017\",\n  manufacturer: \"Honda\",\n  model: \"Accord\",\n  price: 4500000,\n  state: \"used\",\n  bodyType: \"wagon\",\n  year: 2016,\n  status: \"sold\"\n}, {\n  id: 3,\n  owner: 3,\n  createdOn: \"7/9/2008\",\n  manufacturer: \"Mercedes\",\n  model: \"c300\",\n  price: 7500000,\n  state: \"used\",\n  bodyType: \"saloon\",\n  year: 2014,\n  status: \"available\"\n}, {\n  id: 4,\n  owner: 4,\n  createdOn: \"6/13/2015\",\n  manufacturer: \"Peugot\",\n  model: \"409\",\n  price: 2000000,\n  state: \"New\",\n  bodyType: \"saloon\",\n  year: 2009,\n  status: \"available\"\n}];\nvar users = [{\n  id: 1,\n  email: \"jason@gmail.com\",\n  firstName: \"Jason\",\n  lastName: \"Trello\",\n  password: \"555SSS777\",\n  address: \"321 upper crest park, New York, USA\",\n  is_admin: true\n}, {\n  id: 2,\n  email: \"dammy@gmail.com\",\n  firstName: \"dammy\",\n  lastName: \"Gonzalez\",\n  password: \"555SSS777\",\n  address: \"R280 wood west park, Milwaukee, USA\",\n  is_admin: false\n}];\nvar orders = [{\n  order_id: 1,\n  buyer: 1,\n  car_id: 1,\n  amount: 3500000,\n  status: \"avaialble\"\n}];\nvar flags = [{\n  flag_id: 1,\n  car_id: 3,\n  createdOn: \"1st May\",\n  reason: \"damaged car\",\n  description: \" ABC Tried to sell a damaged Peugot car to me\"\n}];\nvar _default = {\n  cars: cars,\n  orders: orders,\n  users: users,\n  flags: flags\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vY2tfZGIuanMiXSwibmFtZXMiOlsiY2FycyIsImlkIiwib3duZXIiLCJjcmVhdGVkT24iLCJtYW51ZmFjdHVyZXIiLCJtb2RlbCIsInByaWNlIiwic3RhdGUiLCJib2R5VHlwZSIsInllYXIiLCJzdGF0dXMiLCJ1c2VycyIsImVtYWlsIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJwYXNzd29yZCIsImFkZHJlc3MiLCJpc19hZG1pbiIsIm9yZGVycyIsIm9yZGVyX2lkIiwiYnV5ZXIiLCJjYXJfaWQiLCJhbW91bnQiLCJmbGFncyIsImZsYWdfaWQiLCJyZWFzb24iLCJkZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsSUFBSSxHQUFHLENBR1o7QUFDQ0MsRUFBQUEsRUFBRSxFQUFFLENBREw7QUFFR0MsRUFBQUEsS0FBSyxFQUFFLENBRlY7QUFHSUMsRUFBQUEsU0FBUyxFQUFFLFVBSGY7QUFJSUMsRUFBQUEsWUFBWSxFQUFFLE9BSmxCO0FBS0lDLEVBQUFBLEtBQUssRUFBRSxRQUxYO0FBTUlDLEVBQUFBLEtBQUssRUFBRSxPQU5YO0FBT0lDLEVBQUFBLEtBQUssRUFBRSxLQVBYO0FBUUlDLEVBQUFBLFFBQVEsRUFBRSxRQVJkO0FBU0lDLEVBQUFBLElBQUksRUFBRSxJQVRWO0FBVUlDLEVBQUFBLE1BQU0sRUFBRTtBQVZaLENBSFksRUFlWjtBQUNDVCxFQUFBQSxFQUFFLEVBQUUsQ0FETDtBQUVHQyxFQUFBQSxLQUFLLEVBQUUsQ0FGVjtBQUdJQyxFQUFBQSxTQUFTLEVBQUUsWUFIZjtBQUlJQyxFQUFBQSxZQUFZLEVBQUUsT0FKbEI7QUFLSUMsRUFBQUEsS0FBSyxFQUFFLFFBTFg7QUFNSUMsRUFBQUEsS0FBSyxFQUFFLE9BTlg7QUFPSUMsRUFBQUEsS0FBSyxFQUFFLE1BUFg7QUFRSUMsRUFBQUEsUUFBUSxFQUFFLE9BUmQ7QUFTSUMsRUFBQUEsSUFBSSxFQUFFLElBVFY7QUFVSUMsRUFBQUEsTUFBTSxFQUFFO0FBVlosQ0FmWSxFQTJCWjtBQUNDVCxFQUFBQSxFQUFFLEVBQUUsQ0FETDtBQUVHQyxFQUFBQSxLQUFLLEVBQUUsQ0FGVjtBQUdJQyxFQUFBQSxTQUFTLEVBQUUsVUFIZjtBQUlJQyxFQUFBQSxZQUFZLEVBQUUsVUFKbEI7QUFLSUMsRUFBQUEsS0FBSyxFQUFFLE1BTFg7QUFNSUMsRUFBQUEsS0FBSyxFQUFFLE9BTlg7QUFPSUMsRUFBQUEsS0FBSyxFQUFFLE1BUFg7QUFRSUMsRUFBQUEsUUFBUSxFQUFFLFFBUmQ7QUFTSUMsRUFBQUEsSUFBSSxFQUFFLElBVFY7QUFVSUMsRUFBQUEsTUFBTSxFQUFFO0FBVlosQ0EzQlksRUF1Q1o7QUFDQ1QsRUFBQUEsRUFBRSxFQUFFLENBREw7QUFFR0MsRUFBQUEsS0FBSyxFQUFFLENBRlY7QUFHSUMsRUFBQUEsU0FBUyxFQUFFLFdBSGY7QUFJSUMsRUFBQUEsWUFBWSxFQUFFLFFBSmxCO0FBS0lDLEVBQUFBLEtBQUssRUFBRSxLQUxYO0FBTUlDLEVBQUFBLEtBQUssRUFBRSxPQU5YO0FBT0lDLEVBQUFBLEtBQUssRUFBRSxLQVBYO0FBUUlDLEVBQUFBLFFBQVEsRUFBRSxRQVJkO0FBU0lDLEVBQUFBLElBQUksRUFBRSxJQVRWO0FBVUlDLEVBQUFBLE1BQU0sRUFBRTtBQVZaLENBdkNZLENBQWI7QUFzREEsSUFBTUMsS0FBSyxHQUFHLENBQ2I7QUFFQ1YsRUFBQUEsRUFBRSxFQUFFLENBRkw7QUFHQ1csRUFBQUEsS0FBSyxFQUFFLGlCQUhSO0FBSUlDLEVBQUFBLFNBQVMsRUFBRSxPQUpmO0FBS0lDLEVBQUFBLFFBQVEsRUFBRSxRQUxkO0FBTUlDLEVBQUFBLFFBQVEsRUFBRSxXQU5kO0FBT0lDLEVBQUFBLE9BQU8sRUFBRSxxQ0FQYjtBQVFJQyxFQUFBQSxRQUFRLEVBQUU7QUFSZCxDQURhLEVBWWI7QUFFQ2hCLEVBQUFBLEVBQUUsRUFBRSxDQUZMO0FBR0NXLEVBQUFBLEtBQUssRUFBRSxpQkFIUjtBQUlJQyxFQUFBQSxTQUFTLEVBQUUsT0FKZjtBQUtJQyxFQUFBQSxRQUFRLEVBQUUsVUFMZDtBQU1JQyxFQUFBQSxRQUFRLEVBQUUsV0FOZDtBQU9JQyxFQUFBQSxPQUFPLEVBQUUscUNBUGI7QUFRSUMsRUFBQUEsUUFBUSxFQUFFO0FBUmQsQ0FaYSxDQUFkO0FBd0JBLElBQU1DLE1BQU0sR0FBRyxDQUNkO0FBQ0NDLEVBQUFBLFFBQVEsRUFBRSxDQURYO0FBRUNDLEVBQUFBLEtBQUssRUFBRSxDQUZSO0FBR0lDLEVBQUFBLE1BQU0sRUFBRSxDQUhaO0FBSUlDLEVBQUFBLE1BQU0sRUFBRSxPQUpaO0FBS0laLEVBQUFBLE1BQU0sRUFBRTtBQUxaLENBRGMsQ0FBZjtBQVVBLElBQU1hLEtBQUssR0FBRyxDQUNiO0FBQ0NDLEVBQUFBLE9BQU8sRUFBRSxDQURWO0FBRUNILEVBQUFBLE1BQU0sRUFBRSxDQUZUO0FBR0lsQixFQUFBQSxTQUFTLEVBQUUsU0FIZjtBQUlJc0IsRUFBQUEsTUFBTSxFQUFFLGFBSlo7QUFLSUMsRUFBQUEsV0FBVyxFQUFFO0FBTGpCLENBRGEsQ0FBZDtlQVVnQjtBQUFDMUIsRUFBQUEsSUFBSSxFQUFKQSxJQUFEO0FBQU9rQixFQUFBQSxNQUFNLEVBQU5BLE1BQVA7QUFBZVAsRUFBQUEsS0FBSyxFQUFMQSxLQUFmO0FBQXNCWSxFQUFBQSxLQUFLLEVBQUxBO0FBQXRCLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxFcmljIElidVxcZGVza3RvcFxcYXV0b21hcnRcXHNlcnZlclxcdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNhcnMgPSBbXHJcblxyXG5cdFxyXG5cdHtcclxuXHRcdGlkOlx0MSxcclxuXHQgIFx0b3duZXI6IDEsXHJcblx0ICAgIGNyZWF0ZWRPbjogXCIxLzUvMjAxM1wiLFxyXG5cdCAgICBtYW51ZmFjdHVyZXI6IFwiSG9uZGFcIixcclxuXHQgICAgbW9kZWw6IFwiQWNjb3JkXCIsXHJcblx0ICAgIHByaWNlOiA1MDAwMDAwLFxyXG5cdCAgICBzdGF0ZTogXCJOZXdcIixcclxuXHQgICAgYm9keVR5cGU6IFwic2Fsb29uXCIsXHJcblx0ICAgIHllYXI6IDIwMDksXHJcblx0ICAgIHN0YXR1czogXCJhdmFpbGFibGVcIlxyXG5cdH0sXHJcblx0e1xyXG5cdFx0aWQ6XHQyLFxyXG5cdCAgXHRvd25lcjogMixcclxuXHQgICAgY3JlYXRlZE9uOiBcIjExLzI1LzIwMTdcIixcclxuXHQgICAgbWFudWZhY3R1cmVyOiBcIkhvbmRhXCIsXHJcblx0ICAgIG1vZGVsOiBcIkFjY29yZFwiLFxyXG5cdCAgICBwcmljZTogNDUwMDAwMCxcclxuXHQgICAgc3RhdGU6IFwidXNlZFwiLFxyXG5cdCAgICBib2R5VHlwZTogXCJ3YWdvblwiLFxyXG5cdCAgICB5ZWFyOiAyMDE2LFxyXG5cdCAgICBzdGF0dXM6IFwic29sZFwiXHJcblx0fSxcclxuXHR7XHJcblx0XHRpZDpcdDMsXHJcblx0ICBcdG93bmVyOiAzLFxyXG5cdCAgICBjcmVhdGVkT246IFwiNy85LzIwMDhcIixcclxuXHQgICAgbWFudWZhY3R1cmVyOiBcIk1lcmNlZGVzXCIsXHJcblx0ICAgIG1vZGVsOiBcImMzMDBcIixcclxuXHQgICAgcHJpY2U6IDc1MDAwMDAsXHJcblx0ICAgIHN0YXRlOiBcInVzZWRcIixcclxuXHQgICAgYm9keVR5cGU6IFwic2Fsb29uXCIsXHJcblx0ICAgIHllYXI6IDIwMTQsXHJcblx0ICAgIHN0YXR1czogXCJhdmFpbGFibGVcIlxyXG5cdH0sXHJcblx0e1xyXG5cdFx0aWQ6XHQ0LFxyXG5cdCAgXHRvd25lcjogNCxcclxuXHQgICAgY3JlYXRlZE9uOiBcIjYvMTMvMjAxNVwiLFxyXG5cdCAgICBtYW51ZmFjdHVyZXI6IFwiUGV1Z290XCIsXHJcblx0ICAgIG1vZGVsOiBcIjQwOVwiLFxyXG5cdCAgICBwcmljZTogMjAwMDAwMCxcclxuXHQgICAgc3RhdGU6IFwiTmV3XCIsXHJcblx0ICAgIGJvZHlUeXBlOiBcInNhbG9vblwiLFxyXG5cdCAgICB5ZWFyOiAyMDA5LFxyXG5cdCAgICBzdGF0dXM6IFwiYXZhaWxhYmxlXCJcclxuXHR9XHJcblxyXG5dO1xyXG5cclxuY29uc3QgdXNlcnMgPSBbXHJcblx0e1xyXG5cdFxyXG5cdFx0aWQ6XHQxLFxyXG5cdFx0ZW1haWw6IFwiamFzb25AZ21haWwuY29tXCIsXHJcblx0ICAgIGZpcnN0TmFtZTogXCJKYXNvblwiLFxyXG5cdCAgICBsYXN0TmFtZTogXCJUcmVsbG9cIixcclxuXHQgICAgcGFzc3dvcmQ6IFwiNTU1U1NTNzc3XCIsXHJcblx0ICAgIGFkZHJlc3M6IFwiMzIxIHVwcGVyIGNyZXN0IHBhcmssIE5ldyBZb3JrLCBVU0FcIixcclxuXHQgICAgaXNfYWRtaW46IHRydWVcclxuXHRcclxuXHR9LFxyXG5cdHtcclxuXHRcclxuXHRcdGlkOlx0MixcclxuXHRcdGVtYWlsOiBcImRhbW15QGdtYWlsLmNvbVwiLFxyXG5cdCAgICBmaXJzdE5hbWU6IFwiZGFtbXlcIixcclxuXHQgICAgbGFzdE5hbWU6IFwiR29uemFsZXpcIixcclxuXHQgICAgcGFzc3dvcmQ6IFwiNTU1U1NTNzc3XCIsXHJcblx0ICAgIGFkZHJlc3M6IFwiUjI4MCB3b29kIHdlc3QgcGFyaywgTWlsd2F1a2VlLCBVU0FcIixcclxuXHQgICAgaXNfYWRtaW46IGZhbHNlXHJcblx0XHJcblx0fVxyXG5dO1xyXG5jb25zdCBvcmRlcnMgPSBbXHJcblx0e1xyXG5cdFx0b3JkZXJfaWQ6XHQxLFxyXG5cdFx0YnV5ZXI6IDEsXHJcblx0ICAgIGNhcl9pZDogMSxcclxuXHQgICAgYW1vdW50OiAzNTAwMDAwLFxyXG5cdCAgICBzdGF0dXM6IFwiYXZhaWFsYmxlXCIsXHJcblx0fVxyXG5dO1xyXG5cclxuY29uc3QgZmxhZ3MgPSBbXHJcblx0e1xyXG5cdFx0ZmxhZ19pZDpcdDEsXHJcblx0XHRjYXJfaWQ6IDMsXHJcblx0ICAgIGNyZWF0ZWRPbjogXCIxc3QgTWF5XCIsXHJcblx0ICAgIHJlYXNvbjogXCJkYW1hZ2VkIGNhclwiLFxyXG5cdCAgICBkZXNjcmlwdGlvbjogXCIgQUJDIFRyaWVkIHRvIHNlbGwgYSBkYW1hZ2VkIFBldWdvdCBjYXIgdG8gbWVcIlxyXG5cdH1cclxuXTtcclxuXHJcbiBleHBvcnQgZGVmYXVsdCB7Y2Fycywgb3JkZXJzLCB1c2VycywgZmxhZ3N9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mock_db.js"
      ],
      "names": [
        "cars",
        "id",
        "owner",
        "createdOn",
        "manufacturer",
        "model",
        "price",
        "state",
        "bodyType",
        "year",
        "status",
        "users",
        "email",
        "firstName",
        "lastName",
        "password",
        "address",
        "is_admin",
        "orders",
        "order_id",
        "buyer",
        "car_id",
        "amount",
        "flags",
        "flag_id",
        "reason",
        "description"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "const cars = [\r\n\r\n\t\r\n\t{\r\n\t\tid:\t1,\r\n\t  \towner: 1,\r\n\t    createdOn: \"1/5/2013\",\r\n\t    manufacturer: \"Honda\",\r\n\t    model: \"Accord\",\r\n\t    price: 5000000,\r\n\t    state: \"New\",\r\n\t    bodyType: \"saloon\",\r\n\t    year: 2009,\r\n\t    status: \"available\"\r\n\t},\r\n\t{\r\n\t\tid:\t2,\r\n\t  \towner: 2,\r\n\t    createdOn: \"11/25/2017\",\r\n\t    manufacturer: \"Honda\",\r\n\t    model: \"Accord\",\r\n\t    price: 4500000,\r\n\t    state: \"used\",\r\n\t    bodyType: \"wagon\",\r\n\t    year: 2016,\r\n\t    status: \"sold\"\r\n\t},\r\n\t{\r\n\t\tid:\t3,\r\n\t  \towner: 3,\r\n\t    createdOn: \"7/9/2008\",\r\n\t    manufacturer: \"Mercedes\",\r\n\t    model: \"c300\",\r\n\t    price: 7500000,\r\n\t    state: \"used\",\r\n\t    bodyType: \"saloon\",\r\n\t    year: 2014,\r\n\t    status: \"available\"\r\n\t},\r\n\t{\r\n\t\tid:\t4,\r\n\t  \towner: 4,\r\n\t    createdOn: \"6/13/2015\",\r\n\t    manufacturer: \"Peugot\",\r\n\t    model: \"409\",\r\n\t    price: 2000000,\r\n\t    state: \"New\",\r\n\t    bodyType: \"saloon\",\r\n\t    year: 2009,\r\n\t    status: \"available\"\r\n\t}\r\n\r\n];\r\n\r\nconst users = [\r\n\t{\r\n\t\r\n\t\tid:\t1,\r\n\t\temail: \"jason@gmail.com\",\r\n\t    firstName: \"Jason\",\r\n\t    lastName: \"Trello\",\r\n\t    password: \"555SSS777\",\r\n\t    address: \"321 upper crest park, New York, USA\",\r\n\t    is_admin: true\r\n\t\r\n\t},\r\n\t{\r\n\t\r\n\t\tid:\t2,\r\n\t\temail: \"dammy@gmail.com\",\r\n\t    firstName: \"dammy\",\r\n\t    lastName: \"Gonzalez\",\r\n\t    password: \"555SSS777\",\r\n\t    address: \"R280 wood west park, Milwaukee, USA\",\r\n\t    is_admin: false\r\n\t\r\n\t}\r\n];\r\nconst orders = [\r\n\t{\r\n\t\torder_id:\t1,\r\n\t\tbuyer: 1,\r\n\t    car_id: 1,\r\n\t    amount: 3500000,\r\n\t    status: \"avaialble\",\r\n\t}\r\n];\r\n\r\nconst flags = [\r\n\t{\r\n\t\tflag_id:\t1,\r\n\t\tcar_id: 3,\r\n\t    createdOn: \"1st May\",\r\n\t    reason: \"damaged car\",\r\n\t    description: \" ABC Tried to sell a damaged Peugot car to me\"\r\n\t}\r\n];\r\n\r\n export default {cars, orders, users, flags};"
      ]
    },
    "sourceType": "script",
    "mtime": 1561845381122
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\user-spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\user-spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\user-spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\user-spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
        "sourceFileName": "user-spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _users = _interopRequireDefault(require(\"../test/mock_db/users\"));\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar expect = _chai[\"default\"].expect,\n    assert = _chai[\"default\"].assert;\ndescribe('user Endpoint', function () {\n  describe('user can signup', function () {\n    it('should create user account', function () {\n      var data = {\n        id: 1,\n        first_name: \"Jason\",\n        last_name: \"Trello\",\n        email: \"jason@gmail.com\",\n        password: \"555SSS777\",\n        address: \"321 upper crest park, New York, USA\",\n        isAdmin: true\n      };\n      var user = users.createUser(data);\n      expect(user).to.have.property('id');\n      expect(user).to.have.property('email').eq(data.email);\n      expect(user.first_name).to.equal(data.first_name);\n      expect(user.last_name).to.equal(data.last_name);\n    });\n  });\n  describe('Get all users', function () {\n    it('should return all users', function () {\n      User.users = _users[\"default\"];\n      var users = UserModel.getAllUsers();\n      expect(users).to.be.an('Array');\n      expect(users.length).to.eq(usersdata.length);\n    });\n  });\n  describe('Get user by first_name', function () {\n    it('should return a user\\'s first_name', function () {\n      User.users = _users[\"default\"];\n      var user = User.findByFirstName('Jason');\n      expect(user).to.have.property('first_name').to.eq('Jason');\n    });\n  });\n  describe('Get user by email', function () {\n    it('should return a user\\'s email', function () {\n      User.users = _users[\"default\"];\n      var user = User.findByEmail('jason@gmail.com');\n      expect(user).to.have.property('email').to.equal('jason@gmail.com');\n    });\n  });\n  describe('Get a User', function () {\n    it('should return a user based on id', function () {\n      User.users = _users[\"default\"];\n      var userId = _users[\"default\"][0].id;\n      var user = User.getUser(userId);\n      expect(user).to.be.an('Object');\n      expect(user).to.have.property('first_name').eq(_users[\"default\"][0].first_name);\n    });\n  });\n  describe('Get Admin User', function () {\n    it('should make a user an admin', function () {\n      User.users = _users[\"default\"];\n      _users[\"default\"][0].is_admin = true;\n      var admin = _users[\"default\"][0];\n      expect(admin).to.be.an('Object');\n      expect(admin.is_admin).to.be[\"true\"];\n    });\n  });\n  describe('Delete User', function () {\n    it('should delete a user', function () {\n      _users[\"default\"][0].status = 'registered';\n      User.users = _users[\"default\"];\n      var deleteUser = User.deleteUser(_users[\"default\"][0].id);\n      expect(deleteUser.id).to.eq(_users[\"default\"][0].id);\n      expect(deleteUser.status).to.eq('deleted');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user-spec.js"
      ],
      "names": [
        "expect",
        "chai",
        "assert",
        "describe",
        "it",
        "data",
        "id",
        "first_name",
        "last_name",
        "email",
        "password",
        "address",
        "isAdmin",
        "user",
        "users",
        "createUser",
        "to",
        "have",
        "property",
        "eq",
        "equal",
        "User",
        "usersData",
        "UserModel",
        "getAllUsers",
        "be",
        "an",
        "length",
        "usersdata",
        "findByFirstName",
        "findByEmail",
        "userId",
        "getUser",
        "is_admin",
        "admin",
        "status",
        "deleteUser"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test",
      "sourcesContent": [
        "import usersData from '../test/mock_db/users';\r\nimport chai from 'chai';\r\n\r\nconst { expect, assert } = chai;\r\n\r\ndescribe('user Endpoint', () =>{\r\n\tdescribe('user can signup', () =>{\r\n\t\tit('should create user account', () => {\r\n\t\t\tconst data = {\r\n\t\t\t\tid : 1,\r\n\t\t\t\tfirst_name:  \"Jason\",\r\n\t\t\t\tlast_name: \"Trello\",\r\n\t\t\t\temail: \"jason@gmail.com\",\r\n\t\t\t\tpassword: \"555SSS777\",\r\n\t\t\t\taddress: \"321 upper crest park, New York, USA\",\r\n\t\t\t\tisAdmin: true\r\n\t\t\t};\r\n\t\t\t\tconst user = users.createUser(data);\r\n\t\t\t\texpect(user).to.have.property('id');\r\n\t\t        expect(user).to.have.property('email').eq(data.email);\r\n\t\t        expect(user.first_name).to.equal(data.first_name);\r\n\t\t        expect(user.last_name).to.equal(data.last_name);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('Get all users', () => {\r\n    it('should return all users', () => {\r\n      User.users = usersData;\r\n      const users = UserModel.getAllUsers();\r\n      expect(users).to.be.an('Array');\r\n      expect(users.length).to.eq(usersdata.length);\r\n    });\r\n  });\r\n\r\n\tdescribe('Get user by first_name', () => {\r\n    it('should return a user\\'s first_name', () => {\r\n      User.users = usersData;\r\n      const user = User.findByFirstName('Jason');\r\n      expect(user).to.have.property('first_name').to.eq('Jason');\r\n    });\r\n  });\r\n  \r\n  describe('Get user by email', () => {\r\n    it('should return a user\\'s email', () => {\r\n      User.users = usersData;\r\n      const user = User.findByEmail('jason@gmail.com');\r\n      expect(user).to.have.property('email').to.equal('jason@gmail.com');\r\n    });\r\n  });\r\n\r\n  describe('Get a User', () => {\r\n    it('should return a user based on id', () => {\r\n      User.users = usersData;\r\n\r\n      const userId = usersData[0].id;\r\n      const user = User.getUser(userId);\r\n      expect(user).to.be.an('Object');\r\n      expect(user).to.have.property('first_name').eq(usersData[0].first_name);\r\n    });\r\n  });\r\n\r\n  describe('Get Admin User', () => {\r\n    it('should make a user an admin', () => {\r\n      User.users = usersData;\r\n      usersData[0].is_admin = true;\r\n\r\n      const admin = usersData[0];\r\n      expect(admin).to.be.an('Object');\r\n      expect(admin.is_admin).to.be.true;\r\n    });\r\n  });\r\n\r\n  describe('Delete User', () => {\r\n    it('should delete a user', () => {\r\n      usersData[0].status = 'registered';\r\n      User.users = usersData;\r\n\r\n      const deleteUser = User.deleteUser(usersData[0].id);\r\n      expect(deleteUser.id).to.eq(usersData[0].id);\r\n      expect(deleteUser.status).to.eq('deleted');\r\n    });\r\n  });\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1561859461514
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\\\\cars.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\cars.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\cars.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\cars.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
        "sourceFileName": "cars.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar cars = [{\n  id: 1,\n  owner: 1,\n  createdOn: \"1/5/2013\",\n  manufacturer: \"Honda\",\n  model: \"Accord\",\n  price: 5000000,\n  state: \"New\",\n  bodyType: \"saloon\",\n  year: 2009,\n  status: \"available\"\n}, {\n  id: 2,\n  owner: 2,\n  createdOn: \"11/25/2017\",\n  manufacturer: \"Honda\",\n  model: \"Accord\",\n  price: 4500000,\n  state: \"used\",\n  bodyType: \"wagon\",\n  year: 2016,\n  status: \"sold\"\n}, {\n  id: 3,\n  owner: 3,\n  createdOn: \"7/9/2008\",\n  manufacturer: \"Mercedes\",\n  model: \"c300\",\n  price: 7500000,\n  state: \"used\",\n  bodyType: \"saloon\",\n  year: 2014,\n  status: \"available\"\n}, {\n  id: 4,\n  owner: 4,\n  createdOn: \"6/13/2015\",\n  manufacturer: \"Peugot\",\n  model: \"409\",\n  price: 2000000,\n  state: \"New\",\n  bodyType: \"saloon\",\n  year: 2009,\n  status: \"available\"\n}];\nvar _default = cars;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcnMuanMiXSwibmFtZXMiOlsiY2FycyIsImlkIiwib3duZXIiLCJjcmVhdGVkT24iLCJtYW51ZmFjdHVyZXIiLCJtb2RlbCIsInByaWNlIiwic3RhdGUiLCJib2R5VHlwZSIsInllYXIiLCJzdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLElBQUksR0FBRyxDQUdaO0FBQ0NDLEVBQUFBLEVBQUUsRUFBRSxDQURMO0FBRUdDLEVBQUFBLEtBQUssRUFBRSxDQUZWO0FBR0lDLEVBQUFBLFNBQVMsRUFBRSxVQUhmO0FBSUlDLEVBQUFBLFlBQVksRUFBRSxPQUpsQjtBQUtJQyxFQUFBQSxLQUFLLEVBQUUsUUFMWDtBQU1JQyxFQUFBQSxLQUFLLEVBQUUsT0FOWDtBQU9JQyxFQUFBQSxLQUFLLEVBQUUsS0FQWDtBQVFJQyxFQUFBQSxRQUFRLEVBQUUsUUFSZDtBQVNJQyxFQUFBQSxJQUFJLEVBQUUsSUFUVjtBQVVJQyxFQUFBQSxNQUFNLEVBQUU7QUFWWixDQUhZLEVBZVo7QUFDQ1QsRUFBQUEsRUFBRSxFQUFFLENBREw7QUFFR0MsRUFBQUEsS0FBSyxFQUFFLENBRlY7QUFHSUMsRUFBQUEsU0FBUyxFQUFFLFlBSGY7QUFJSUMsRUFBQUEsWUFBWSxFQUFFLE9BSmxCO0FBS0lDLEVBQUFBLEtBQUssRUFBRSxRQUxYO0FBTUlDLEVBQUFBLEtBQUssRUFBRSxPQU5YO0FBT0lDLEVBQUFBLEtBQUssRUFBRSxNQVBYO0FBUUlDLEVBQUFBLFFBQVEsRUFBRSxPQVJkO0FBU0lDLEVBQUFBLElBQUksRUFBRSxJQVRWO0FBVUlDLEVBQUFBLE1BQU0sRUFBRTtBQVZaLENBZlksRUEyQlo7QUFDQ1QsRUFBQUEsRUFBRSxFQUFFLENBREw7QUFFR0MsRUFBQUEsS0FBSyxFQUFFLENBRlY7QUFHSUMsRUFBQUEsU0FBUyxFQUFFLFVBSGY7QUFJSUMsRUFBQUEsWUFBWSxFQUFFLFVBSmxCO0FBS0lDLEVBQUFBLEtBQUssRUFBRSxNQUxYO0FBTUlDLEVBQUFBLEtBQUssRUFBRSxPQU5YO0FBT0lDLEVBQUFBLEtBQUssRUFBRSxNQVBYO0FBUUlDLEVBQUFBLFFBQVEsRUFBRSxRQVJkO0FBU0lDLEVBQUFBLElBQUksRUFBRSxJQVRWO0FBVUlDLEVBQUFBLE1BQU0sRUFBRTtBQVZaLENBM0JZLEVBdUNaO0FBQ0NULEVBQUFBLEVBQUUsRUFBRSxDQURMO0FBRUdDLEVBQUFBLEtBQUssRUFBRSxDQUZWO0FBR0lDLEVBQUFBLFNBQVMsRUFBRSxXQUhmO0FBSUlDLEVBQUFBLFlBQVksRUFBRSxRQUpsQjtBQUtJQyxFQUFBQSxLQUFLLEVBQUUsS0FMWDtBQU1JQyxFQUFBQSxLQUFLLEVBQUUsT0FOWDtBQU9JQyxFQUFBQSxLQUFLLEVBQUUsS0FQWDtBQVFJQyxFQUFBQSxRQUFRLEVBQUUsUUFSZDtBQVNJQyxFQUFBQSxJQUFJLEVBQUUsSUFUVjtBQVVJQyxFQUFBQSxNQUFNLEVBQUU7QUFWWixDQXZDWSxDQUFiO2VBcURlVixJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRXJpYyBJYnVcXGRlc2t0b3BcXGF1dG9tYXJ0XFxzZXJ2ZXJcXHRlc3RcXG1vY2tfZGIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjYXJzID0gW1xyXG5cclxuXHRcclxuXHR7XHJcblx0XHRpZDpcdDEsXHJcblx0ICBcdG93bmVyOiAxLFxyXG5cdCAgICBjcmVhdGVkT246IFwiMS81LzIwMTNcIixcclxuXHQgICAgbWFudWZhY3R1cmVyOiBcIkhvbmRhXCIsXHJcblx0ICAgIG1vZGVsOiBcIkFjY29yZFwiLFxyXG5cdCAgICBwcmljZTogNTAwMDAwMCxcclxuXHQgICAgc3RhdGU6IFwiTmV3XCIsXHJcblx0ICAgIGJvZHlUeXBlOiBcInNhbG9vblwiLFxyXG5cdCAgICB5ZWFyOiAyMDA5LFxyXG5cdCAgICBzdGF0dXM6IFwiYXZhaWxhYmxlXCJcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOlx0MixcclxuXHQgIFx0b3duZXI6IDIsXHJcblx0ICAgIGNyZWF0ZWRPbjogXCIxMS8yNS8yMDE3XCIsXHJcblx0ICAgIG1hbnVmYWN0dXJlcjogXCJIb25kYVwiLFxyXG5cdCAgICBtb2RlbDogXCJBY2NvcmRcIixcclxuXHQgICAgcHJpY2U6IDQ1MDAwMDAsXHJcblx0ICAgIHN0YXRlOiBcInVzZWRcIixcclxuXHQgICAgYm9keVR5cGU6IFwid2Fnb25cIixcclxuXHQgICAgeWVhcjogMjAxNixcclxuXHQgICAgc3RhdHVzOiBcInNvbGRcIlxyXG5cdH0sXHJcblx0e1xyXG5cdFx0aWQ6XHQzLFxyXG5cdCAgXHRvd25lcjogMyxcclxuXHQgICAgY3JlYXRlZE9uOiBcIjcvOS8yMDA4XCIsXHJcblx0ICAgIG1hbnVmYWN0dXJlcjogXCJNZXJjZWRlc1wiLFxyXG5cdCAgICBtb2RlbDogXCJjMzAwXCIsXHJcblx0ICAgIHByaWNlOiA3NTAwMDAwLFxyXG5cdCAgICBzdGF0ZTogXCJ1c2VkXCIsXHJcblx0ICAgIGJvZHlUeXBlOiBcInNhbG9vblwiLFxyXG5cdCAgICB5ZWFyOiAyMDE0LFxyXG5cdCAgICBzdGF0dXM6IFwiYXZhaWxhYmxlXCJcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOlx0NCxcclxuXHQgIFx0b3duZXI6IDQsXHJcblx0ICAgIGNyZWF0ZWRPbjogXCI2LzEzLzIwMTVcIixcclxuXHQgICAgbWFudWZhY3R1cmVyOiBcIlBldWdvdFwiLFxyXG5cdCAgICBtb2RlbDogXCI0MDlcIixcclxuXHQgICAgcHJpY2U6IDIwMDAwMDAsXHJcblx0ICAgIHN0YXRlOiBcIk5ld1wiLFxyXG5cdCAgICBib2R5VHlwZTogXCJzYWxvb25cIixcclxuXHQgICAgeWVhcjogMjAwOSxcclxuXHQgICAgc3RhdHVzOiBcImF2YWlsYWJsZVwiXHJcblx0fVxyXG5cclxuXTtcclxuZXhwb3J0IGRlZmF1bHQgY2FyczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cars.js"
      ],
      "names": [
        "cars",
        "id",
        "owner",
        "createdOn",
        "manufacturer",
        "model",
        "price",
        "state",
        "bodyType",
        "year",
        "status"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,IAAI,GAAG,CAGZ;AACCC,EAAAA,EAAE,EAAE,CADL;AAEGC,EAAAA,KAAK,EAAE,CAFV;AAGIC,EAAAA,SAAS,EAAE,UAHf;AAIIC,EAAAA,YAAY,EAAE,OAJlB;AAKIC,EAAAA,KAAK,EAAE,QALX;AAMIC,EAAAA,KAAK,EAAE,OANX;AAOIC,EAAAA,KAAK,EAAE,KAPX;AAQIC,EAAAA,QAAQ,EAAE,QARd;AASIC,EAAAA,IAAI,EAAE,IATV;AAUIC,EAAAA,MAAM,EAAE;AAVZ,CAHY,EAeZ;AACCT,EAAAA,EAAE,EAAE,CADL;AAEGC,EAAAA,KAAK,EAAE,CAFV;AAGIC,EAAAA,SAAS,EAAE,YAHf;AAIIC,EAAAA,YAAY,EAAE,OAJlB;AAKIC,EAAAA,KAAK,EAAE,QALX;AAMIC,EAAAA,KAAK,EAAE,OANX;AAOIC,EAAAA,KAAK,EAAE,MAPX;AAQIC,EAAAA,QAAQ,EAAE,OARd;AASIC,EAAAA,IAAI,EAAE,IATV;AAUIC,EAAAA,MAAM,EAAE;AAVZ,CAfY,EA2BZ;AACCT,EAAAA,EAAE,EAAE,CADL;AAEGC,EAAAA,KAAK,EAAE,CAFV;AAGIC,EAAAA,SAAS,EAAE,UAHf;AAIIC,EAAAA,YAAY,EAAE,UAJlB;AAKIC,EAAAA,KAAK,EAAE,MALX;AAMIC,EAAAA,KAAK,EAAE,OANX;AAOIC,EAAAA,KAAK,EAAE,MAPX;AAQIC,EAAAA,QAAQ,EAAE,QARd;AASIC,EAAAA,IAAI,EAAE,IATV;AAUIC,EAAAA,MAAM,EAAE;AAVZ,CA3BY,EAuCZ;AACCT,EAAAA,EAAE,EAAE,CADL;AAEGC,EAAAA,KAAK,EAAE,CAFV;AAGIC,EAAAA,SAAS,EAAE,WAHf;AAIIC,EAAAA,YAAY,EAAE,QAJlB;AAKIC,EAAAA,KAAK,EAAE,KALX;AAMIC,EAAAA,KAAK,EAAE,OANX;AAOIC,EAAAA,KAAK,EAAE,KAPX;AAQIC,EAAAA,QAAQ,EAAE,QARd;AASIC,EAAAA,IAAI,EAAE,IATV;AAUIC,EAAAA,MAAM,EAAE;AAVZ,CAvCY,CAAb;eAqDeV,I",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "sourcesContent": [
        "const cars = [\r\n\r\n\t\r\n\t{\r\n\t\tid:\t1,\r\n\t  \towner: 1,\r\n\t    createdOn: \"1/5/2013\",\r\n\t    manufacturer: \"Honda\",\r\n\t    model: \"Accord\",\r\n\t    price: 5000000,\r\n\t    state: \"New\",\r\n\t    bodyType: \"saloon\",\r\n\t    year: 2009,\r\n\t    status: \"available\"\r\n\t},\r\n\t{\r\n\t\tid:\t2,\r\n\t  \towner: 2,\r\n\t    createdOn: \"11/25/2017\",\r\n\t    manufacturer: \"Honda\",\r\n\t    model: \"Accord\",\r\n\t    price: 4500000,\r\n\t    state: \"used\",\r\n\t    bodyType: \"wagon\",\r\n\t    year: 2016,\r\n\t    status: \"sold\"\r\n\t},\r\n\t{\r\n\t\tid:\t3,\r\n\t  \towner: 3,\r\n\t    createdOn: \"7/9/2008\",\r\n\t    manufacturer: \"Mercedes\",\r\n\t    model: \"c300\",\r\n\t    price: 7500000,\r\n\t    state: \"used\",\r\n\t    bodyType: \"saloon\",\r\n\t    year: 2014,\r\n\t    status: \"available\"\r\n\t},\r\n\t{\r\n\t\tid:\t4,\r\n\t  \towner: 4,\r\n\t    createdOn: \"6/13/2015\",\r\n\t    manufacturer: \"Peugot\",\r\n\t    model: \"409\",\r\n\t    price: 2000000,\r\n\t    state: \"New\",\r\n\t    bodyType: \"saloon\",\r\n\t    year: 2009,\r\n\t    status: \"available\"\r\n\t}\r\n\r\n];\r\nexport default cars;"
      ]
    },
    "sourceType": "script",
    "mtime": 1561848332528
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"filename\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\\\\server\\\\test\\\\mock_db\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Eric Ibu\\\\desktop\\\\automart\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Eric Ibu\\desktop\\automart",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar users = [{\n  id: 1,\n  email: \"jason@gmail.com\",\n  firstName: \"Jason\",\n  lastName: \"Trello\",\n  password: \"555SSS777\",\n  address: \"321 upper crest park, New York, USA\",\n  is_admin: true,\n  status: 'registered'\n}, {\n  id: 2,\n  email: \"dammy@gmail.com\",\n  firstName: \"dammy\",\n  lastName: \"Gonzalez\",\n  password: \"936379JUI\",\n  address: \"R280 wood west park, Milwaukee, USA\",\n  is_admin: false,\n  status: 'registered'\n}, {\n  id: 3,\n  email: \"sammy@gmail.com\",\n  firstName: \"Sammy\",\n  lastName: \"Bongo\",\n  password: \"333SSSHHH\",\n  address: \"3600 Pillhamton, Boston, USA\",\n  is_admin: false,\n  status: 'registered'\n}];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInVzZXJzIiwiaWQiLCJlbWFpbCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGFzc3dvcmQiLCJhZGRyZXNzIiwiaXNfYWRtaW4iLCJzdGF0dXMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsS0FBSyxHQUFHLENBQ2I7QUFFQ0MsRUFBQUEsRUFBRSxFQUFFLENBRkw7QUFHQ0MsRUFBQUEsS0FBSyxFQUFFLGlCQUhSO0FBSUlDLEVBQUFBLFNBQVMsRUFBRSxPQUpmO0FBS0lDLEVBQUFBLFFBQVEsRUFBRSxRQUxkO0FBTUlDLEVBQUFBLFFBQVEsRUFBRSxXQU5kO0FBT0lDLEVBQUFBLE9BQU8sRUFBRSxxQ0FQYjtBQVFJQyxFQUFBQSxRQUFRLEVBQUUsSUFSZDtBQVNJQyxFQUFBQSxNQUFNLEVBQUU7QUFUWixDQURhLEVBYWI7QUFFQ1AsRUFBQUEsRUFBRSxFQUFFLENBRkw7QUFHQ0MsRUFBQUEsS0FBSyxFQUFFLGlCQUhSO0FBSUlDLEVBQUFBLFNBQVMsRUFBRSxPQUpmO0FBS0lDLEVBQUFBLFFBQVEsRUFBRSxVQUxkO0FBTUlDLEVBQUFBLFFBQVEsRUFBRSxXQU5kO0FBT0lDLEVBQUFBLE9BQU8sRUFBRSxxQ0FQYjtBQVFJQyxFQUFBQSxRQUFRLEVBQUUsS0FSZDtBQVNJQyxFQUFBQSxNQUFNLEVBQUU7QUFUWixDQWJhLEVBd0JiO0FBQ0NQLEVBQUFBLEVBQUUsRUFBRSxDQURMO0FBRUNDLEVBQUFBLEtBQUssRUFBRSxpQkFGUjtBQUdJQyxFQUFBQSxTQUFTLEVBQUUsT0FIZjtBQUlJQyxFQUFBQSxRQUFRLEVBQUUsT0FKZDtBQUtJQyxFQUFBQSxRQUFRLEVBQUUsV0FMZDtBQU1JQyxFQUFBQSxPQUFPLEVBQUUsOEJBTmI7QUFPSUMsRUFBQUEsUUFBUSxFQUFFLEtBUGQ7QUFRSUMsRUFBQUEsTUFBTSxFQUFFO0FBUlosQ0F4QmEsQ0FBZCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEVyaWMgSWJ1XFxkZXNrdG9wXFxhdXRvbWFydFxcc2VydmVyXFx0ZXN0XFxtb2NrX2RiIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdXNlcnMgPSBbXHJcblx0e1xyXG5cdFxyXG5cdFx0aWQ6XHQxLFxyXG5cdFx0ZW1haWw6IFwiamFzb25AZ21haWwuY29tXCIsXHJcblx0ICAgIGZpcnN0TmFtZTogXCJKYXNvblwiLFxyXG5cdCAgICBsYXN0TmFtZTogXCJUcmVsbG9cIixcclxuXHQgICAgcGFzc3dvcmQ6IFwiNTU1U1NTNzc3XCIsXHJcblx0ICAgIGFkZHJlc3M6IFwiMzIxIHVwcGVyIGNyZXN0IHBhcmssIE5ldyBZb3JrLCBVU0FcIixcclxuXHQgICAgaXNfYWRtaW46IHRydWUsXHJcblx0ICAgIHN0YXR1czogJ3JlZ2lzdGVyZWQnXHJcblx0XHJcblx0fSxcclxuXHR7XHJcblx0XHJcblx0XHRpZDpcdDIsXHJcblx0XHRlbWFpbDogXCJkYW1teUBnbWFpbC5jb21cIixcclxuXHQgICAgZmlyc3ROYW1lOiBcImRhbW15XCIsXHJcblx0ICAgIGxhc3ROYW1lOiBcIkdvbnphbGV6XCIsXHJcblx0ICAgIHBhc3N3b3JkOiBcIjkzNjM3OUpVSVwiLFxyXG5cdCAgICBhZGRyZXNzOiBcIlIyODAgd29vZCB3ZXN0IHBhcmssIE1pbHdhdWtlZSwgVVNBXCIsXHJcblx0ICAgIGlzX2FkbWluOiBmYWxzZSxcclxuXHQgICAgc3RhdHVzOiAncmVnaXN0ZXJlZCdcclxuXHR9LFxyXG5cdHtcclxuXHRcdGlkOlx0MyxcclxuXHRcdGVtYWlsOiBcInNhbW15QGdtYWlsLmNvbVwiLFxyXG5cdCAgICBmaXJzdE5hbWU6IFwiU2FtbXlcIixcclxuXHQgICAgbGFzdE5hbWU6IFwiQm9uZ29cIixcclxuXHQgICAgcGFzc3dvcmQ6IFwiMzMzU1NTSEhIXCIsXHJcblx0ICAgIGFkZHJlc3M6IFwiMzYwMCBQaWxsaGFtdG9uLCBCb3N0b24sIFVTQVwiLFxyXG5cdCAgICBpc19hZG1pbjogZmFsc2UsXHJcblx0ICAgIHN0YXR1czogJ3JlZ2lzdGVyZWQnXHJcblx0fVxyXG5dOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "users",
        "id",
        "email",
        "firstName",
        "lastName",
        "password",
        "address",
        "is_admin",
        "status"
      ],
      "mappings": ";;AAAA,IAAMA,KAAK,GAAG,CACb;AAECC,EAAAA,EAAE,EAAE,CAFL;AAGCC,EAAAA,KAAK,EAAE,iBAHR;AAIIC,EAAAA,SAAS,EAAE,OAJf;AAKIC,EAAAA,QAAQ,EAAE,QALd;AAMIC,EAAAA,QAAQ,EAAE,WANd;AAOIC,EAAAA,OAAO,EAAE,qCAPb;AAQIC,EAAAA,QAAQ,EAAE,IARd;AASIC,EAAAA,MAAM,EAAE;AATZ,CADa,EAab;AAECP,EAAAA,EAAE,EAAE,CAFL;AAGCC,EAAAA,KAAK,EAAE,iBAHR;AAIIC,EAAAA,SAAS,EAAE,OAJf;AAKIC,EAAAA,QAAQ,EAAE,UALd;AAMIC,EAAAA,QAAQ,EAAE,WANd;AAOIC,EAAAA,OAAO,EAAE,qCAPb;AAQIC,EAAAA,QAAQ,EAAE,KARd;AASIC,EAAAA,MAAM,EAAE;AATZ,CAba,EAwBb;AACCP,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,KAAK,EAAE,iBAFR;AAGIC,EAAAA,SAAS,EAAE,OAHf;AAIIC,EAAAA,QAAQ,EAAE,OAJd;AAKIC,EAAAA,QAAQ,EAAE,WALd;AAMIC,EAAAA,OAAO,EAAE,8BANb;AAOIC,EAAAA,QAAQ,EAAE,KAPd;AAQIC,EAAAA,MAAM,EAAE;AARZ,CAxBa,CAAd",
      "sourceRoot": "C:\\Users\\Eric Ibu\\desktop\\automart\\server\\test\\mock_db",
      "sourcesContent": [
        "const users = [\r\n\t{\r\n\t\r\n\t\tid:\t1,\r\n\t\temail: \"jason@gmail.com\",\r\n\t    firstName: \"Jason\",\r\n\t    lastName: \"Trello\",\r\n\t    password: \"555SSS777\",\r\n\t    address: \"321 upper crest park, New York, USA\",\r\n\t    is_admin: true,\r\n\t    status: 'registered'\r\n\t\r\n\t},\r\n\t{\r\n\t\r\n\t\tid:\t2,\r\n\t\temail: \"dammy@gmail.com\",\r\n\t    firstName: \"dammy\",\r\n\t    lastName: \"Gonzalez\",\r\n\t    password: \"936379JUI\",\r\n\t    address: \"R280 wood west park, Milwaukee, USA\",\r\n\t    is_admin: false,\r\n\t    status: 'registered'\r\n\t},\r\n\t{\r\n\t\tid:\t3,\r\n\t\temail: \"sammy@gmail.com\",\r\n\t    firstName: \"Sammy\",\r\n\t    lastName: \"Bongo\",\r\n\t    password: \"333SSSHHH\",\r\n\t    address: \"3600 Pillhamton, Boston, USA\",\r\n\t    is_admin: false,\r\n\t    status: 'registered'\r\n\t}\r\n];"
      ]
    },
    "sourceType": "script",
    "mtime": 1561859279867
  }
}